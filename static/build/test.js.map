{"mappings":"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","sources":["static/js/helpers/checks.js","static/js/sprites/base/base.js","static/js/helpers/urls.js","static/js/sprites/weapons.js","static/js/core/hud.js","static/js/core/death_screen.js","static/js/sprites/objects.js","static/js/sprites/entities.js","static/js/core/collision.js","static/js/sprites/interactable.js","static/js/sprites/portals.js","static/js/map/creation.js","static/js/helpers/pixi_helpers.js","static/js/map/foyer/foyer.js","static/js/map/library/library.js","static/js/map/basement/basement.js","static/js/core/inventory.js","static/assets/sprite_sheets/enemies/clothed_zombie.json","static/js/core/Wave.js","static/js/core/WaveSystem.js","static/js/core/pause_menu.js","static/js/sprites/consumables.js","static/js/core/movement.js","static/assets/sprite_sheets/player/player.json","static/js/sprites/popups.js","static/js/dev/andrew/test.js"],"sourcesContent":["export function checkIfString(x) {\n    if (typeof x !== 'string') {\n        throw TypeError(\"Not a string\");\n    }\n};\n\nexport function checkIfNumber(x) {\n    if (typeof x !== 'number') {\n        throw TypeError(\"Not an integer or float\");\n    }\n};\n\nexport function checkIfInstance(x, c) {\n    if (c instanceof Object) {\n        const DESCRIPTORS = Object.getOwnPropertyDescriptors(c);\n\n        if (DESCRIPTORS.prototype === undefined || DESCRIPTORS.prototype.writable === undefined || DESCRIPTORS.prototype.writable === true) {\n            throw TypeError(\"Not a class\");\n        }\n    }\n    else {\n        throw TypeError(\"Not a class\");\n    }\n\n    if (x instanceof c === false) {\n        throw TypeError(\"Not an instance of \" + c.name);\n    }\n};\n\nexport function checkIfObject(x) {\n    if (x.constructor === undefined || x.constructor === null || x.constructor !== Object) {\n        throw TypeError(\"Not an object\");\n    }\n};\n\nexport function checkIfFunction(x) {\n    if (typeof x !== 'function' || Object.prototype.toString.call(x) !== '[object Function]') {\n        throw TypeError(\"Not a function\");\n    }\n};\n\nexport function checkIfKeyExistsInObject(o, k) {\n    checkIfObject(o);\n    checkIfString(k);\n\n    if (o[k] === undefined) {\n        throw ReferenceError(`The key '${k}' doesn't exist in the object`);\n    }\n};\n\nexport function checkIfArray(x) {\n    if (x.constructor !== Array) {\n        throw TypeError(\"Not an array\");\n    }\n};\n\nexport function checkIfBoolean(x) {\n    if (typeof x !== 'boolean') {\n        throw TypeError(\"Not a boolean.\");\n    }\n};\n","import * as checks from '../../helpers/checks.js';\n\nexport class Sprite {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        checks.checkIfInstance(texture, PIXI.Texture);\n        checks.checkIfNumber(posX);\n        checks.checkIfNumber(posY);\n        checks.checkIfNumber(frameWidth);\n        checks.checkIfNumber(frameHeight);\n\n        this.sprite = new PIXI.Sprite(texture);\n        this.spriteFrameWidth = frameWidth;\n        this.spriteFrameHeight = frameHeight;\n\n        this.sprite_container = new PIXI.Container();\n        this.sprite_container.addChild(this.sprite);\n        this.sprite_container.x = posX;\n        this.sprite_container.y = posY;\n\n        this.original_tint = this.sprite.tint;\n        this.frameMask = null;\n        this.frames = {};\n        this.currentFrame = null;\n\n        this.isFlippedHorizontally = false;\n        this.isFlippedVertically = false;\n\n        this.events = {};\n    };\n\n\n\n    // GETTERS\n    getLeftPosX() {\n        if (this.isFlippedHorizontally) {\n            return this.sprite_container.x - this.spriteFrameWidth;\n        }\n        else {\n            return this.sprite_container.x;\n        }\n    };\n\n    getLeftPosY() {\n        if (this.isFlippedVertically) {\n            return this.sprite_container.y - this.spriteFrameHeight;\n        }\n        else {\n            return this.sprite_container.y;\n        }\n    };\n\n    getRightPosX() {\n        if (this.isFlippedHorizontally) {\n            return this.sprite_container.x;\n        }\n        else {\n            return this.sprite_container.x + this.spriteFrameWidth;\n        }\n    };\n\n    getRightPosY() {\n        if (this.isFlippedVertically) {\n            return this.sprite_container.y;\n        }\n        else {\n            return this.sprite_container.y + this.spriteFrameHeight;\n        }\n    };\n\n    getCenterCoordinates() {\n        return {\n            x: this.getLeftPosX() + this.getHalfWidth(),\n            y: this.getLeftPosY() + this.getHalfHeight() \n        };\n    };\n\n    getSpriteFrameDimensions() {\n        return {w: this.spriteFrameWidth, h: this.spriteFrameHeight};\n    };\n\n    getHalfWidth() {\n        return this.spriteFrameWidth * 0.5;\n    };\n\n    getHalfHeight() {\n        return this.spriteFrameHeight * 0.5;\n    };\n\n    getCurrentFrame() {\n        return this.currentFrame;\n    };\n\n    getSprite() {\n        return this.sprite_container;\n    };\n\n\n\n    // SETTERS\n    __setFrameMask__(x, y, frameWidth, frameHeight) {\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n        checks.checkIfNumber(frameWidth);\n        checks.checkIfNumber(frameHeight);\n\n        this.sprite_container.removeChild(this.frameMask); // removes old frame mask\n\n        const MASK = new PIXI.Graphics();\n        MASK.beginFill('black');\n        MASK.drawRect(x, y, frameWidth, frameHeight);\n        MASK.endFill();\n\n        this.sprite.mask = MASK;\n        this.sprite_container.addChild(MASK);\n        this.frameMask = MASK;\n\n        this.spriteFrameWidth = frameWidth;\n        this.spriteFrameHeight = frameHeight;\n    };\n\n    setPosition(x, y) {\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        this.sprite_container.x = x;\n        this.sprite_container.y = y;\n    };\n\n    addEvent(event, callback) {\n        checks.checkIfString(event);\n        checks.checkIfFunction(callback);\n\n        if (this.events[event] === undefined) {\n            throw ReferenceError(\"Not a valid event\");\n        }\n\n        this.events[event].push(callback);\n    };\n\n    addFrame(name, x, y, w, h) {\n        checks.checkIfString(name);\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n        checks.checkIfNumber(w);\n        checks.checkIfNumber(h);\n\n        this.frames[name] = {\n            x: x,\n            y: y,\n            w: w,\n            h: h\n        };\n    };\n\n    addFrames(json) {\n        checks.checkIfObject(json);\n\n        const FRAME_NAMES = Object.keys(json);\n        const NUM_OF_FRAMES = FRAME_NAMES.length;\n\n        if (NUM_OF_FRAMES > 0) {\n            for (let i=0; i < NUM_OF_FRAMES; i++) {\n                const NAME = FRAME_NAMES[i];\n                const FRAME_DATA = json[NAME];\n\n                this.addFrame(\n                    NAME,\n                    FRAME_DATA.x,\n                    FRAME_DATA.y,\n                    FRAME_DATA.w,\n                    FRAME_DATA.h\n                );\n            }\n        }\n    };\n\n    switchFrame(name) {\n        const FRAME = this.frames[name];\n\n        this.sprite.x = -FRAME.x;\n        this.sprite.y = -FRAME.y;\n\n        this.__setFrameMask__(0, 0, FRAME.w, FRAME.h);\n\n        this.currentFrame = name;\n\n\n\n        const EVENT = this.events['onChangeFrame'];\n\n        if (EVENT !== undefined && EVENT !== null) {\n            const EVENT_CALLBACKS = EVENT;\n            const NUM_OF_CALLBACKS = EVENT_CALLBACKS.length;\n\n            for (let i=0; i < NUM_OF_CALLBACKS; i++) {\n                EVENT_CALLBACKS[i]({\n                    currentFrame: this.currentFrame\n                });\n            }\n        }\n    };\n\n    flipHorizontally() {\n        // adding/subtracting the frame width ensures that the sprite is still in the same x-position after the flip\n\n        if (this.isFlippedHorizontally) {\n            this.sprite_container.scale.x = 1;\n            this.sprite_container.x -= this.spriteFrameWidth;\n\n            this.isFlippedHorizontally = false;\n        }\n        else {\n            this.sprite_container.scale.x = -1;\n            this.sprite_container.x += this.spriteFrameWidth;\n\n            this.isFlippedHorizontally = true;\n        }\n    };\n\n    flipVertically() {\n        // adding/subtracting the frame height ensures that the sprite is still in the same y-position after the flip\n\n        if (this.isFlippedVertically) {\n            this.sprite_container.scale.y = 1;\n            this.sprite_container.y -= this.spriteFrameHeight;\n\n            this.isFlippedVertically = false;\n        }\n        else {\n            this.sprite_container.scale.y = -1;\n            this.sprite_container.y += this.spriteFrameHeight;\n\n            this.isFlippedVertically = true;\n        }\n    };\n};\n\nexport class FillSprite {\n    constructor(color, posX, posY, width, height) {\n        checks.checkIfNumber(color);\n        checks.checkIfNumber(posX);\n        checks.checkIfNumber(posY);\n        checks.checkIfNumber(width);\n        checks.checkIfNumber(height);\n\n        this.FILL = new PIXI.Graphics();\n        this.FILL.beginFill(color);\n        this.FILL.drawRect(0, 0, width, height);\n        this.FILL.endFill();\n        this.sprite = this.FILL;\n\n        this.sprite.x = posX;\n        this.sprite.y = posY;\n\n        this.fillWidth = width;\n        this.fillHeight = height;\n    };\n\n\n\n    // GETTERS\n    getLeftPosX() {\n        return this.sprite.x;\n    };\n\n    getLeftPosY() {\n        return this.sprite.y;\n    };\n\n    getRightPosX() {\n        return this.sprite.x + this.fillWidth;\n    };\n\n    getRightPosY() {\n        return this.sprite.y + this.fillHeight;\n    };\n\n    getCenterCoordinates() {\n        return {\n            x: this.getLeftPosX() + this.getHalfWidth(),\n            y: this.getLeftPosY() + this.getHalfHeight() \n        };\n    };\n\n    getFillDimensions() {\n        return {w: this.fillWidth, h: this.fillHeight};\n    };\n\n    getHalfWidth() {\n        return this.fillWidth * 0.5;\n    };\n\n    getHalfHeight() {\n        return this.fillHeight * 0.5;\n    };\n\n    getSprite() {\n        return this.sprite;\n    };\n\n\n\n    // SETTERS\n    setPosition(x, y) {\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        this.sprite.x = x;\n        this.sprite.y = y;\n    };\n\n    setFillDimensions(w, h) {\n        checks.checkIfNumber(w);\n        checks.checkIfNumber(h);\n\n        this.fillWidth = w;\n        this.fillHeight = h;\n    };\n\n    setAlpha(alpha) {\n        checks.checkIfNumber(alpha);\n\n        if (alpha < 0 || alpha > 1) {\n            throw Error(\"Alpha must be a value between 0 and 1.\");\n        }\n\n        this.FILL.alpha = alpha;\n    };\n};\n\n\n\nexport class Item {\n    constructor(texture) {\n        checks.checkIfInstance(texture, PIXI.Texture);\n\n        this.texture = texture;\n        this.icon = new PIXI.Sprite(texture);\n    };\n\n\n\n    // GETTERS\n    getIcon() {\n        return this.icon;\n    };\n};\n","const ABSOLUTE_URL = window.location.href;\nconst CURRENT_WORKING_DIRECTORY = ABSOLUTE_URL.substring(0, ABSOLUTE_URL.indexOf('/static/'));\n\nexport const STATIC_FOLDER = `${CURRENT_WORKING_DIRECTORY}/static`;\n\nexport const STATIC_JS_FOLDER = `${STATIC_FOLDER}/js`;\n\nexport const STATIC_ASSETS_FOLDER = `${STATIC_FOLDER}/assets`;\n\nexport const SOUND_ASSETS_FOLDER = `${STATIC_ASSETS_FOLDER}/sounds`;\n","import * as checks from '../helpers/checks.js';\nimport { Item } from './base/base.js'; \nimport { updateAmmoCount } from '../core/hud.js';\n\nimport {\n    STATIC_ASSETS_FOLDER,\n    SOUND_ASSETS_FOLDER\n} from '../helpers/urls.js';\n\n\n\nexport function toggleCrosshair(container) {\n    checks.checkIfInstance(container, PIXI.Container);\n\n    if (window.HOTBAR !== undefined && window.HOTBAR !== null) {\n        if (window.HOTBAR.getSelItem() instanceof Gun) {\n            container.cursor = `url(${STATIC_ASSETS_FOLDER}/guns/crosshair.png), auto`;\n        }\n        else {\n            container.cursor = 'auto';\n        }\n    }\n};\n\n\n\nexport class Weapon extends Item {\n    constructor(texture) {\n        super(texture);\n\n    };\n\n\n\n    // SETTERS\n    createCopy(texture, x, y, w, h) {\n        checks.checkIfInstance(texture, PIXI.Texture);\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n        checks.checkIfNumber(w);\n        checks.checkIfNumber(h);\n\n        const COPY = new PIXI.Sprite(this.texture);\n        COPY.x = x;\n        COPY.y = y;\n        COPY.width = w;\n        COPY.height = h;\n\n        return COPY;\n    };\n};\n\nexport class Gun extends Weapon {\n    constructor(texture) {\n        super(texture);\n    };\n\n\n\n    // GETTERS\n    getAmmoLoaded() {\n        if (this.ammoLoaded < 0) {\n            return 0;\n        }\n\n        return this.ammoLoaded;\n    };\n\n    getMaxAmmo(){\n        return this.maxAmmo\n    }\n\n    getAmmoLeft() {\n        return this.ammoLeft;\n    };\n\n    getClipCapacity() {\n        return this.clipCapacity;\n    };\n\n    playGunFireSound() {\n        new Audio(this.gunFireSoundFile).play();\n    };\n\n    playReloadSound() {\n        const AUDIO = new Audio(this.reloadSoundFile);\n\n        AUDIO.play();\n\n        return AUDIO;\n    };\n\n    getDamage() {\n        return this.damage;\n    };\n\n\n\n    // SETTERS\n    fire() {\n        if (this.mode === 'semi-auto') {\n            this.ammoLoaded -= 1;\n        }\n\n        if (this.ammoLoaded > -1) {\n            this.playGunFireSound();\n\n            updateAmmoCount(this);\n        }\n\n        if (this.ammoLoaded === 0 && this.ammoLeft > 0) {\n            this.reload();\n        }\n    };\n\n    reload() {\n        this.playReloadSound();\n\n        setTimeout(() => {\n            if (this.ammoLoaded <= 0) {\n                // clip is empty (auto reload)\n\n                if (this.ammoLeft >= 12) {\n                    this.ammoLeft -= this.clipCapacity;\n\n                    this.ammoLoaded = this.clipCapacity;\n                }\n                else if (this.ammoLeft < 12) {\n                    this.ammoLoaded = this.ammoLeft;\n\n                    this.ammoLeft -= this.ammoLeft;\n                }\n            }\n            else if (this.ammoLoaded > 0) {\n                // clip is not empty (manual reload)\n\n                const AMMO_NEEDED = this.clipCapacity - this.ammoLoaded;\n\n                if (this.ammoLeft >= AMMO_NEEDED) {\n                    this.ammoLoaded += AMMO_NEEDED;\n\n                    this.ammoLeft -= AMMO_NEEDED;\n                }\n                else if (this.ammoLeft < AMMO_NEEDED) {\n                    this.ammoLoaded += this.ammoLeft;\n\n                    this.ammoLeft -= this.ammoLeft;\n                }\n            }\n\n            updateAmmoCount(this);\n\n        }, this.reloadDuration);\n    };\n\n    addMaxAmmo(amount){\n        this.ammoLeft = amount;\n\n        updateAmmoCount(this);\n    };\n\n    setDamage(amount){\n        this.damage = amount\n    }\n\n    increaseDamage(amount){\n        this.damage += amount\n    }\n\n    increaseClipCapacity(amount){\n        this.clipCapacity += amount\n    }\n\n    increaseMaxAmmo(amount){\n        this.maxAmmo += amount\n    }\n\n\n\n};\n\nexport class Pistol extends Gun {\n    constructor(texture) {\n        super(texture);\n\n        this.gunFireSoundFile = `${SOUND_ASSETS_FOLDER}/pistol.mp3`;\n        this.reloadSoundFile = `${SOUND_ASSETS_FOLDER}/pistol_reload.mp3`;\n        this.reloadDuration = 1000; // milliseconds\n\n        this.mode = 'semi-auto';\n\n        this.clipCapacity = 12;\n        this.ammoLoaded = this.clipCapacity;\n        this.ammoLeft = 60;\n        this.maxAmmo = this.ammoLeft\n        this.damage = 25;\n    };\n\n\n\n    // GETTERS\n    loadNorth() {\n        const PISTOL = this.createCopy(this.texture, 25, 18, 25, 25);\n\n        PISTOL.scale.y = -1;\n        PISTOL.rotation = 4.6;\n\n        return PISTOL;\n    };\n\n    loadSouth() {\n        const PISTOL = this.createCopy(this.texture, 0, 20, 25, 25);\n\n        PISTOL.scale.y = -1;\n        PISTOL.rotation = 1.5;\n\n        return PISTOL;\n    };\n\n    loadWest() {\n        const PISTOL = this.createCopy(this.texture, 18, 8, 25, 25);\n\n        PISTOL.scale.x = -1;\n\n        return PISTOL;\n    };\n\n    loadEast() {\n        const PISTOL = this.createCopy(this.texture, 5, 8, 25, 25);\n\n        return PISTOL;\n    };\n};","import * as checks from '../helpers/checks.js';\nimport { Gun } from '../sprites/weapons.js';\n\nconst HUD_TEXT_STYLES = {\n    fontSize: 20,\n    fill: 0xffffff,\n};\n\n\n\nexport const PLAYER_HEALTH_STATUS = new PIXI.Text('Health: 100', HUD_TEXT_STYLES);\nPLAYER_HEALTH_STATUS.x = 20;\nPLAYER_HEALTH_STATUS.y = 10;\n\nexport function updatePlayerHealthStatus(new_value) {\n    checks.checkIfNumber(new_value);\n\n    PLAYER_HEALTH_STATUS.text = 'Health: ' + new_value;\n};\n\nexport const PLAYER_POINTS = new PIXI.Text('Points: 1000', HUD_TEXT_STYLES);\nPLAYER_POINTS.x = 300;\nPLAYER_POINTS.y = 10;\n\n\n\nexport function updatePlayerPointsText(new_value) {\n    checks.checkIfNumber(new_value);\n\n    PLAYER_POINTS.text = 'Points: ' + new_value;\n};\n\n\n\nexport const AMMO_COUNT = new PIXI.Text('Ammo: n/a', HUD_TEXT_STYLES);\nAMMO_COUNT.x = 160;\nAMMO_COUNT.y = 10;\n\nexport function updateAmmoCount(gun) {\n    checks.checkIfInstance(gun, Gun);\n\n    AMMO_COUNT.text = `Ammo: ${gun.getAmmoLoaded()}/${gun.getAmmoLeft()}`;\n};\n\nexport function hideAmmoCount() {\n    AMMO_COUNT.text = '';\n};","const DEATH_SCREEN = document.getElementById('death-screen');\nconst TIME_SURVIVED = document.getElementById('time-survived');\nconst POINTS_EARNED = document.getElementById('points-earned');\n\nDEATH_SCREEN.addEventListener('click', (event) => {\n    const ELEMENT_CLICKED = event.target;\n\n    if (ELEMENT_CLICKED.tagName === 'BUTTON') {\n        const ACTION = ELEMENT_CLICKED.getAttribute('data-action');\n\n        if (ACTION === 'exit') {\n            window.location.assign('/');\n        }\n    };\n});\n\nexport function showDeathScreen() {\n    window.GAME_PAUSED = true;\n\n\n\n    // calculates how long the player survived\n    const MS_ELAPSED = new Date() - window.timeGameStarted;\n    const HRS = Math.round(MS_ELAPSED / 3.6e+6);\n    const MINS = Math.round(MS_ELAPSED / 60000);\n    const SECS = Math.round(MS_ELAPSED / 1000);\n\n    let hrs = 0;\n    let mins = 0;\n    let secs = 0;\n\n    if (HRS > 0.1) {\n        hrs = HRS;\n    }\n    if (MINS > 0.1) {\n        mins = MINS;\n    }\n    if (SECS > 0.1) {\n        secs = SECS;\n    }\n\n    TIME_SURVIVED.innerText = `${hrs}h:${mins}m:${secs}s`;\n\n\n\n    const XHR = new XMLHttpRequest();\n    XHR.open('POST', '/store_score');\n    XHR.setRequestHeader('Content-Type', 'application/json');\n    XHR.send(JSON.stringify({\n        millisecondsSurvived: MS_ELAPSED,\n        pointsEarned: 0\n    }));\n\n\n\n    DEATH_SCREEN.classList.remove('hide');\n};","import * as checks from '../helpers/checks.js';\n\nimport {\n    Sprite,\n    FillSprite\n} from './base/base.js';\n\n\n\nexport class Objects extends Sprite {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n    };\n};\n\nexport class Obstacle extends Objects {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.detours = {\n            'top': [],\n            'bottom': [],\n            'left': [],\n            'right': []\n        };\n    };\n\n\n\n    // GETTERS\n    checkIfLeftEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\n            // if the sprite's bottom edge is higher than the object's top edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\n            // if the sprite's top edge is lower than the object's bottom edge\n            return false;\n        }\n        else if (sprite.getRightPosX() < this.getLeftPosX()) {\n            // if the sprite's right edge is far from the object's left edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getLeftPosX()) {\n            // if the sprite's left edge is beyond the object's left edge\n            return false;\n        }\n\n        return true;\n    };\n\n    checkIfRightEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\n            // if the sprite's bottom edge is higher than the object's top edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\n            // if the sprite's top edge is lower than the object's bottom edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\n            // if the sprite's left edge is far from the object's right edge\n            return false;\n        }\n        else if (sprite.getRightPosX() < this.getRightPosX()) {\n            // if the sprite's right edge is beyond the object's right edge\n            return false;\n        }\n\n        return true;\n    };\n\n    checkIfTopEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\n            // if the sprite's right edge is far from the object's left edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\n            // if the sprite's left edge is far from the object's right edge\n            return false;\n        }\n        else if (sprite.getRightPosY() < this.getLeftPosY()) {\n            // if the sprite's bottom edge is higher than the object's top edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getLeftPosY()) {\n            // if the sprite's top edge is beyond the object's top edge\n            return false;\n        }\n\n        return true;\n    };\n\n    checkIfBottomEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\n            // if the sprite's right edge is far from the object's left edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\n            // if the sprite's left edge is far from the object's right edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\n            // if the sprite's top edge is lower than the object's bottom edge\n            return false;\n        }\n        else if (sprite.getRightPosY() < this.getRightPosY()) {\n            // if the sprite's bottom edge is beyond the object's bottom edge\n            return false;\n        }\n\n        return true;\n    };\n\n    getDetours(edge) {\n        checks.checkIfString(edge);\n\n        return this.detours[edge];\n    };\n\n\n\n    // SETTERS\n    __addDetour__(array_of_points, edge) {\n        checks.checkIfArray(array_of_points);\n        checks.checkIfString(edge);\n\n        const NUM_OF_ELEMENTS = array_of_points.length;\n\n        for (let i=0; i < NUM_OF_ELEMENTS; i++) {\n            const E = array_of_points[i];\n\n            checks.checkIfObject(E);\n\n            if (E.x === undefined || E.y === undefined) {\n                throw SyntaxError(`Element ${i} is not a valid point object. It must have an x and a y property`);\n            }\n\n            checks.checkIfNumber(E.x);\n            checks.checkIfNumber(E.y);\n        }\n\n        this.detours[edge].push(array_of_points);\n    };\n\n    addBottomEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'bottom');\n    };\n\n    addTopEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'top');\n    };\n\n    addLeftEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'left');\n    };\n\n    addRightEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'right');\n    };\n};\n\nexport class Decoration extends Objects {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n    };\n};\n\nexport class SemiSolid extends Obstacle {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.boundaryLeftX = 0;\n        this.boundaryLeftY = 0;\n        this.boundaryRightX = 0;\n        this.boundaryRightY = 0;\n    };\n\n\n\n    // SETTERS\n    modifyCollisionBoundary(leftX, leftY, rightX, rightY) {\n        if (leftX !== null && leftX !== undefined) {\n            checks.checkIfNumber(leftX);\n            this.boundaryLeftX = leftX;\n        }\n        if (leftY !== null && leftY !== undefined) {\n            checks.checkIfNumber(leftY);\n            this.boundaryLeftY = leftY;\n        }\n        if (rightX !== null && rightX !== undefined) {\n            checks.checkIfNumber(rightX);\n            this.boundaryRightX = rightX;\n        }\n        if (rightY !== null && rightY !== undefined) {\n            checks.checkIfNumber(rightY);\n            this.boundaryRightY = rightY;\n        }\n    };\n\n\n\n    // GETTERS\n    getLeftPosX() {\n        if (this.isFlippedHorizontally) {\n            return (this.sprite_container.x + this.boundaryLeftX) - this.spriteFrameWidth;\n        }\n        else {\n            return this.sprite_container.x + this.boundaryLeftX;\n        }\n    };\n\n    getLeftPosY() {\n        if (this.isFlippedVertically) {\n            return (this.sprite_container.y + this.boundaryLeftY) - this.spriteFrameHeight;\n        }\n        else {\n            return this.sprite_container.y + this.boundaryLeftY;\n        }\n    };\n\n    getRightPosX() {\n        if (this.isFlippedHorizontally) {\n            return this.sprite_container.x + this.boundaryLeftX;\n        }\n        else {\n            return this.sprite_container.x + (this.spriteFrameWidth + this.boundaryRightX);\n        }\n    };\n\n    getRightPosY() {\n        if (this.isFlippedVertically) {\n            return this.sprite_container.y + this.boundaryLeftY;\n        }\n        else {\n            return this.sprite_container.y + (this.spriteFrameHeight + this.boundaryRightY);\n        }\n    };\n};\n\n\n\nexport class ObstacleFill extends FillSprite {\n    constructor(color, posX, posY, width, height) {\n        super(color, posX, posY, width, height);\n\n        this.detours = {\n            'top': [],\n            'bottom': [],\n            'left': [],\n            'right': []\n        };\n    };\n\n\n\n    // GETTERS\n    checkIfLeftEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\n            // if the sprite's bottom edge is higher than the object's top edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\n            // if the sprite's top edge is lower than the object's bottom edge\n            return false;\n        }\n        else if (sprite.getRightPosX() < this.getLeftPosX()) {\n            // if the sprite's right edge is far from the object's left edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getLeftPosX()) {\n            // if the sprite's left edge is beyond the object's left edge\n            return false;\n        }\n\n        return true;\n    };\n\n    checkIfRightEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\n            // if the sprite's bottom edge is higher than the object's top edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\n            // if the sprite's top edge is lower than the object's bottom edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\n            // if the sprite's left edge is far from the object's right edge\n            return false;\n        }\n        else if (sprite.getRightPosX() < this.getRightPosX()) {\n            // if the sprite's right edge is beyond the object's right edge\n            return false;\n        }\n\n        return true;\n    };\n\n    checkIfTopEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\n            // if the sprite's right edge is far from the object's left edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\n            // if the sprite's left edge is far from the object's right edge\n            return false;\n        }\n        else if (sprite.getRightPosY() < this.getLeftPosY()) {\n            // if the sprite's bottom edge is higher than the object's top edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getLeftPosY()) {\n            // if the sprite's top edge is beyond the object's top edge\n            return false;\n        }\n\n        return true;\n    };\n\n    checkIfBottomEdgeCollisionOccurred(sprite) {\n        checks.checkIfInstance(sprite, Sprite);\n\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\n            // if the sprite's right edge is far from the object's left edge\n            return false;\n        }\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\n            // if the sprite's left edge is far from the object's right edge\n            return false;\n        }\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\n            // if the sprite's top edge is lower than the object's bottom edge\n            return false;\n        }\n        else if (sprite.getRightPosY() < this.getRightPosY()) {\n            // if the sprite's bottom edge is beyond the object's bottom edge\n            return false;\n        }\n\n        return true;\n    };\n\n    getDetours(edge) {\n        checks.checkIfString(edge);\n\n        return this.detours[edge];\n    };\n\n\n\n    // SETTERS\n    __addDetour__(array_of_points, edge) {\n        checks.checkIfArray(array_of_points);\n        checks.checkIfString(edge);\n\n        const NUM_OF_ELEMENTS = array_of_points.length;\n\n        for (let i=0; i < NUM_OF_ELEMENTS; i++) {\n            const E = array_of_points[i];\n\n            checks.checkIfObject(E);\n\n            if (E.x === undefined || E.y === undefined) {\n                throw SyntaxError(`Element ${i} is not a valid point object. It must have an x and a y property`);\n            }\n\n            checks.checkIfNumber(E.x);\n            checks.checkIfNumber(E.y);\n        }\n\n        this.detours[edge].push(array_of_points);\n    };\n\n    addBottomEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'bottom');\n    };\n\n    addTopEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'top');\n    };\n\n    addLeftEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'left');\n    };\n\n    addRightEdgeDetour(array_of_points) {\n        this.__addDetour__(array_of_points, 'right');\n    };\n};\n\nexport class DecorationFill extends FillSprite {\n    constructor(color, posX, posY, width, height) {\n        super(color, posX, posY, width, height);\n    };\n};\n\nexport class SemiSolidFill extends ObstacleFill {\n    constructor(color, posX, posY, width, height) {\n        super(color, posX, posY, width, height);\n\n        this.boundaryLeftX = 0;\n        this.boundaryLeftY = 0;\n        this.boundaryRightX = 0;\n        this.boundaryRightY = 0;\n    };\n\n\n\n    // SETTERS\n    modifyCollisionBoundary(leftX, leftY, rightX, rightY) {\n        if (leftX !== null && leftX !== undefined) {\n            checks.checkIfNumber(leftX);\n            this.boundaryLeftX = leftX;\n        }\n        if (leftY !== null && leftY !== undefined) {\n            checks.checkIfNumber(leftY);\n            this.boundaryLeftY = leftY;\n        }\n        if (rightX !== null && rightX !== undefined) {\n            checks.checkIfNumber(rightX);\n            this.boundaryRightX = rightX;\n        }\n        if (rightY !== null && rightY !== undefined) {\n            checks.checkIfNumber(rightY);\n            this.boundaryRightY = rightY;\n        }\n    };\n\n\n\n    // GETTERS\n    getLeftPosX() {\n        return this.sprite.x + this.boundaryLeftX;\n    };\n\n    getLeftPosY() {\n        return this.sprite.y + this.boundaryLeftY;\n    };\n\n    getRightPosX() {\n        return this.sprite.x + (this.fillWidth + this.boundaryRightX);\n    };\n\n    getRightPosY() {\n        return this.sprite.y + (this.fillHeight + this.boundaryRightY);\n    };\n};\n","import * as checks from '../helpers/checks.js';\nimport { Sprite } from './base/base.js';\nimport { NON_PLAYER_ENTITIES } from '../core/collision.js';\nimport { Item } from '../sprites/base/base.js';\nimport { updatePlayerHealthStatus } from '../core/hud.js';\n\nimport {\n    showDeathScreen,\n    hideDeathScreen\n} from '../core/death_screen.js';\n\nimport {\n    toggleCrosshair,\n    Weapon,\n    Gun\n} from './weapons.js';\n\nimport {\n    Obstacle,\n    ObstacleFill\n} from '../sprites/objects.js';\n\nimport {\n    checkCollisionWithBottomEdgesOfObstacles,\n    checkCollisionWithLeftEdgesOfObstacles,\n    checkCollisionWithRightEdgesOfObstacles,\n    checkCollisionWithTopEdgesOfObstacles\n} from '../core/collision.js';\nimport {SOUND_ASSETS_FOLDER} from \"../helpers/urls\";\n\n\n\nexport class Entity extends Sprite {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.movementOffset = 5;\n\n        this.events = {\n            move: [],\n            onChangeFrame: []\n        };\n\n        this.itemInstance = null;\n        this.equippedItem = null;\n\n\n\n        this.addEvent('onChangeFrame', () => {\n            if (this.itemInstance !== null) {\n                this.sprite_container.removeChild(this.equippedItem);\n\n                if (this.itemInstance instanceof Weapon) {\n                    this.__renderWeapon__(this.itemInstance, this.currentFrame);\n                }\n            }\n        });\n    };\n\n\n\n    // GETTERS\n    __renderWeapon__(weapon, frame) {\n        checks.checkIfInstance(weapon, Weapon);\n        checks.checkIfString(frame);\n\n        if (frame === 'n' || frame === 'nl' || frame === 'nr') {\n            this.equippedItem = weapon.loadNorth();\n\n            this.sprite_container.addChildAt(this.equippedItem, 0);\n\n            return;\n        }\n        else if (frame === 's' || frame === 'sl' || frame === 'sr') {\n            this.equippedItem = weapon.loadSouth();\n        }\n        else if (frame === 'w' || frame === 'wl' || frame === 'wr') {\n            this.equippedItem = weapon.loadWest();\n        }\n        else if (frame === 'e' || frame === 'el' || frame === 'er') {\n            this.equippedItem = weapon.loadEast();\n        }\n\n        this.sprite_container.addChild(this.equippedItem);\n    };\n\n    getSpeed() {\n        return this.movementOffset;\n    };\n\n\n\n    // SETTERS\n    equip(item) {\n        checks.checkIfInstance(item, Item);\n\n        this.itemInstance = item;\n\n        if (item instanceof Weapon) {\n            this.__renderWeapon__(item, this.currentFrame);\n        }\n    };\n\n    unequip() {\n        this.sprite_container.removeChild(this.equippedItem);\n\n        this.itemInstance = null;\n        this.equippedItem = null;\n    };\n\n    showDamage() {\n        this.sprite.tint = 0xff0000;\n    };\n\n    hideDamage() {\n        this.sprite.tint = this.original_tint;\n    };\n\n    setSpeed(speed) {\n        checks.checkIfNumber(speed);\n\n        this.movementOffset = speed;\n    };\n\n    moveSprite(x, y) {\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        this.sprite_container.x += x;\n        this.sprite_container.y += y;\n\n\n\n        const EVENT = this.events['move'];\n\n        if (EVENT !== undefined && EVENT !== null) {\n            const EVENT_CALLBACKS = EVENT;\n            const NUM_OF_CALLBACKS = EVENT_CALLBACKS.length;\n\n            for (let i=0; i < NUM_OF_CALLBACKS; i++) {\n                EVENT_CALLBACKS[i]({\n                    currentFrame: this.currentFrame\n                });\n            }\n        } \n    };\n\n    moveSpriteNorth() {\n        this.moveSprite(0, -this.movementOffset);\n    };\n\n    moveSpriteNorthWest() {\n        this.moveSprite(-this.movementOffset, -this.movementOffset);\n    };\n\n    moveSpriteNorthEast() {\n        this.moveSprite(this.movementOffset, -this.movementOffset);\n    };\n\n    moveSpriteWest() {\n        this.moveSprite(-this.movementOffset, 0);\n    };\n\n    moveSpriteEast() {\n        this.moveSprite(this.movementOffset, 0);\n    };\n\n    moveSpriteSouth() {\n        this.moveSprite(0, this.movementOffset);\n    };\n\n    moveSpriteSouthWest() {\n        this.moveSprite(-this.movementOffset, this.movementOffset);\n    };\n\n    moveSpriteSouthEast() {\n        this.moveSprite(this.movementOffset, this.movementOffset);\n    };\n};\n\nexport class Player extends Entity {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.health = 100;\n        this.invincibility = false;\n        this.currentPoints = 1000;\n\n\n\n        let reset_to_idle_timer = null;\n\n        this.addEvent('move', (event) => {\n            clearTimeout(reset_to_idle_timer);\n\n            reset_to_idle_timer = setTimeout(() => {\n                this.rotateToMouse(); // resets player sprite to the idle frame\n            }, 100);\n\n\n\n            // moving animation for hands\n            if (new Date().getMilliseconds() % 2 === 0) {\n                if (event.currentFrame === 's' || event.currentFrame === 'sr') {\n                    this.switchFrame('sl');\n                }\n                else if (event.currentFrame === 'sl') {\n                    this.switchFrame('sr');\n                }\n                else if (event.currentFrame === 'e' || event.currentFrame === 'er') {\n                    this.switchFrame('el');\n                }\n                else if (event.currentFrame === 'w' || event.currentFrame === 'wr') {\n                    this.switchFrame('wl');\n                }\n                else if (event.currentFrame === 'wl') {\n                    this.switchFrame('wr');\n                }\n                else if (event.currentFrame === 'e' || event.currentFrame === 'er') {\n                    this.switchFrame('el');\n                }\n                else if (event.currentFrame === 'el') {\n                    this.switchFrame('er');\n                }\n                else if (event.currentFrame === 'n' || event.currentFrame === 'nr') {\n                    this.switchFrame('nl');\n                }\n                else if (event.currentFrame === 'nl') {\n                    this.switchFrame('nr');\n                }\n            }\n        });\n    };\n\n\n\n    // GETTERS\n    isInvincible() {\n        return this.invincibility;\n    };\n\n    getHealth() {\n        return this.health;\n    };\n\n\n\n    // SETTERS\n    rotateToMouse() {\n        const PLAYER_CENTER = this.getCenterCoordinates(); // relative to parent\n        let player_sprite_parent = this.sprite_container.parent;\n\n        let corrected_offsetX = PLAYER_CENTER.x + player_sprite_parent.x;\n        let corrected_offsetY = PLAYER_CENTER.y + player_sprite_parent.y;\n\n        while (player_sprite_parent.parent !== null) {\n            player_sprite_parent = player_sprite_parent.parent;\n\n            corrected_offsetX += player_sprite_parent.x;\n            corrected_offsetY += player_sprite_parent.y;\n        }\n\n        const MOUSE_X_DISTANCE_FROM_PLAYER = window.mouseX - corrected_offsetX;\n        const MOUSE_Y_DISTANCE_FROM_PLAYER = window.mouseY - corrected_offsetY;\n        const MOUSE_ANGLE_FROM_PLAYER = Math.round(Math.atan2(MOUSE_Y_DISTANCE_FROM_PLAYER, MOUSE_X_DISTANCE_FROM_PLAYER) * 180 / Math.PI);\n\n        /*\n            -90\n        -180    0\n            90\n        */\n\n        if (MOUSE_ANGLE_FROM_PLAYER >= -145 && MOUSE_ANGLE_FROM_PLAYER <= -45) {\n            this.switchFrame('n');\n        }\n        else if (MOUSE_ANGLE_FROM_PLAYER >= -180 && MOUSE_ANGLE_FROM_PLAYER < -145 || MOUSE_ANGLE_FROM_PLAYER <= 180 && MOUSE_ANGLE_FROM_PLAYER > 145 ) {\n            this.switchFrame('w');\n        }\n        else if (MOUSE_ANGLE_FROM_PLAYER <= 145 && MOUSE_ANGLE_FROM_PLAYER > 45) {\n            this.switchFrame('s');\n        }\n        else if (MOUSE_ANGLE_FROM_PLAYER >= 0 && MOUSE_ANGLE_FROM_PLAYER <= 45 || MOUSE_ANGLE_FROM_PLAYER < 0 && MOUSE_ANGLE_FROM_PLAYER > -45) {\n            this.switchFrame('e');\n        }\n    };\n\n    activateInvincibility() {\n        this.invincibility = true;\n\n        setTimeout(() => {\n            this.invincibility = false;\n\n            this.hideDamage();\n        }, 1000);\n    };\n\n    setHealth(health) {\n        checks.checkIfNumber(health);\n\n        this.health = health;\n    };\n\n    increaseHealth(value) {\n        checks.checkIfNumber(value);\n\n        this.health += value;\n\n        if (this.health > 100) {\n            this.health = 100;\n        }\n\n        updatePlayerHealthStatus(this.health);\n    };\n\n    decreaseHealth(value) {\n        checks.checkIfNumber(value);\n\n        this.health -= value;\n\n        this.showDamage();\n        updatePlayerHealthStatus(this.health);\n\n        if (this.health < 0) {\n            this.health = 0;\n        }\n\n        if (this.health === 0) {\n            this.sprite.parent.removeChild(this.sprite); // un-renders player\n\n            showDeathScreen();\n        }\n    };\n};\n\nexport class Enemy extends Entity {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.navigationMode = 0;\n        this.objectCollidedWith = null;\n        this.edgeCollidedWith = null;\n        this.detourChosen = null;\n        this.detourPointIndex = 0;\n        this.isDead = false\n\n        NON_PLAYER_ENTITIES.push(this);\n\n\n\n        this.sprite_container.interactive = true;\n\n        this.sprite_container.on('mousedown', (event) => {\n            event.stopPropagation();\n\n            if (window.HOTBAR !== undefined && window.HOTBAR !== null) {\n                const SELECTED_ITEM = window.HOTBAR.getSelItem();\n\n                if (SELECTED_ITEM instanceof Gun) {\n                    SELECTED_ITEM.fire();\n\n                    if (SELECTED_ITEM.ammoLoaded > 0) {\n                        this.decreaseHealth(SELECTED_ITEM.getDamage());\n\n                        this.showDamage();\n\n                        setTimeout(() => {\n                            this.hideDamage();\n                        }, 500);\n                    }\n                }\n            }\n        });\n\n        this.sprite_container.on('mousemove', () => {\n            toggleCrosshair(this.sprite_container);\n        });\n    };\n\n\n\n    // GETTERS\n    __getMoveDirectionFromAngle__(angle) {\n        checks.checkIfNumber(angle);\n\n        if (angle >= -120 && angle <= -60) {\n            return 'n';\n        }\n        else if (angle >= -150 && angle <= -120) {\n            return 'nw';\n        }\n        else if ((angle >= -180 && angle <= -150) || (angle <= 180 && angle >= 150)) {\n            return 'w';\n        }\n        else if (angle <= 150 && angle >= 120) {\n            return 'sw';\n        }\n        else if (angle <= 120 && angle >= 60) {\n            return 's';\n        }\n        else if (angle <= 60 && angle >= 30) {\n            return 'se';\n        }\n        else if ((angle <= 30 && angle >= 0) || (angle <= 0 && angle >= -30)) {\n            return 'e';\n        }\n        else if (angle <= -30 && angle >= -60) {\n            return 'ne';\n        }\n    };\n\n    __getEnemyXandYDistanceFromPlayer__(player) {\n        checks.checkIfInstance(player, Player);\n\n        const PLAYER_SPRITE = player.getSprite();\n        const PLAYER_CENTER = player.getCenterCoordinates();\n        const ENEMY_CENTER = this.getCenterCoordinates(); // relative to parent\n\n        const ENEMY_X_DISTANCE_FROM_PLAYER = (PLAYER_CENTER.x + PLAYER_SPRITE.x) - (ENEMY_CENTER.x + this.sprite_container.x);\n        const ENEMY_Y_DISTANCE_FROM_PLAYER = (PLAYER_CENTER.y + PLAYER_SPRITE.y) - (ENEMY_CENTER.y + this.sprite_container.y);\n\n        return {\n            dx: ENEMY_X_DISTANCE_FROM_PLAYER,\n            dy: ENEMY_Y_DISTANCE_FROM_PLAYER\n        };\n    };\n\n    __getAngleToPlayer__(player) {\n        /*\n            -90\n        -180    0\n            90\n        */\n\n        const DISTANCES = this.__getEnemyXandYDistanceFromPlayer__(player);\n\n        return Math.round(Math.atan2(DISTANCES.dy, DISTANCES.dx) * 180 / Math.PI);\n    };\n\n    getClosestDetour(object, edge) {\n        if (object instanceof Obstacle === false && object instanceof ObstacleFill === false) {\n            return; // silently fail\n        }\n\n        checks.checkIfString(edge);\n        edge = edge.toLowerCase();\n\n        if (edge !== 'bottom' && edge !== 'top' && edge !== 'left' && edge !== 'right') {\n            throw ReferenceError(\"Edge can only be one of the following: top, bottom, left, right\");\n        }\n\n        const ALL_DETOURS = object.getDetours(edge);\n\n        const ENTITY_CENTER = this.getCenterCoordinates();\n\n        let closestDetour = null;\n        let previousDistance = null;\n        const NUM_OF_DETOURS = ALL_DETOURS.length;\n\n        for (let i=0; i < NUM_OF_DETOURS; i++) {\n            const START_OF_DETOUR = ALL_DETOURS[i][0];\n\n            const DISTANCE = Math.round(Math.sqrt(Math.pow(ENTITY_CENTER.x - START_OF_DETOUR.x, 2) + Math.pow(ENTITY_CENTER.y - START_OF_DETOUR.y, 2)));\n\n            if (closestDetour === null || DISTANCE < previousDistance) {\n                closestDetour = ALL_DETOURS[i];\n                previousDistance = DISTANCE;\n            }\n        }\n\n        if (closestDetour !== null) {\n            return [...closestDetour];\n        }\n        else {\n            return null;\n        }\n    };\n\n\n\n    // SETTERS\n    __switchFrameToAngle__(angle) {\n        if (angle >= -145 && angle <= -45) {\n            this.switchFrame('n');\n        }\n        else if (angle >= -180 && angle < -145 || angle <= 180 && angle > 145 ) {\n            this.switchFrame('w');\n        }\n        else if (angle <= 145 && angle > 45) {\n            this.switchFrame('s');\n        }\n        else if (angle >= 0 && angle <= 45 || angle < 0 && angle > -45) {\n            this.switchFrame('e');\n        }\n    };\n\n    rotateToPlayer(player) {\n        const PLAYER_ANGLE_FROM_ENEMY = this.__getAngleToPlayer__(player);\n\n        this.__switchFrameToAngle__(PLAYER_ANGLE_FROM_ENEMY);\n    };\n\n    stopFollowingPlayerAndMoveAroundObject(collision_data) {\n        checks.checkIfObject(collision_data);\n\n        if (collision_data.object instanceof Obstacle === false && collision_data.object instanceof ObstacleFill === false) {\n            throw TypeError(\"Object must be an obstacle.\");\n        }\n\n        if (collision_data.edge === undefined) {\n            throw SyntaxError(\"Collision data is missing edge information.\");\n        }\n\n        checks.checkIfString(collision_data.edge);\n\n        this.navigationMode = 1;\n        this.objectCollidedWith = collision_data.object;\n        this.edgeCollidedWith = collision_data.edge;\n    };\n\n    stopFollowingDetourAndChasePlayerAgain(player) {\n        checks.checkIfInstance(player, Player);\n\n        this.detourChosen = null;\n        this.detourPointIndex = 0;\n\n        this.navigationMode = 0;\n        this.objectCollidedWith = null;\n        this.edgeCollidedWith = null;\n\n        this.__switchFrameToAngle__(this.__getAngleToPlayer__(player));\n    };\n\n    moveToPlayer(player) {\n        const PLAYER_ANGLE_FROM_ENEMY = this.__getAngleToPlayer__(player);\n\n        if (this.navigationMode === 0) {\n            // going after player\n\n            const DIRECTION = this.__getMoveDirectionFromAngle__(PLAYER_ANGLE_FROM_ENEMY);\n\n            const BEC = checkCollisionWithBottomEdgesOfObstacles(this);\n            const TEC = checkCollisionWithTopEdgesOfObstacles(this);\n\n            if (DIRECTION === 'e' || DIRECTION === 'ne' || DIRECTION === 'se') {\n                const LEC = checkCollisionWithLeftEdgesOfObstacles(this);\n\n                switch (DIRECTION) {\n                    case 'e':\n                        if (LEC.status === false) {\n                            this.moveSpriteEast();\n                        }\n                        else if (LEC.status === true) {\n                            this.stopFollowingPlayerAndMoveAroundObject(LEC);\n                        }\n                        break;\n                    case 'ne':\n                        if (BEC.status === false && LEC.status === false) {\n                            this.moveSpriteNorthEast();\n                        }\n                        break;\n                    case 'se':\n                        if (TEC.status === false && LEC.status === false) {\n                            this.moveSpriteSouthEast();\n                        }\n                        break;\n                }\n            }\n            else if (DIRECTION === 'w' || DIRECTION === 'nw' || DIRECTION === 'sw') {\n                const REC = checkCollisionWithRightEdgesOfObstacles(this);\n\n                switch (DIRECTION) {\n                    case 'w':\n                        if (REC.status === false) {\n                            this.moveSpriteWest();\n                        }\n                        else if (REC.status === true) {\n                            this.stopFollowingPlayerAndMoveAroundObject(REC);\n                        }\n                        break;\n                    case 'nw':\n                        if (BEC.status === false && REC.status === false) {\n                            this.moveSpriteNorthWest();\n                        }\n                        break;\n                    case 'sw':\n                        if (TEC.status === false && REC.status === false) {\n                            this.moveSpriteSouthWest();\n                        }\n                        break;\n                }\n            }\n            else if (DIRECTION === 'n') {\n                if (BEC.status === false) {\n                    this.moveSpriteNorth();\n                }\n                else if (BEC.status === true) {\n                    this.stopFollowingPlayerAndMoveAroundObject(BEC);\n                }\n            }\n            else if (DIRECTION === 's') {\n                if (TEC.status === false) {\n                    this.moveSpriteSouth();\n                }\n                else if (TEC.status === true) {\n                    this.stopFollowingPlayerAndMoveAroundObject(TEC);\n                }\n            }\n\n\n\n            // deals damage to player on contact\n            if (player.isInvincible() === false && player.getHealth() > 0 && this.sprite.alpha >= 1) {\n                const DIFFERENCES = this.__getEnemyXandYDistanceFromPlayer__(player);\n\n                const DISTANCE_BETWEEN_ENEMY_CENTER_AND_PLAYER_CENTER = Math.sqrt(Math.pow(DIFFERENCES.dx, 2) + Math.pow(DIFFERENCES.dy, 2));\n\n                if (DISTANCE_BETWEEN_ENEMY_CENTER_AND_PLAYER_CENTER <= 40) {\n                    this.__damagePlayer___(player);\n                }\n            }\n        }\n        else if (this.navigationMode === 1) {\n            // going around object\n\n            const DISTANCE_DIFFERENCE = this.__getEnemyXandYDistanceFromPlayer__(player);\n\n            const DISTANCE_BETWEEN_ENEMY_AND_PLAYER = Math.round(Math.sqrt(Math.pow(DISTANCE_DIFFERENCE.dx, 2) + Math.pow(DISTANCE_DIFFERENCE.dy, 2)));\n\n\n\n            if (this.detourChosen === null && this.edgeCollidedWith !== null) {\n                this.detourChosen = this.getClosestDetour(this.objectCollidedWith, this.edgeCollidedWith); // gets copy of saved detours\n            }\n            else if (this.detourChosen !== null && this.detourChosen.constructor === Array) {\n                const NUM_OF_DETOURS = this.detourChosen.length;\n\n                if (NUM_OF_DETOURS > 0) {\n                    const POINT = this.detourChosen[this.detourPointIndex];\n                    const ENEMY_CENTER = this.getCenterCoordinates();\n                    const DISTANCE_BETWEEN_ENEMY_AND_POINT = Math.round(Math.sqrt(Math.pow(ENEMY_CENTER.x - POINT.x, 2) + Math.pow(ENEMY_CENTER.y - POINT.y, 2)));\n\n                    // compares distance between enemy and current point to the distance between enemy and the player\n                    if (DISTANCE_BETWEEN_ENEMY_AND_POINT < DISTANCE_BETWEEN_ENEMY_AND_PLAYER) {\n                        this.moveToDetourPoint(POINT);\n                    }\n                    else {\n                        this.stopFollowingDetourAndChasePlayerAgain(player);\n\n                        return;\n                    }\n\n                    // moves the enemy to the next point\n                    if (Math.round(ENEMY_CENTER.x) === POINT.x && Math.round(ENEMY_CENTER.y) === POINT.y) {\n                        this.detourPointIndex += 1;\n                    }\n\n                    // stop following detour since the last point has been reached\n                    if (this.detourPointIndex === this.detourChosen.length) {\n                        this.stopFollowingDetourAndChasePlayerAgain(player);\n                    }\n                }\n            }\n        }\n    };\n\n    moveToDetourPoint(point) {\n        checks.checkIfObject(point);\n\n        if (point.x === undefined || point.y === undefined) {\n            throw SyntaxError(\"Point must be an object with x and y as properties.\");\n        }\n\n        checks.checkIfNumber(point.x);\n        checks.checkIfNumber(point.y);\n\n        const ENEMY_CENTER = this.getCenterCoordinates();\n        const ANGLE_TO_DETOUR = Math.round(Math.atan2(point.y - ENEMY_CENTER.y, point.x - ENEMY_CENTER.x) * 180 / Math.PI);\n\n        this.__switchFrameToAngle__(ANGLE_TO_DETOUR);\n\n        const DIRECTION = this.__getMoveDirectionFromAngle__(ANGLE_TO_DETOUR);\n\n        switch (DIRECTION) {\n            case 'n':\n                this.moveSpriteNorth();\n                break;\n            case 'nw':\n                this.moveSpriteNorthWest();\n                break;\n            case 'w':\n                this.moveSpriteWest();\n                break;\n            case 'sw':\n                this.moveSpriteSouthWest();\n                break;\n            case 's':\n                this.moveSpriteSouth();\n                break;\n            case 'se':\n                this.moveSpriteSouthEast();\n                break;\n            case 'e':\n                this.moveSpriteEast();\n                break;\n            case 'ne':\n                this.moveSpriteNorthEast();\n                break;\n        }\n    };\n\n    decreaseHealth(value) {\n        checks.checkIfNumber(value);\n\n        this.health -= value;\n    };\n\n    removeSelf(){\n        if (this.health <= 0) {\n            // references to enemy get deleted so that its instance can be put in the garbage collector (memory optimization)\n            new Audio(this.deathSoundFile).play()\n            this.sprite_container.parent.removeChild(this.sprite_container);\n\n            NON_PLAYER_ENTITIES.splice(NON_PLAYER_ENTITIES.indexOf(this), 1);\n            return true\n        }\n        return false\n\n    }\n};\n\nexport class Zombie extends Enemy {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.health = 100;\n        this.damage = 20;\n        this.deathSoundFile = `${SOUND_ASSETS_FOLDER}/zombie-death.mp3` //https://www.fesliyanstudios.com/royalty-free-sound-effects-download/zombie-174\n\n        this.setSpeed(0.5);\n    };\n\n\n\n    // SETTERS\n    __damagePlayer___(player) {\n        checks.checkIfInstance(player, Player);\n\n        player.decreaseHealth(this.damage);\n\n        player.activateInvincibility();\n    };\n};\n","import * as checks from '../helpers/checks.js';\nimport { Entity } from '../sprites/entities.js';\n\nexport const OBSTACLES = [];\nexport const NON_PLAYER_ENTITIES = [];\n\nfunction checkCollisionWithObstacles(sprite, side) {\n    checks.checkIfInstance(sprite, Entity);\n\n    const NUM_OF_OBSTACLES = OBSTACLES.length;\n\n    if (NUM_OF_OBSTACLES > 0) {\n        const SPRITE_SPEED = sprite.getSpeed();\n        const SLX = sprite.getLeftPosX() - SPRITE_SPEED;\n        const SLY = sprite.getLeftPosY() - SPRITE_SPEED;\n        const SRX = sprite.getRightPosX() + SPRITE_SPEED;\n        const SRY = sprite.getRightPosY() + SPRITE_SPEED;\n\n        for (let i=0; i < NUM_OF_OBSTACLES; i++) {\n            const OBSTACLE = OBSTACLES[i];\n\n            const OLX = OBSTACLE.getLeftPosX();\n            const OLY = OBSTACLE.getLeftPosY();\n            const ORX = OBSTACLE.getRightPosX();\n            const ORY = OBSTACLE.getRightPosY();\n\n            if (side === 'top') {\n                const SB_above_TE = SRY < OLY;\n                const SB_below_TE = SRY > OLY;\n                const SB_below_BE = SRY > ORY;\n\n                const SLSR_between_LERE = SLX >= OLX && SRX <= ORX;\n\n                const SL_before_LE = SLX < OLX;\n                const SR_after_RE = SRX > ORX;\n\n                const SL_between_LERE = SLX >= OLX && SLX <= ORX;\n                const SR_between_LERE = SRX >= OLX && SRX <= ORX;\n\n                const CORRECTED_SR = SRX - SPRITE_SPEED;\n\n\n\n                if (SB_below_BE && SB_below_TE) {\n                    continue;\n                }\n                else if (CORRECTED_SR < OLX && SLY < ORY) {\n                    continue;\n                }\n                else if (CORRECTED_SR < OLX && SRY > OLY) {\n                    continue;\n                }\n                else if (SB_above_TE === false) {\n                    if (SLSR_between_LERE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'top'\n                        };\n                    }\n                    else if (SL_before_LE && SR_between_LERE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'top'\n                        };\n                    }\n                    else if (SR_after_RE && SL_between_LERE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'top'\n                        };\n                    }\n                }\n            }\n            else if (side === 'left') {\n                const SR_before_LE = SRX < OLX;\n                const SR_after_LE = SRX > OLX;\n                const SR_after_RE = SRX > ORX;\n\n                const STSB_between_TEBE = SLY >= OLY && SRY <= ORY;\n\n                const ST_above_TE = SLY < OLY;\n                const SB_below_BE = SRY > ORY;\n\n                const ST_between_TEBE = SLY >= OLY && SLY <= ORY;\n                const SB_between_TEBE = SRY >= OLY && SRY <= ORY;\n\n                const CORRECTED_SB = SRY - SPRITE_SPEED;\n\n\n\n                if (SR_after_LE && SR_after_RE) {\n                    continue;\n                }\n                else if (CORRECTED_SB < OLY && SLX > OLX) {\n                    continue;\n                }\n                else if (CORRECTED_SB > ORY && SLX > OLX) {\n                    continue;\n                }\n                else if (SR_before_LE === false) {\n                    if (STSB_between_TEBE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'left'\n                        };\n                    }\n                    else if (ST_above_TE && SB_between_TEBE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'left'\n                        };\n                    }\n                    else if (SB_below_BE && ST_between_TEBE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'left'\n                        };\n                    }\n                }\n            }\n            else if (side === 'right') {\n                const SL_after_RE = SLX > ORX;\n                const SL_before_LE = SLX < OLX;\n                const SL_before_RE = SLX < ORX;\n\n                const STSB_between_TEBE = SLY >= OLY && SRY <= ORY;\n\n                const ST_above_TE = SLY < OLY;\n                const SB_below_BE = SRY > ORY;\n\n                const ST_between_TEBE = SLY >= OLY && SLY <= ORY;\n                const SB_between_TEBE = SRY >= OLY && SRY <= ORY;\n\n                const CORRECTED_SB = SRY - SPRITE_SPEED;\n\n\n\n                if (SL_before_LE && SL_before_RE) {\n                    continue;\n                }\n                else if (CORRECTED_SB < OLY && SRX < ORX) {\n                    continue;\n                }\n                else if (CORRECTED_SB > ORY && SRX < ORX) {\n                    continue;\n                }\n                else if (SL_after_RE === false) {\n                    if (STSB_between_TEBE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'right'\n                        };\n                    }\n                    else if (ST_above_TE && SB_between_TEBE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'right'\n                        };\n                    }\n                    else if (SB_below_BE && ST_between_TEBE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'right'\n                        };\n                    }\n                }\n            }\n            else if (side === 'bottom') {\n                const ST_below_BE = SLY > ORY;\n                const ST_above_TE = SLY < OLY;\n                const ST_above_BE = SLY < ORY;\n\n                const SLSR_between_LERE = SLX >= OLX && SRX <= ORX;\n\n                const SL_before_LE = SLX < OLX;\n                const SR_after_RE = SRX > ORX;\n\n                const SL_between_LERE = SLX >= OLX && SLX <= ORX;\n                const SR_between_LERE = SRX >= OLX && SRX <= ORX;\n\n                const CORRECTED_SL = SLX + SPRITE_SPEED;\n\n\n\n                if (ST_above_BE && ST_above_TE) {\n                    continue;\n                }\n                else if (CORRECTED_SL > ORX && SLY < ORY) {\n                    continue;\n                }\n                else if (CORRECTED_SL > ORX && SRY > OLY) {\n                    continue;\n                }\n                else if (ST_below_BE === false) {\n                    if (SLSR_between_LERE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'bottom'\n                        };\n                    }\n                    else if (SL_before_LE && SR_between_LERE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'bottom'\n                        };\n                    }\n                    else if (SR_after_RE && SL_between_LERE) {\n                        return {\n                            status: true,\n                            object: OBSTACLE,\n                            edge: 'bottom'\n                        };\n                    }\n                }\n            }\n        }\n    }\n\n    return {\n        status: false,\n        object: undefined,\n        edge: undefined\n    };\n};\n\nexport function checkCollisionWithLeftEdgesOfObstacles(sprite) {\n    return checkCollisionWithObstacles(sprite, 'left');\n};\n\nexport function checkCollisionWithRightEdgesOfObstacles(sprite) {\n    return checkCollisionWithObstacles(sprite, 'right');\n};\n\nexport function checkCollisionWithTopEdgesOfObstacles(sprite) {\n    return checkCollisionWithObstacles(sprite, 'top');\n};\n\nexport function checkCollisionWithBottomEdgesOfObstacles(sprite) {\n    return checkCollisionWithObstacles(sprite, 'bottom');\n};\n","import * as checks from '../helpers/checks.js';\nimport { Player } from './entities.js';\nimport { Objects } from './objects.js';\nimport { Gun } from './weapons.js';\n\n\nexport const INTERACTABLES = [];\n\n\nexport class Interactable extends Objects {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.areaOfEffect = 20; // adds extra area for the interactble range\n    };\n\n\n\n\n    // GETTERS\n    playerIsNearInteractable(player) {\n        checks.checkIfInstance(player, Player);\n\n        const PLAYER_CENTER = player.getCenterCoordinates();\n\n        const PLAYER_INSIDE_LR_EDGES = PLAYER_CENTER.x > (this.getLeftPosX() - this.areaOfEffect) && PLAYER_CENTER.x < (this.getRightPosX() + this.areaOfEffect);\n\n        const PLAYER_INSIDE_TB_EDGES = PLAYER_CENTER.y > (this.getLeftPosY() - this.areaOfEffect) && PLAYER_CENTER.y < (this.getRightPosY() + this.areaOfEffect);\n\n        if (PLAYER_INSIDE_LR_EDGES && PLAYER_INSIDE_TB_EDGES) {\n            return true;\n        }\n        return false;\n    };\n\n\n\n\n    // SETTERS\n    setAreaOfEffect(value) {\n        checks.checkIfNumber(value);\n\n        this.areaOfEffect = value;\n    };\n\n\n\n};\n\nexport class AmmoCache extends Interactable {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n        this.pointCost = 500\n    };\n\n\n\n    // SETTERS\n    resupply(gun) {\n        checks.checkIfInstance(gun, Gun);\n\n        gun.addMaxAmmo(gun.getMaxAmmo());\n\n        gun.playReloadSound();\n\n\n    };\n\n\n};\n\n\nexport class UpgradeBench extends Interactable {\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\n        super(texture, posX, posY, frameWidth, frameHeight);\n        this.pointCost = 1000\n    };\n\n    upgradeGun(gun,option){\n        checks.checkIfInstance(gun, Gun);\n        //true = upgrade ammo, false = upgrade damage\n        if (option){\n            gun.increaseMaxAmmo(10)\n            gun.increaseClipCapacity(3)\n        } else {\n            gun.increaseDamage(10)\n        }\n\n    }\n\n\n\n\n\n}\n\n","import * as checks from '../helpers/checks.js';\nimport { PlayableArea } from \"../map/creation.js\";\nimport { Player } from './entities.js';\n\nimport {\n    Decoration,\n    DecorationFill\n} from \"./objects.js\";\n\nexport const PORTALS = [];\n\nexport class Portal extends Decoration {\n    constructor(origin, texture, posX, posY, frameWidth, frameHeight) {\n        checks.checkIfInstance(origin, PlayableArea);\n\n        super(texture, posX, posY, frameWidth, frameHeight);\n\n        this.origin = origin;\n        this.destination = null;\n        this.dest_X = null;\n        this.dest_Y = null; \n    };\n\n\n\n    // GETTERS\n    playerIsInsidePortal(player) {\n        checks.checkIfInstance(player, Player);\n\n        const PLAYER_CENTER = player.getCenterCoordinates();\n\n        if (PLAYER_CENTER.x > this.getLeftPosX() && PLAYER_CENTER.x < this.getRightPosX() && PLAYER_CENTER.y > this.getLeftPosY() && PLAYER_CENTER.y < this.getRightPosY()) {\n            return true;\n        }\n        return false;\n    };\n\n\n\n    // SETTERS\n    setDestination(playableArea, x, y) {\n        checks.checkIfInstance(playableArea, PlayableArea);\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        this.destination = playableArea;\n\n        this.dest_X = x;\n        this.dest_Y = y;\n    };\n\n    teleport(player) {\n        checks.checkIfInstance(player, Player);\n\n        const GAME_STAGE = this.origin.area.parent;\n\n        this.origin.unload();\n        GAME_STAGE.removeChild(this.origin.area);\n\n        GAME_STAGE.addChild(this.destination.load());\n        this.destination.addDynamicSprite(\n            player,\n            'player',\n            this.dest_X,\n            this.dest_Y\n        );\n    };\n};\n\nexport class PortalFill extends DecorationFill {\n    constructor(origin, color, posX, posY, width, height) {\n        checks.checkIfInstance(origin, PlayableArea);\n\n        super(color, posX, posY, width, height);\n\n        this.origin = origin;\n        this.destination = null;\n        this.dest_X = null;\n        this.dest_Y = null; \n    };\n\n\n\n    // GETTERS\n    playerIsInsidePortal(player) {\n        checks.checkIfInstance(player, Player);\n\n        const PLAYER_CENTER = player.getCenterCoordinates();\n\n        if (PLAYER_CENTER.x > this.getLeftPosX() && PLAYER_CENTER.x < this.getRightPosX() && PLAYER_CENTER.y > this.getLeftPosY() && PLAYER_CENTER.y < this.getRightPosY()) {\n            return true;\n        }\n\n        return false;\n    };\n\n\n\n    // SETTERS\n    setDestination(playableArea, x, y) {\n        checks.checkIfInstance(playableArea, PlayableArea);\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        this.destination = playableArea;\n\n        this.dest_X = x;\n        this.dest_Y = y;\n    };\n\n    teleport(player) {\n        checks.checkIfInstance(player, Player);\n\n        const GAME_STAGE = this.origin.area.parent;\n\n        this.origin.unload();\n        GAME_STAGE.removeChild(this.origin.area);\n\n        GAME_STAGE.addChild(this.destination.load());\n        this.destination.addDynamicSprite(\n            player,\n            'player',\n            this.dest_X,\n            this.dest_Y\n        );\n    };\n};\n","import * as checks from '../helpers/checks.js';\nimport { OBSTACLES } from '../core/collision.js';\nimport { Entity } from '../sprites/entities.js';\n\nimport {\n    INTERACTABLES,\n    Interactable\n} from '../sprites/interactable.js';\n\nimport {\n    PORTALS,\n    Portal,\n    PortalFill\n} from '../sprites/portals.js';\n\nimport {\n    toggleCrosshair,\n    Gun\n} from '../sprites/weapons.js';\n\nimport {\n    Obstacle,\n    ObstacleFill\n} from '../sprites/objects.js';\n\nimport {\n    Sprite,\n    FillSprite\n} from '../sprites/base/base.js';\n\n\n\n// MAP SYNTAX\n/*\nimport { PlayableArea } from '../creation.js';\nimport { getTextureFromStaticJSFolder } from '../../helpers/pixi_helpers.js';\n\nimport {\n    \n} from '../../sprites/objects.js';\n\nexport const MAP_NAME = (function () {\n    const MAP_NAME = new PlayableArea(w, h); // DO NOT REMOVE\n\n    const OBJECT = new ObjectClass(getTextureFromStaticJSFolder('path/to/object/image/from/static/js.png'), 0, 0, w, h);\n    FOYER.addStaticSprite(\n        OBJECT,\n        'object_id',\n        x,\n        y\n    );\n\n    ...\n\n    return MAP_NAME; // DO NOT REMOVE\n})();\n*/\n\n\n\nexport class PlayableArea {\n    constructor(width, height) {\n        this.area = new PIXI.Container();\n\n        this.width = width;\n        this.height = height;\n\n        const BACKGROUND = new PIXI.Graphics();\n        BACKGROUND.beginFill(0xFFFFFF);\n        BACKGROUND.drawRect(0, 0, width, height);\n        BACKGROUND.endFill();\n\n        this.area.addChild(BACKGROUND);\n\n        this.staticSprites = {};\n        this.dynamicSprites = {};\n\n        this.STATIC_SPRITES_CONTAINER = new PIXI.Container();\n        this.DYNAMIC_SPRITES_CONTAINER = new PIXI.Container();\n\n        this.OBSTACLES = [];\n        this.PORTALS = [];\n        this.INTERACTABLES = [];\n        this.ENEMY_SPAWN_POINTS = [];\n        this.COLORED_COORDINATES = [];\n\n\n\n        this.area.interactive = true;\n\n        this.mousedownEvent = function () {\n            if (window.GAME_PAUSED === false && window.HOTBAR !== undefined && window.HOTBAR !== null) {\n                const SELECTED_ITEM = window.HOTBAR.getSelItem();\n\n                if (SELECTED_ITEM instanceof Gun) {\n                    SELECTED_ITEM.fire();\n                }\n            }\n        };\n\n        this.mousemoveEvent = function () {\n            toggleCrosshair(this);\n        };\n\n\n\n        this.infinite_loop = new PIXI.Ticker();\n\n        this.infinite_loop.add(() => {\n            this.sortSpriteOrder();\n        });\n    };\n\n\n\n    // GETTERS\n    getLeftPosX() {\n        return this.area.x;\n    };\n\n    getLeftPosY() {\n        return this.area.y;\n    };\n\n    getRightPosX() {\n        return this.area.x + this.area.width;\n    };\n\n    getRightPosY() {\n        return this.area.y + this.area.height;\n    };\n\n    getWidth() {\n        return this.width;\n    };\n\n    getHeight() {\n        return this.height;\n    };\n\n    getHalfWidth() {\n        return this.width * 0.5;\n    };\n\n    getHalfHeight() {\n        return this.height * 0.5;\n    };\n\n    getEnemySpawnPoints() {\n        return this.ENEMY_SPAWN_POINTS;\n    };\n\n    load() {\n        window.GAME_PAUSED = false;\n\n        // renders sprites\n        this.area.addChild(\n            this.STATIC_SPRITES_CONTAINER,\n            this.DYNAMIC_SPRITES_CONTAINER,\n        );\n\n\n\n        // renders colored coordinates\n        const NUM_OF_COLORED_COORDINATES = this.COLORED_COORDINATES.length;\n\n        for (let i=0; i < NUM_OF_COLORED_COORDINATES; i++) {\n            this.area.addChild(this.COLORED_COORDINATES[i]);\n        }\n\n\n\n        // adds obstacles to collision detection queue\n        const NUM_OF_OBSTACLES = this.OBSTACLES.length;\n\n        for (let i=0; i < NUM_OF_OBSTACLES; i++) {\n            OBSTACLES.push(this.OBSTACLES[i]);\n        }\n\n\n\n        // adds portals to map switch detection queue\n        const NUM_OF_PORTALS = this.PORTALS.length;\n\n        for (let i=0; i < NUM_OF_PORTALS; i++) {\n            PORTALS.push(this.PORTALS[i]);\n        }\n\n\n\n        // adds interactables to interaction detection queue\n        const NUM_OF_INTERACTABLES = this.INTERACTABLES.length;\n\n        for (let i=0; i < NUM_OF_INTERACTABLES; i++) {\n            INTERACTABLES.push(this.INTERACTABLES[i]);\n        }\n\n\n\n        // runs local game loop\n        this.infinite_loop.start();\n\n\n\n        // binds events to playable area\n        this.area.on('mousedown', this.mousedownEvent);\n        this.area.on('mousemove', this.mousemoveEvent);\n\n\n\n        window.playableAreaExists = true;\n\n        return this.area;\n    };\n\n    unload() {\n        window.GAME_PAUSED = true;\n\n        // un-renders sprites\n        this.area.removeChild(this.STATIC_SPRITES_CONTAINER);\n\n        this.area.removeChild(this.DYNAMIC_SPRITES_CONTAINER);\n\n\n\n        // removes the entities from sorting queue & dynamic sprites container\n        const DYNAMIC_SPRITE_IDS = Object.keys(this.dynamicSprites);\n        const NUM_OF_DYNAMIC_SPRITES = DYNAMIC_SPRITE_IDS.length;\n\n        for (let i=0; i < NUM_OF_DYNAMIC_SPRITES; i++) {\n            const ID = DYNAMIC_SPRITE_IDS[i];\n            const CURRENT_DS = this.dynamicSprites[ID];\n\n            if (CURRENT_DS instanceof Entity) {\n                this.DYNAMIC_SPRITES_CONTAINER.removeChild(CURRENT_DS.getSprite());\n\n                delete this.dynamicSprites[ID];\n            }\n        }\n\n\n\n        // removes obstacles from collision detection queue\n        OBSTACLES.splice(0, OBSTACLES.length);\n\n\n\n        // removes portals from map switch detection queue\n        PORTALS.splice(0, PORTALS.length);\n\n\n\n        // removes interactables from interaction detection queue\n        INTERACTABLES.splice(0, INTERACTABLES.length);\n\n\n\n        // stops local game loop\n        this.infinite_loop.stop();\n\n\n\n        // un-binds events to playable area\n        this.area.off('mousedown', this.mousedownEvent);\n        this.area.off('mousemove', this.mousemoveEvent);\n\n\n\n        // un-renders the playable area from the screen\n        this.area.parent.removeChild(this.area);\n\n        window.playableAreaExists = false;\n    };\n\n\n\n    // SETTERS\n    setPosition(x, y) {\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        this.area.x = x;\n        this.area.y = y;\n    };\n\n    addEvent(event, callback) {\n        checks.checkIfString(event);\n        checks.checkIfFunction(callback);\n\n        this.area.on(event, callback);\n    };\n\n    addStaticSprite(sprite, id, x, y) {\n        if ((sprite instanceof Sprite) === false && (sprite instanceof FillSprite) === false) {\n            throw ReferenceError(`Not an instance of ${Sprite.name} or ${FillSprite.name}`);\n        }\n\n        checks.checkIfString(id);\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        if (this.staticSprites[id] !== undefined) {\n            throw ReferenceError(`A sprite with the id '${id}' already exists`);\n        }\n\n        this.STATIC_SPRITES_CONTAINER.addChild(sprite.getSprite());\n        this.staticSprites[id] = sprite;\n\n        if (sprite instanceof Obstacle || sprite instanceof ObstacleFill) {\n            this.OBSTACLES.push(sprite);\n        }\n        else if (sprite instanceof Portal || sprite instanceof PortalFill) {\n            this.PORTALS.push(sprite);\n        }\n        else if (sprite instanceof Interactable) {\n            this.INTERACTABLES.push(sprite);\n        }\n\n        sprite.setPosition(x, y);\n    };\n\n    addDynamicSprite(sprite, id, x, y) {\n        if ((sprite instanceof Sprite) === false && (sprite instanceof FillSprite) === false) {\n            throw ReferenceError(`Not an instance of ${Sprite.name} or ${FillSprite.name}`);\n        }\n        checks.checkIfString(id);\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        if (this.dynamicSprites[id] !== undefined) {\n            throw ReferenceError(`A sprite with the id '${id}' already exists`);\n        }\n\n        this.DYNAMIC_SPRITES_CONTAINER.addChild(sprite.getSprite());\n        this.dynamicSprites[id] = sprite;\n\n        if (sprite instanceof Obstacle || sprite instanceof ObstacleFill) {\n            this.OBSTACLES.push(sprite);\n        }\n\n        sprite.setPosition(x, y);\n    };\n\n    addEnemySpawnPoint(x, y, color) {\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n\n        this.ENEMY_SPAWN_POINTS.push({x: x, y: y});\n\n        if (typeof color === 'number') {\n            this.colorCoordinate(color, x, y, 5, 5);\n        }\n    };\n\n    sortSpriteOrder() {\n        // SPRITE ORDERING\n        const ALL_SPRITES = Object.values(this.dynamicSprites);\n        let num_of_sprites = ALL_SPRITES.length;\n\n        if (num_of_sprites > 0) {\n            // REMOVES SPRITES WITH NO PARENT\n            for (let i=0; i < num_of_sprites; i++) {\n                const SPRITE = ALL_SPRITES[i].getSprite();\n\n                if (SPRITE.parent === null) {\n                    ALL_SPRITES.splice(i, 1);\n                    num_of_sprites = ALL_SPRITES.length;\n\n                    delete this.dynamicSprites[Object.keys(this.dynamicSprites)[i]];\n                }\n            }\n\n\n\n            // REORDERS SPRITE\n            let posY_of_sprites = [];\n\n            // gets the y coordinate of the bottom edge of every sprite\n            for (let i=0; i < num_of_sprites; i++) {\n                const CURRENT_SPRITE = ALL_SPRITES[i];\n\n                posY_of_sprites.push(CURRENT_SPRITE.getRightPosY());\n            }\n\n            // sorts the y coordinates in ascending order\n            posY_of_sprites = posY_of_sprites.sort();\n\n            for (let i=0; i < num_of_sprites; i++) {\n                const CURRENT_POSY = posY_of_sprites[i];\n\n                for (let j=0; j < num_of_sprites; j++) {\n                    const UNSORTED_SPRITE = ALL_SPRITES[j];\n\n                    // corrects the z-order of all the sprites according to the sorted y coordinates\n                    if (UNSORTED_SPRITE.getRightPosY() === CURRENT_POSY) {\n                        this.DYNAMIC_SPRITES_CONTAINER.setChildIndex(UNSORTED_SPRITE.getSprite(), i);\n                    }\n                }\n            }\n        }\n    };\n\n    colorCoordinate(color, x, y, w, h) {\n        checks.checkIfNumber(color);\n        checks.checkIfNumber(x);\n        checks.checkIfNumber(y);\n        checks.checkIfNumber(w);\n        checks.checkIfNumber(h);\n\n        if (w > 1) {\n            x = x - (w * 0.5);\n        }\n        if (h > 1) {\n            y = y - (h * 0.5);\n        }\n\n        const COLORED_COORDINATE = new PIXI.Graphics();\n        COLORED_COORDINATE.beginFill(color);\n        COLORED_COORDINATE.drawRect(x, y, w, h);\n        COLORED_COORDINATE.endFill();\n\n        this.COLORED_COORDINATES.push(COLORED_COORDINATE);\n    };\n\n    __addDetour__(object, edge, array_of_points, color) {\n        if (object instanceof Obstacle === false && object instanceof ObstacleFill === false) {\n            throw TypeError(\"Object must be an obstacle.\");\n        }\n\n        checks.checkIfString(edge);\n\n        switch (edge) {\n            case 'bottom':\n                object.addBottomEdgeDetour(array_of_points);\n                break;\n            case 'top':\n                object.addTopEdgeDetour(array_of_points);\n                break;\n            case 'left':\n                object.addLeftEdgeDetour(array_of_points);\n                break;\n            case 'right':\n                object.addRightEdgeDetour(array_of_points);\n                break;\n        }\n\n        if (typeof color === 'number') {\n            const NUM_OF_POINTS = array_of_points.length;\n\n            for (let i=0; i < NUM_OF_POINTS; i++) {\n                const POINT = array_of_points[i];\n\n                this.colorCoordinate(color, POINT.x, POINT.y, 5, 5);\n            }\n        }\n    };\n\n    addBottomEdgeDetour(object, array_of_points, color) {\n        this.__addDetour__(\n            object,\n            'bottom',\n            array_of_points,\n            color\n        );\n    };\n\n    addTopEdgeDetour(object, array_of_points, color) {\n        this.__addDetour__(\n            object,\n            'top',\n            array_of_points,\n            color\n        );\n    };\n\n    addLeftEdgeDetour(object, array_of_points, color) {\n        this.__addDetour__(\n            object,\n            'left',\n            array_of_points,\n            color\n        );\n    };\n\n    addRightEdgeDetour(object, array_of_points, color) {\n        this.__addDetour__(\n            object,\n            'right',\n            array_of_points,\n            color\n        );\n    };\n\n    bindPlayableAreaToPortal(sprite_id, playableArea, dest_x, dest_y) {\n        checks.checkIfString(sprite_id);\n\n        const PORTAL = this.staticSprites[sprite_id];\n\n        if (PORTAL === undefined) {\n            throw Error(\"A portal with that ID does not exist.\");\n        }\n\n        PORTAL.setDestination(playableArea, dest_x, dest_y);\n    };\n};\n","import * as checks from './checks.js';\n\nimport {\n    STATIC_JS_FOLDER,\n    STATIC_ASSETS_FOLDER\n} from './urls.js';\n\n\n\nexport function getTextureFromStaticJSFolder(path) {\n    checks.checkIfString(path);\n\n    if (path[0] !== '/') {\n        throw ReferenceError(\"Paths must start with /\");\n    }\n\n    return PIXI.Texture.from(`${STATIC_JS_FOLDER}${path}`);\n};\n\nexport function getTextureFromStaticAssetsFolder(path) {\n    checks.checkIfString(path);\n\n    if (path[0] !== '/') {\n        throw ReferenceError(\"Paths must start with /\");\n    }\n\n    return PIXI.Texture.from(`${STATIC_ASSETS_FOLDER}${path}`);\n};\n","import { PlayableArea } from '../creation.js';\nimport {AmmoCache, UpgradeBench} from \"../../sprites/interactable.js\";\n\nimport {\n    getTextureFromStaticAssetsFolder, getTextureFromStaticJSFolder\n} from '../../helpers/pixi_helpers.js';\n\nimport {\n    Portal,\n    PortalFill\n} from '../../sprites/portals.js';\n\nimport {\n    Decoration,\n    DecorationFill,\n    SemiSolid,\n    SemiSolidFill\n} from '../../sprites/objects.js';\n\n\n\nexport const FOYER = (function () {\n    const FOYER = new PlayableArea(512, 400);\n    FOYER.addEnemySpawnPoint(30, 250);\n    FOYER.addEnemySpawnPoint(FOYER.getWidth() - 30, 250);\n    FOYER.addEnemySpawnPoint(255, FOYER.getHeight() - 30);\n\n    const FLOOR = new DecorationFill(0x735848, 0, 0, 512, 400);\n    FOYER.addStaticSprite(FLOOR, 'floor', 0, 0);\n\n\n\n    const BARRIER_1 = new SemiSolidFill(0x000000, 0, 0, FOYER.getWidth(), 10);\n    BARRIER_1.modifyCollisionBoundary(null, null, null, -BARRIER_1.getHalfHeight());\n    FOYER.addStaticSprite(\n        BARRIER_1,\n        'barrier1',\n        0,\n        -BARRIER_1.getFillDimensions().h\n    );\n\n\n\n    const BARRIER_2 = new SemiSolidFill(0x000000, 0, 0, FOYER.getWidth(), 10);\n    FOYER.addStaticSprite(\n        BARRIER_2,\n        'barrier2',\n        0,\n        FOYER.getHeight()\n    );\n\n\n\n    const BARRIER_3 = new SemiSolidFill(0x000000, 0, 0, 10, FOYER.getHeight());\n    BARRIER_3.modifyCollisionBoundary(null, null, -3, null);\n    FOYER.addStaticSprite(\n        BARRIER_3,\n        'barrier3',\n        -BARRIER_3.getFillDimensions().w,\n        0\n    );\n\n\n\n    const BARRIER_4 = new SemiSolidFill(0x000000, 0, 0, 10, FOYER.getHeight());\n    BARRIER_4.modifyCollisionBoundary(-3, null, null, null);\n    FOYER.addStaticSprite(\n        BARRIER_4,\n        'barrier4',\n        FOYER.getWidth(),\n        0\n    );\n\n\n\n    const DOUBLE_DOOR = new SemiSolid(getTextureFromStaticJSFolder('/map/foyer/assets/Door1.png'), 0, 0, 96, 48);\n    FOYER.addStaticSprite(\n        DOUBLE_DOOR,\n        'double_door',\n        FOYER.getHalfWidth() - DOUBLE_DOOR.getHalfWidth(),\n        -(DOUBLE_DOOR.getSpriteFrameDimensions().h + 1)\n    );\n\n\n\n    const ELEVATOR = new PortalFill(FOYER, 0xff0000, 0, 0, DOUBLE_DOOR.getSpriteFrameDimensions().w, 40);\n    ELEVATOR.setAlpha(0);\n    FOYER.addStaticSprite(\n        ELEVATOR,\n        'elevator',\n        FOYER.getHalfWidth() - DOUBLE_DOOR.getHalfWidth(),\n        0\n    );\n\n\n\n    const WINDOW = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/window.png'), 0, 0, 105, 75);\n    FOYER.addStaticSprite(\n        WINDOW,\n        'window',\n        50,\n        -(WINDOW.getSpriteFrameDimensions().h - 5)\n    );\n\n\n\n    const SECOND_FLOOR_MAT = new Portal(FOYER, getTextureFromStaticJSFolder('/map/foyer/assets/mat2.png'), 0, 0, 32, 34);\n    FOYER.addStaticSprite(\n        SECOND_FLOOR_MAT,\n        '2f_mat',\n        FOYER.getWidth() - (SECOND_FLOOR_MAT.getSpriteFrameDimensions().w - 10),\n        20\n    );\n\n\n\n    const WALL = new SemiSolidFill(0xF5F5DC, 0, 0, 278, 60);\n    const WALL_TOP_Y_REDUCTION = 15;\n    WALL.modifyCollisionBoundary(null, -WALL_TOP_Y_REDUCTION, null, -20);\n\n\n\n    // WALL BOTTOM EDGE DETOURS\n    FOYER.addBottomEdgeDetour(\n        WALL,\n        [\n            {x: 190, y: 220},\n            {x: 60, y: 220},\n            {x: 60, y: 30}\n        ],\n        // 0x4af7f4\n    );\n\n    FOYER.addBottomEdgeDetour(\n        WALL,\n        [\n            {x: 310, y: 220},\n            {x: 455, y: 220},\n            {x: 455, y: 30}\n        ],\n        // 0xebb93b\n    );\n\n\n\n\n    // WALL LEFT EDGE DETOURS\n    FOYER.addLeftEdgeDetour(\n        WALL,\n        [\n            {x: 80, y: 30},\n            {x: 260, y: 30},\n            {x: 440, y: 30},\n            {x: 440, y: 200}\n        ],\n        // 0x4af7f4\n    );\n\n    FOYER.addLeftEdgeDetour(\n        WALL,\n        [\n            {x: 60, y: 170}\n        ],\n        // 0xff0000\n    );\n\n\n\n    // WALL RIGHT EDGE DETOURS\n    FOYER.addRightEdgeDetour(\n        WALL,\n        [\n            {x: 425, y: 30},\n            {x: 260, y: 30},\n            {x: 60, y: 30},\n            {x: 60, y: 200},\n        ],\n        // 0x4af7f4\n    );\n\n    FOYER.addRightEdgeDetour(\n        WALL,\n        [\n            {x: 460, y: 170}\n        ],\n        // 0xff0000\n    );\n\n\n\n    // WALL TOP EDGE DETOURS\n    FOYER.addTopEdgeDetour(\n        WALL,\n        [\n            {x: 180, y: 30},\n            {x: 60, y: 30},\n            {x: 60, y: 200},\n        ],\n        // 0xff0000\n    );\n\n    FOYER.addTopEdgeDetour(\n        WALL,\n        [\n            {x: 330, y: 30},\n            {x: 440, y: 30},\n            {x: 440, y: 200},\n        ],\n        // 0xcaeb46\n    );\n\n\n\n    FOYER.addStaticSprite(WALL, 'wall', 117, 80);\n\n\n\n    const STAIRS_1 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/stairs.png'), 0, 0, 117, 95);\n    FOYER.addStaticSprite(\n        STAIRS_1,\n        'stairs1',\n        0,\n        WALL.getLeftPosY() + WALL_TOP_Y_REDUCTION\n    );\n\n\n\n    const STAIRS_2 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/stairs.png'), 0, 0, 117, 95);\n    FOYER.addStaticSprite(\n        STAIRS_2,\n        'stairs2',\n        FOYER.getWidth() - STAIRS_2.getSpriteFrameDimensions().w,\n        STAIRS_1.getLeftPosY()\n    );\n\n\n\n    const RAILING_1 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_1,\n        'railing1',\n        STAIRS_1.getRightPosX() + 4,\n        (WALL.getLeftPosY() + WALL_TOP_Y_REDUCTION - 5) - (RAILING_1.getSpriteFrameDimensions().h - 5)\n    );\n\n\n\n    const RAILING_2 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_2,\n        'railing2',\n        RAILING_1.getRightPosX(),\n        RAILING_1.getLeftPosY()\n    );\n\n\n\n    const RAILING_3 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_3,\n        'railing3',\n        RAILING_2.getRightPosX(),\n        RAILING_2.getLeftPosY()\n    );\n\n\n\n    const RAILING_4 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_4,\n        'railing4',\n        RAILING_3.getRightPosX(),\n        RAILING_3.getLeftPosY()\n    );\n\n\n\n    const RAILING_5 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_5,\n        'railing5',\n        RAILING_4.getRightPosX(),\n        RAILING_4.getLeftPosY()\n    );\n\n\n\n    const RAILING_6 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_6,\n        'railing6',\n        RAILING_5.getRightPosX(),\n        RAILING_5.getLeftPosY()\n    );\n\n\n\n    const RAILING_7 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_7,\n        'railing7',\n        RAILING_6.getRightPosX(),\n        RAILING_6.getLeftPosY()\n    );\n\n\n\n    const RAILING_8 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_8,\n        'railing8',\n        RAILING_7.getRightPosX(),\n        RAILING_7.getLeftPosY()\n    );\n\n\n\n    const RAILING_9 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_9,\n        'railing9',\n        RAILING_8.getRightPosX(),\n        RAILING_8.getLeftPosY()\n    );\n\n\n\n    const RAILING_10 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\n    FOYER.addStaticSprite(\n        RAILING_10,\n        'railing10',\n        RAILING_9.getRightPosX(),\n        RAILING_9.getLeftPosY()\n    );\n\n\n\n    const FIRST_FLOOR_MAT = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/mat.png'), 0, 0, 48, 96);\n    FOYER.addStaticSprite(\n        FIRST_FLOOR_MAT,\n        '1f_mat',\n        FOYER.getHalfWidth() - (FIRST_FLOOR_MAT.getSpriteFrameDimensions().w - 6),\n        FOYER.getHeight() - (FIRST_FLOOR_MAT.getSpriteFrameDimensions().h + 15)\n    );\n\n\n\n    const PLANT_1 = new SemiSolid(getTextureFromStaticJSFolder('/map/foyer/assets/plantA.png'), 0, 0, 48, 96);\n    PLANT_1.modifyCollisionBoundary(null, 50, null, null);\n    FOYER.addDynamicSprite(\n        PLANT_1,\n        'plant1',\n        0,\n        FOYER.getHeight() - (PLANT_1.getSpriteFrameDimensions().h + 5)\n    );\n\n\n\n    const PLANT_2 = new SemiSolid(getTextureFromStaticJSFolder('/map/foyer/assets/plantA.png'), 0, 0, 48, 96);\n    PLANT_2.modifyCollisionBoundary(null, 50, null, null);\n    FOYER.addDynamicSprite(\n        PLANT_2,\n        'plant2',\n        FOYER.getWidth() - PLANT_2.getSpriteFrameDimensions().w,\n        FOYER.getHeight() - (PLANT_2.getSpriteFrameDimensions().h + 5)\n    );\n\n\n\n    const AMMO_CACHE = new AmmoCache(getTextureFromStaticAssetsFolder('/consumables/ammoCache.png'), 240, 140, 50, 50);\n    FOYER.addStaticSprite(\n        AMMO_CACHE,\n        \"ammo_cache1\",\n        240,\n        120\n    );\n\n\n\n\n\n\n\n    return FOYER;\n})();\n","import { PlayableArea } from '../creation.js';\nimport { getTextureFromStaticJSFolder } from '../../helpers/pixi_helpers.js';\nimport { Portal } from '../../sprites/portals.js';\n\nimport {\n    Decoration,\n    SemiSolid,\n    SemiSolidFill\n} from '../../sprites/objects.js';\n\n\n\nexport const LIBRARY = (function () {\n    const LIBRARY = new PlayableArea(512, 256);\n    LIBRARY.addEnemySpawnPoint(LIBRARY.getHalfWidth() + 130, 50);\n    LIBRARY.addEnemySpawnPoint(LIBRARY.getHalfWidth(), LIBRARY.getHeight() - 30);\n\n    const FLOOR = new Decoration(getTextureFromStaticJSFolder('/map/library/assets/libraryfloor.png'), 0, 0, 512, 256);\n    LIBRARY.addStaticSprite(\n        FLOOR, \n        'libraryfloor', \n        0,\n        0\n    );\n\n\n\n    const BARRIER_1 = new SemiSolidFill(0x000000, 0, 0, LIBRARY.getWidth(), 10);\n    BARRIER_1.modifyCollisionBoundary(null, null, null, -BARRIER_1.getHalfHeight());\n    LIBRARY.addStaticSprite(\n        BARRIER_1,\n        'barrier1',\n        0,\n        -BARRIER_1.getFillDimensions().h\n    );\n\n\n\n    const BARRIER_2 = new SemiSolidFill(0x000000, 0, 0, LIBRARY.getWidth(), 10);\n    LIBRARY.addStaticSprite(\n        BARRIER_2,\n        'barrier2',\n        0,\n        LIBRARY.getHeight()\n    );\n\n\n\n    const BARRIER_3 = new SemiSolidFill(0x000000, 0, 0, 10, LIBRARY.getHeight());\n    BARRIER_3.modifyCollisionBoundary(null, null, -3, null);\n    LIBRARY.addStaticSprite(\n        BARRIER_3,\n        'barrier3',\n        -BARRIER_3.getFillDimensions().w,\n        0\n    );\n\n\n\n    const BARRIER_4 = new SemiSolidFill(0x000000, 0, 0, 10, LIBRARY.getHeight());\n    BARRIER_4.modifyCollisionBoundary(-3, null, null, null);\n    LIBRARY.addStaticSprite(\n        BARRIER_4,\n        'barrier4',\n        LIBRARY.getWidth(),\n        0\n    );\n\n\n\n    const SECOND_FLOOR_MAT = new Portal(LIBRARY, getTextureFromStaticJSFolder('/map/library/assets/mat2.png'), 0, 0, 32, 34);\n    LIBRARY.addStaticSprite(\n        SECOND_FLOOR_MAT,\n        '2f_mat',\n        LIBRARY.getWidth() - (SECOND_FLOOR_MAT.getSpriteFrameDimensions().w + 495),\n        20\n    );\n\n\n\n    const BOOKSHELF_1 = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/bookshelf.png'), 0, 0, 95, 97);\n    BOOKSHELF_1.modifyCollisionBoundary(\n        null,\n        BOOKSHELF_1.getSpriteFrameDimensions().h - 30, null,\n        null\n    );\n    LIBRARY.addDynamicSprite(\n        BOOKSHELF_1,\n        'bookshelf1',\n        LIBRARY.getWidth() - BOOKSHELF_1.getSpriteFrameDimensions().w,\n        LIBRARY.getHeight() - (BOOKSHELF_1.getSpriteFrameDimensions().h + 50)\n    );\n\n\n\n    const BOOKSHELF_2 = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/bookshelf.png'), 0, 0, 95, 97);\n    BOOKSHELF_2.modifyCollisionBoundary(\n        null,\n        BOOKSHELF_2.getSpriteFrameDimensions().h - 30, null,\n        null\n    );\n    LIBRARY.addDynamicSprite(\n        BOOKSHELF_2,\n        'bookshelf2',\n        LIBRARY.getWidth() - BOOKSHELF_2.getSpriteFrameDimensions().w,\n        0\n    );\n\n\n\n    const CHAIR_A = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/chairA.png'), 0, 0, 75, 48);\n    LIBRARY.addStaticSprite(\n        CHAIR_A,\n        'chairA',\n        20,\n        LIBRARY.getHeight() - (CHAIR_A.getSpriteFrameDimensions().h + 15)\n    );\n\n\n\n    const CHAIR_B = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/chairB.png'), 0, 0, 48, 75);\n    CHAIR_B.modifyCollisionBoundary(\n        null,\n        40,\n        null,\n        null\n    );\n    LIBRARY.addDynamicSprite(\n        CHAIR_B,\n        'chairB',\n        130,\n        LIBRARY.getHeight() - (CHAIR_B.getSpriteFrameDimensions().h + 75)\n    );\n\n\n\n    const MATBLUE = new Decoration(getTextureFromStaticJSFolder('/map/library/assets/matBlue.png'), 0, 0, 71, 54);\n    LIBRARY.addStaticSprite(\n        MATBLUE,\n        'matblue',\n        120,\n        LIBRARY.getHeight() - (MATBLUE.getSpriteFrameDimensions().h + 12)\n    );\n\n\n\n    const TABLELAMP = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/tableLamp.png'), 0, 0, 95, 66);\n    TABLELAMP.modifyCollisionBoundary(\n        null,\n        30,\n        null,\n        null\n    );\n    LIBRARY.addDynamicSprite(\n        TABLELAMP,\n        'tablelamp',\n        10,\n        LIBRARY.getHeight() - (TABLELAMP.getSpriteFrameDimensions().h + 80)\n    );\n\n\n\n    const WINDOWS = new Decoration(getTextureFromStaticJSFolder('/map/library/assets/window.png'), 0, 0, 525, 75);\n    LIBRARY.addStaticSprite(\n        WINDOWS,\n        'window',\n        -6,\n        -(WINDOWS.getSpriteFrameDimensions().h - 5)\n    );\n\n\n\n    return LIBRARY; \n})();\n","import { PlayableArea } from '../creation.js';\nimport {getTextureFromStaticAssetsFolder, getTextureFromStaticJSFolder} from '../../helpers/pixi_helpers.js';\nimport { PortalFill } from '../../sprites/portals.js';\n\nimport {\n    Decoration,\n    SemiSolid,\n    SemiSolidFill\n} from '../../sprites/objects.js';\nimport {UpgradeBench} from \"../../sprites/interactable\";\n\n\n\nexport const BASEMENT = (function () {\n    const BASEMENT = new PlayableArea(555, 441);\n    BASEMENT.addEnemySpawnPoint(50, 50);\n    BASEMENT.addEnemySpawnPoint(50, BASEMENT.getHeight() - 150);\n    BASEMENT.addEnemySpawnPoint(280, BASEMENT.getHeight() - 30);\n\n    const FLOOR = new Decoration(getTextureFromStaticJSFolder('/map/basement/assets/basefloor.png'), 0, 0, 555, 441);\n    BASEMENT.addStaticSprite(\n        FLOOR, \n        'floor', \n        0,\n        0\n    );\n\n\n\n    const BARRIER_1 = new SemiSolidFill(0x000000, 0, 0, BASEMENT.getWidth(), 10);\n    BARRIER_1.modifyCollisionBoundary(null, null, null, -BARRIER_1.getHalfHeight());\n    BASEMENT.addStaticSprite(\n        BARRIER_1,\n        'barrier1',\n        0,\n        -BARRIER_1.getFillDimensions().h\n    );\n\n\n\n    const BARRIER_2 = new SemiSolidFill(0x000000, 0, 0, BASEMENT.getWidth(), 10);\n    BASEMENT.addStaticSprite(\n        BARRIER_2,\n        'barrier2',\n        0,\n        BASEMENT.getHeight()\n    );\n\n\n\n    const BARRIER_3 = new SemiSolidFill(0x000000, 0, 0, 10, BASEMENT.getHeight());\n    BARRIER_3.modifyCollisionBoundary(null, null, -3, null);\n    BASEMENT.addStaticSprite(\n        BARRIER_3,\n        'barrier3',\n        -BARRIER_3.getFillDimensions().w,\n        0\n    );\n\n\n\n    const BARRIER_4 = new SemiSolidFill(0x000000, 0, 0, 10, BASEMENT.getHeight());\n    BARRIER_4.modifyCollisionBoundary(-3, null, null, null);\n    BASEMENT.addStaticSprite(\n        BARRIER_4,\n        'barrier4',\n        BASEMENT.getWidth(),\n        0\n    );\n\n\n\n    const DOUBLE_DOOR = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/baseelevator.png'), 0, 0, 96, 48);\n    BASEMENT.addStaticSprite(\n        DOUBLE_DOOR,\n        'double_door',\n        BASEMENT.getHalfWidth() - DOUBLE_DOOR.getHalfWidth(),\n        -(DOUBLE_DOOR.getSpriteFrameDimensions().h + 1)\n    );\n\n\n\n    const ELEVATOR = new PortalFill(BASEMENT, 0xff0000, 0, 0, DOUBLE_DOOR.getSpriteFrameDimensions().w, 35);\n    ELEVATOR.setAlpha(0);\n    BASEMENT.addStaticSprite(\n        ELEVATOR,\n        'elevator',\n        DOUBLE_DOOR.getLeftPosX(),\n        DOUBLE_DOOR.getRightPosY()\n    );\n\n\n\n    const COUCH = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/basecouch.png'), 0, 0, 143, 165);\n    COUCH.modifyCollisionBoundary(null, 10, null, null);\n    BASEMENT.addStaticSprite(\n        COUCH,\n        'basecouch',\n        BASEMENT.getHalfWidth() + COUCH.getHalfWidth(),\n        BASEMENT.getHeight() - (COUCH.getSpriteFrameDimensions().h + 90)\n    );\n\n\n\n    const FIREPLACE = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/fireplace.png'), 0, 0, 94, 116);\n    FIREPLACE.modifyCollisionBoundary(null, 30, null, -10);\n    BASEMENT.addStaticSprite(\n        FIREPLACE,\n        'fireplace',\n        BASEMENT.getHalfWidth() + COUCH.getHalfWidth(),\n        BASEMENT.getHeight() - (COUCH.getSpriteFrameDimensions().h + 250)\n    );\n\n\n\n    const BROKEN_CUPBOARD = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/brokencupboard.png'), 0, 0, 80, 108);\n    BASEMENT.addStaticSprite(\n        BROKEN_CUPBOARD,\n        'brokencupboard',\n        BASEMENT.getWidth() - (BROKEN_CUPBOARD.getSpriteFrameDimensions().w + 450),\n        BASEMENT.getHeight() - (BROKEN_CUPBOARD.getSpriteFrameDimensions().h + 5)\n    );\n\n\n\n    const STACKED_CUPBOARD = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/stackedcupboard.png'), 0, 0, 48, 107);\n    BASEMENT.addStaticSprite(\n        STACKED_CUPBOARD,\n        'stackedcupboard',\n        BASEMENT.getWidth() - (STACKED_CUPBOARD.getSpriteFrameDimensions().w + 400),\n        BASEMENT.getHeight() - (STACKED_CUPBOARD.getSpriteFrameDimensions().h + 5)\n    );\n\n\n\n    const OPEN_CHEST = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/openchest.png'), 0, 0, 59, 63);\n    BASEMENT.addStaticSprite(\n        OPEN_CHEST,\n        'openchest',\n        BASEMENT.getWidth() - (OPEN_CHEST.getSpriteFrameDimensions().w + 340),\n        BASEMENT.getHeight() - (OPEN_CHEST.getSpriteFrameDimensions().h + 5)\n    );\n\n    const UPGRADE_BENCH = new UpgradeBench(getTextureFromStaticAssetsFolder('/consumables/upgradeBench.png'), 240, 140, 50, 50);\n    BASEMENT.addStaticSprite(\n        UPGRADE_BENCH,\n        \"upgrade_bench1\",\n        240,\n        120\n    );\n\n\n\n    return BASEMENT;\n})();","import * as checks from '../helpers/checks.js';\nimport { Item } from '../sprites/base/base.js';\nimport { Gun } from '../sprites/weapons.js';\nimport { Player } from '../sprites/entities.js';\n\nimport {\n    updateAmmoCount,\n    hideAmmoCount\n} from './hud.js';\n\n\n\nexport class Inventory {\n    constructor(player, texture, posX, posY, selection_texture) {\n        checks.checkIfInstance(player, Player);\n        checks.checkIfInstance(texture, PIXI.Texture);\n        checks.checkIfNumber(posX);\n        checks.checkIfNumber(posY);\n        checks.checkIfInstance(selection_texture, PIXI.Texture);\n\n        this.sprite = new PIXI.Sprite(texture);\n\n        this.inventory = [\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ];\n        this.currentSelItem = null;\n\n        this.inventoryContainer = new PIXI.Container();\n        this.inventoryContainer.x = posX;\n        this.inventoryContainer.y = posY;\n\n        this.selectorSprite = new PIXI.Sprite(selection_texture);\n        this.selectorSprite.x = -2;\n        this.selectorSprite.y = -2;\n        this.selectorSprite.width = 36;\n        this.selectorSprite.height = 36;\n\n        this.inventoryContainer.addChild(this.sprite,this.selectorSprite);\n\n        this.player = player;\n    };\n\n\n\n    // GETTERS\n    ___getPositionInInventory__(index) {\n        // returns x-coordinate of item\n\n        checks.checkIfNumber(index);\n\n        return -2 + ((this.selectorSprite.width - 4) * (index - 1));\n    };\n\n    display() {\n        return this.inventoryContainer;\n    };\n\n    getSelItem() {\n        return this.currentSelItem;\n    };\n\n\n\n    // SETTERS\n    addItem(item) {\n        checks.checkIfInstance(item, Item);\n\n        const ICON = item.getIcon();\n        this.inventoryContainer.addChild(ICON);\n\n        const NUM_OF_ITEMS_IN_INVENTORY = this.inventory.length;\n        let stored = false;\n\n        for (let i=0; i < NUM_OF_ITEMS_IN_INVENTORY; i++) {\n            if (this.inventory[i] === null) {\n                this.inventory.splice(i, 1, item);\n\n                ICON.x = this.___getPositionInInventory__(i + 1) + 2;\n\n                stored = true;\n\n                break;\n            }\n\n            if (i === NUM_OF_ITEMS_IN_INVENTORY && stored === false) {\n                // if inventory is full, ignore item?\n            }\n        }\n    };\n\n    changeSelItem(index) {\n        this.player.unequip();\n\n        const SELECTED_ITEM = this.inventory[index - 1];\n\n        this.currentSelItem = SELECTED_ITEM;\n\n        if (SELECTED_ITEM instanceof Item) {\n            this.player.equip(SELECTED_ITEM);\n\n            if (SELECTED_ITEM instanceof Gun) {\n                updateAmmoCount(SELECTED_ITEM);\n            }\n            else {\n                hideAmmoCount();\n            }\n        }\n        else {\n            hideAmmoCount();\n        }\n\n        this.selectorSprite.x = this.___getPositionInInventory__(index);\n    };\n\n    removeSelItem() {\n        const ICON = this.currentSelItem.getIcon();\n        const POS_IN_INVENTORY = this.inventoryContainer.getChildIndex(ICON) - 2;\n\n        this.inventoryContainer.removeChild(ICON);\n        this.inventory.splice(POS_IN_INVENTORY, 1, null);\n\n        this.currentSelItem = null;\n    };\n};","{\n\t\"el\": {\n\t\t\"x\": 0,\n\t\t\"y\": 0,\n\t\t\"w\": 30,\n\t\t\"h\": 46\n\t},\n\t\"er\": {\n\t\t\"x\": 33,\n\t\t\"y\": 1,\n\t\t\"w\": 29,\n\t\t\"h\": 46\n\t},\n\t\"e\": {\n\t\t\"x\": 64,\n\t\t\"y\": 1,\n\t\t\"w\": 29,\n\t\t\"h\": 47\n\t},\n\t\"nl\": {\n\t\t\"x\": 95,\n\t\t\"y\": 1,\n\t\t\"w\": 30,\n\t\t\"h\": 46\n\t},\n\t\"nr\": {\n\t\t\"x\": 127,\n\t\t\"y\": 1,\n\t\t\"w\": 30,\n\t\t\"h\": 46\n\t},\n\t\"n\": {\n\t\n\t\t\"x\": 159,\n\t\t\"y\": 1,\n\t\t\"w\": 29,\n\t\t\"h\": 47\n\t},\n\t\"sl\": {\n\t\t\"x\": 190,\n\t\t\"y\": 1,\n\t\t\"w\": 30,\n\t\t\"h\": 46\n\t},\n\t\"sr\": {\n\t\t\"x\": 222,\n\t\t\"y\": 1,\n\t\t\"w\": 30,\n\t\t\"h\": 46\n\t},\n\t\"s\": {\n\t\t\"x\": 254,\n\t\t\"y\": 1,\n\t\t\"w\": 29,\n\t\t\"h\": 46\n\t},\n\t\"wl\": {\n\t\t\"x\": 285,\n\t\t\"y\": 1,\n\t\t\"w\": 29,\n\t\t\"h\": 46\n\t},\n\t\"w\": {\n\t\t\"x\": 316,\n\t\t\"y\": 1,\n\t\t\"w\": 29,\n\t\t\"h\": 47\n\t},\n\t\"wr\": {\n\t\t\"x\": 347,\n\t\t\"y\": 1,\n\t\t\"w\": 29,\n\t\t\"h\": 46\n\t}\n}","import * as checks from '../helpers/checks.js';\nimport { Zombie } from \"../sprites/entities.js\";\nimport { getTextureFromStaticAssetsFolder } from '../helpers/pixi_helpers.js';\n\nimport zombie_frames_json from '../../assets/sprite_sheets/enemies/clothed_zombie.json';\n\n\n\nexport class Wave {\n    constructor(id, batches, difficultyMod) {\n        checks.checkIfArray(batches);\n\n        this.id = id; // unused as of now, might be useful later\n        this.batches = batches; // an array containing the number of zombies to spawn in each batch i.e. [3, 5, 7] would spawn 3 zombies, then 5, then 7\n\n\n        // this.zombieTypes = zombieTypes todo if we have more zombie types\n        this.difficultyMod = difficultyMod; // unused as of now, later I will add interaction with the zombies' stats\n        this.currentBatch = 0;\n        this.toSpawnNext = [];\n    };\n\n\n\n    // GETTERS\n    getNextBatch() {\n        // generates an array containing all zombies to be spawned based of the numbers in this.batches\n\n        this.toSpawnNext = [];\n\n        if (this.currentBatch >= this.batches.length) {\n            return 0;\n        }\n        else {\n            for (let i = 0; i < this.batches[this.currentBatch]; i++) {\n                const ZOMBIE = new Zombie(getTextureFromStaticAssetsFolder('/sprite_sheets/enemies/clothed_zombie.png'),\n                0,\n                0,\n                zombie_frames_json.s.w, zombie_frames_json.s.h\n                );\n\n                this.toSpawnNext.push(ZOMBIE);\n            }\n\n            this.currentBatch++;\n\n            return this.toSpawnNext;\n        }\n    };\n};\n","import * as checks from '../helpers/checks.js';\nimport { PlayableArea } from '../map/creation.js';\nimport { Wave } from './Wave.js';\nimport { NON_PLAYER_ENTITIES } from './collision.js';\nimport { STATIC_ASSETS_FOLDER } from '../helpers/urls.js';\n\nimport zombie_frames_json from \"../../assets/sprite_sheets/enemies/clothed_zombie.json\";\n\n\n\nexport class WaveSystem {\n    constructor(starting_map, waves, batch_delay) {\n        checks.checkIfInstance(starting_map, PlayableArea);\n\n        checks.checkIfArray(waves);\n        if (waves.length === 0) {\n            throw Error(\"Waves cannot be empty.\");\n        }\n        waves.every((wave) => {\n            if (wave instanceof Wave === false) {\n                throw TypeError(\"All waves must be an instance of the Wave class.\");\n            }\n        });\n\n        checks.checkIfNumber(batch_delay);\n\n\n\n        this.map = starting_map;\n        this.spawnPoints = starting_map.getEnemySpawnPoints(); // array containing {x: ?, y: ?}\n\n        this.current_wave_index = 0;\n        this.waves = waves;\n        this.current_wave = this.waves[0];\n\n        this.next_wave_timeout = null;\n        this.next_wave_delay = 3000;\n\n        this.batch_delay = batch_delay;\n        this.isBatchDone = false;\n\n        this.time = 0;\n\n        this.music = new Audio(`${STATIC_ASSETS_FOLDER}/sounds/haunted-harpsichord.mp3`);\n        this.music.volume = 0.1;\n    };\n\n\n\n    // GETTERS\n    getRandomInt(min, max) {\n        checks.checkIfNumber(min);\n        checks.checkIfNumber(max);\n\n        min = Math.ceil(min);\n        max = Math.floor(max);\n\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    checkIfBatchDone() {\n        this.isBatchDone = Math.floor(Date.now() / 1000) - this.time >= this.batch_delay;\n\n        return this.isBatchDone;\n    };\n\n\n\n    // SETTERS\n    setWaveDelay(delay) {\n        checks.checkIfNumber(delay);\n\n        this.next_wave_delay = delay;\n    };\n\n    updatePlayableArea(playableArea) {\n        checks.checkIfInstance(playableArea, PlayableArea);\n\n        this.map = playableArea;\n        this.spawnPoints = playableArea.getEnemySpawnPoints();\n    };\n\n    moveToNextWaveIfFinished() {\n        if (this.next_wave_timeout === null && NON_PLAYER_ENTITIES.length === 0 && this.current_wave_index + 1 < this.waves.length) {\n            this.waves.splice(this.waves.indexOf(this.current_wave), 1, null); // the instance of the finished wave is thrown in the garbage collector\n\n            this.next_wave_timeout = setTimeout(() => {\n                this.current_wave_index++;\n\n                this.current_wave = this.waves[this.current_wave_index];\n\n                this.next_wave_timeout = null;\n            }, this.next_wave_delay);\n        }\n    };\n\n    spawnNextBatch() {\n        let toSpawn = this.current_wave.getNextBatch();\n\n        for (let i=0; i < toSpawn.length; i++) {\n            const ENEMY = toSpawn[i];\n            const ENEMY_DIMENSIONS = ENEMY.getSpriteFrameDimensions();\n            ENEMY.addFrames(zombie_frames_json);\n            ENEMY.switchFrame('n');\n\n            const SPAWN_LOCATION = this.spawnPoints[this.getRandomInt(0, this.spawnPoints.length - 1)];\n\n            this.map.addDynamicSprite(\n                ENEMY,\n                (Date.now() * (i+1)).toString(),\n                SPAWN_LOCATION.x - ENEMY_DIMENSIONS.w,\n                SPAWN_LOCATION.y - ENEMY_DIMENSIONS.h\n            );\n\n            ENEMY.sprite.alpha = 0; // prepares for fade-in animation\n\n            this.time = Math.floor(Date.now() / 1000); // gets time zombies spawned\n        }\n    };\n\n    respawnBatch() {\n        const NUM_OF_ENEMIES_LEFT = NON_PLAYER_ENTITIES.length;\n\n        if (NUM_OF_ENEMIES_LEFT > 0) {\n            for (let i=0; i < NUM_OF_ENEMIES_LEFT; i++) {\n                const ENEMY = NON_PLAYER_ENTITIES[i];\n                const ENEMY_DIMENSIONS = ENEMY.getSpriteFrameDimensions();\n\n                const SPAWN_LOCATION = this.spawnPoints[this.getRandomInt(0, this.spawnPoints.length - 1)];\n\n                this.map.addDynamicSprite(\n                    ENEMY,\n                    `zombie${i}`,\n                    SPAWN_LOCATION.x - ENEMY_DIMENSIONS.w,\n                    SPAWN_LOCATION.y - ENEMY_DIMENSIONS.h\n                );\n\n                ENEMY.sprite.alpha = 0;\n\n                this.time = Math.floor(Date.now() / 1000);\n            }\n        }\n    };\n\n    enemySpawnFadeIn() {\n        const NUM_OF_NPE = NON_PLAYER_ENTITIES.length;\n\n        if (NUM_OF_NPE > 0) {\n            for (let i=0; i < NUM_OF_NPE; i++) {\n                const ENEMY = NON_PLAYER_ENTITIES[i].sprite;\n\n                if (ENEMY.alpha < 1) {\n                    ENEMY.alpha += 0.01;\n                }\n            }\n        }\n    };\n\n    playMusic() {\n        if (this.music.paused) {\n            this.music.play();\n        }\n    };\n};\n","const PAUSE_MENU = document.getElementById('pause');\n\nPAUSE_MENU.addEventListener('click', (event) => {\n    const ELEMENT_CLICKED = event.target;\n\n    if (ELEMENT_CLICKED.tagName === 'BUTTON') {\n        const ACTION = ELEMENT_CLICKED.getAttribute('data-action');\n\n        if (ACTION === 'resume') {\n            hidePauseMenu();\n        }\n        else if (ACTION === 'exit') {\n            window.location.assign('/');\n        }\n    };\n});\n\nexport function showPauseMenu() {\n    window.GAME_PAUSED = true;\n\n    PAUSE_MENU.classList.remove('hide');\n};\n\nexport function hidePauseMenu() {\n    window.GAME_PAUSED = false;\n\n    PAUSE_MENU.classList.add('hide');\n};","import * as checks from '../helpers/checks.js';\nimport { Item } from './base/base.js';\nimport { getTextureFromStaticAssetsFolder } from '../helpers/pixi_helpers.js';\nimport { Player } from './entities.js';\n\n\n\nexport class HealingItem extends Item {\n    constructor(texture) {\n        super(texture);\n    };\n\n\n\n    // SETTERS\n    heal(player) {\n        checks.checkIfInstance(player, Player);\n\n        player.increaseHealth(this.health);\n    };\n};\n\nexport class BandageBox extends HealingItem {\n    constructor() {\n        super(getTextureFromStaticAssetsFolder('/consumables/bandage_box.png'));\n\n        this.health = 20;\n    };\n};\n","import * as checks from '../helpers/checks.js';\nimport { Player } from '../sprites/entities.js';\n\nimport {\n    checkCollisionWithLeftEdgesOfObstacles,\n    checkCollisionWithRightEdgesOfObstacles,\n    checkCollisionWithTopEdgesOfObstacles,\n    checkCollisionWithBottomEdgesOfObstacles\n} from '../core/collision.js';\n\nexport const MOVEMENT_KEY_STATUSES = {\n    w: false,\n    s: false,\n    a: false,\n    d: false\n};\n\nexport function checkForCollisionsAndMovePlayer(sprite) {\n    checks.checkIfInstance(sprite, Player);\n\n    if (MOVEMENT_KEY_STATUSES.s && MOVEMENT_KEY_STATUSES.d) {\n        const COLLIDED_WITH_A_TOP_EDGE = checkCollisionWithTopEdgesOfObstacles(sprite).status;\n        const COLLIDED_WITH_A_LEFT_EDGE = checkCollisionWithLeftEdgesOfObstacles(sprite).status;\n\n        if (COLLIDED_WITH_A_TOP_EDGE === false && COLLIDED_WITH_A_LEFT_EDGE === false) {\n            sprite.moveSpriteSouthEast();\n        }\n        else if (COLLIDED_WITH_A_TOP_EDGE && COLLIDED_WITH_A_LEFT_EDGE === false) {\n            sprite.moveSpriteEast();\n        }\n        else if (COLLIDED_WITH_A_LEFT_EDGE && COLLIDED_WITH_A_TOP_EDGE === false) {\n            sprite.moveSpriteSouth();\n        }\n    }\n    else if (MOVEMENT_KEY_STATUSES.s && MOVEMENT_KEY_STATUSES.a) {\n        const COLLIDED_WITH_A_TOP_EDGE = checkCollisionWithTopEdgesOfObstacles(sprite).status;\n        const COLLIDED_WITH_A_RIGHT_EDGE = checkCollisionWithRightEdgesOfObstacles(sprite).status;\n\n        if (COLLIDED_WITH_A_TOP_EDGE === false && COLLIDED_WITH_A_RIGHT_EDGE === false) {\n            sprite.moveSpriteSouthWest();\n        }\n        else if (COLLIDED_WITH_A_TOP_EDGE && COLLIDED_WITH_A_RIGHT_EDGE === false) {\n            sprite.moveSpriteWest();\n        }\n        else if (COLLIDED_WITH_A_RIGHT_EDGE && COLLIDED_WITH_A_TOP_EDGE === false) {\n            sprite.moveSpriteSouth();\n        }\n    }\n    else if (MOVEMENT_KEY_STATUSES.w && MOVEMENT_KEY_STATUSES.d) {\n        const COLLIDED_WITH_A_BOTTOM_EDGE = checkCollisionWithBottomEdgesOfObstacles(sprite).status;\n        const COLLIDED_WITH_A_LEFT_EDGE = checkCollisionWithLeftEdgesOfObstacles(sprite).status;\n\n        if (COLLIDED_WITH_A_BOTTOM_EDGE === false && COLLIDED_WITH_A_LEFT_EDGE === false) {\n            sprite.moveSpriteNorthEast();\n        }\n        else if (COLLIDED_WITH_A_BOTTOM_EDGE && COLLIDED_WITH_A_LEFT_EDGE === false) {\n            sprite.moveSpriteEast();\n        }\n        else if (COLLIDED_WITH_A_LEFT_EDGE && COLLIDED_WITH_A_BOTTOM_EDGE === false) {\n            sprite.moveSpriteNorth();\n        }\n    }\n    else if (MOVEMENT_KEY_STATUSES.w && MOVEMENT_KEY_STATUSES.a) {\n        const COLLIDED_WITH_A_BOTTOM_EDGE = checkCollisionWithBottomEdgesOfObstacles(sprite).status;\n        const COLLIDED_WITH_A_RIGHT_EDGE = checkCollisionWithRightEdgesOfObstacles(sprite).status;\n\n        if (COLLIDED_WITH_A_BOTTOM_EDGE === false && COLLIDED_WITH_A_RIGHT_EDGE === false) {\n            sprite.moveSpriteNorthWest();\n        }\n        else if (COLLIDED_WITH_A_BOTTOM_EDGE && COLLIDED_WITH_A_RIGHT_EDGE === false) {\n            sprite.moveSpriteWest();\n        }\n        else if (COLLIDED_WITH_A_RIGHT_EDGE && COLLIDED_WITH_A_BOTTOM_EDGE === false) {\n            sprite.moveSpriteNorth();\n        }\n    }\n    else if (MOVEMENT_KEY_STATUSES.w && checkCollisionWithBottomEdgesOfObstacles(sprite).status === false) {\n        sprite.moveSpriteNorth();\n    }\n    else if (MOVEMENT_KEY_STATUSES.s && checkCollisionWithTopEdgesOfObstacles(sprite).status === false) {\n        sprite.moveSpriteSouth();\n    }\n    else if (MOVEMENT_KEY_STATUSES.a && checkCollisionWithRightEdgesOfObstacles(sprite).status === false) {\n        sprite.moveSpriteWest();\n    }\n    else if (MOVEMENT_KEY_STATUSES.d && checkCollisionWithLeftEdgesOfObstacles(sprite).status === false) {\n        sprite.moveSpriteEast();\n    }\n};\n","{\n\t\"e\": {\n\t\t\"x\": 0,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 32\n\t},\n\t\"el\": {\n\t\t\"x\": 23,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"er\": {\n\t\t\"x\": 46,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"n\": {\n\t\t\"x\": 69,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 32\n\t},\n\t\"nl\": {\n\t\t\"x\": 92,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"nr\": {\n\t\t\"x\": 115,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"s\": {\n\t\t\"x\": 138,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 33\n\t},\n\t\"sl\": {\n\t\t\"x\": 161,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"sr\": {\n\t\t\"x\": 184,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"w\": {\n\t\t\"x\": 207,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 32\n\t},\n\t\"wl\": {\n\t\t\"x\": 230,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"wr\": {\n\t\t\"x\": 253,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t}\n}","const TEXT_STYLE = {\n    fontSize: 20,\n    fill: 0xffffff,\n};\n\nexport const AMMO_CACHE_POPUP = new PIXI.Text(\"Press E to refill ammo.(500)\",TEXT_STYLE)\nAMMO_CACHE_POPUP.alpha = 0\nexport const PORTAL_POPUP = new PIXI.Text(\"Press Q to change rooms.\",TEXT_STYLE)\nPORTAL_POPUP.alpha = 0\nexport const UPGRADE_BENCH_POPUP = new PIXI.Text(\"CHOOSE UPGRADE(1000): E: Ammo and clip size. T: Damage\",TEXT_STYLE)\nUPGRADE_BENCH_POPUP.alpha = 0\n\n\nexport function managePopUp(popup,player,isClose){\n    if (isClose){\n        if (popup.alpha < 1.0){\n\n            popup.alpha += 0.01\n        }\n    }else {\n        if (popup.alpha > 0.0){\n\n            popup.alpha -= 0.01\n        }\n    }\n\n}","import { FOYER } from '../../map/foyer/foyer.js';\nimport { LIBRARY } from '../../map/library/library.js';\nimport { BASEMENT } from '../../map/basement/basement.js';\nimport { getTextureFromStaticAssetsFolder } from '../../helpers/pixi_helpers.js';\nimport { Inventory } from '../../core/inventory.js';\nimport { NON_PLAYER_ENTITIES } from '../../core/collision.js';\nimport { PORTALS } from '../../sprites/portals.js';\nimport { WaveSystem } from '../../core/WaveSystem.js';\nimport { Wave } from '../../core/Wave.js';\nimport { Player } from '../../sprites/entities.js';\n\nimport {\n    INTERACTABLES,\n    AmmoCache, UpgradeBench\n} from '../../sprites/interactable.js';\n\nimport {\n    showPauseMenu,\n    hidePauseMenu\n} from '../../core/pause_menu.js';\n\nimport {\n    HealingItem,\n    BandageBox\n} from '../../sprites/consumables.js';\n\nimport {\n    Gun,\n    Pistol\n} from '../../sprites/weapons.js';\n\nimport {\n    MOVEMENT_KEY_STATUSES,\n    checkForCollisionsAndMovePlayer\n} from '../../core/movement.js';\n\nimport {\n    PLAYER_HEALTH_STATUS,\n    AMMO_COUNT, updatePlayerPointsText, PLAYER_POINTS\n} from '../../core/hud.js';\n\nimport player_frames_json from '../../../assets/sprite_sheets/player/player.json';\nimport {\n    AMMO_CACHE_POPUP,\n    managePopUp,\n    PORTAL_POPUP, UPGRADE_BENCH, UPGRADE_BENCH_POPUP\n} from \"../../sprites/popups.js\";\n\n\n\n\nAMMO_CACHE_POPUP.anchor.set(0.5)\nAMMO_CACHE_POPUP.x = window.innerWidth/2\nAMMO_CACHE_POPUP.y = 20\n\nPORTAL_POPUP.anchor.set(0.5)\nPORTAL_POPUP.x = window.innerWidth/2\nPORTAL_POPUP.y = 20\n\nUPGRADE_BENCH_POPUP.anchor.set(0.5)\nUPGRADE_BENCH_POPUP.x = window.innerWidth/2\nUPGRADE_BENCH_POPUP.y = 20\n\n\nwindow.addEventListener('load', () => {\n    const GAME = new PIXI.Application({\n        resizeTo: window,\n    });\n    const GAME_VIEW = GAME.view;\n\n    GAME_VIEW.style.position = 'absolute';\n\n    document.body.appendChild(GAME_VIEW);\n\n\n\n    // INITIALIZING GLOBALS\n    window.timeGameStarted = new Date();\n    window.GAME_PAUSED = false;\n    window.playableAreaExists = false;\n    window.HOTBAR = undefined;\n\n\n\n    // INITIALIZING WAVES\n    const WAVE_SYSTEM = new WaveSystem(\n        FOYER,\n        [\n            new Wave(0, [1], 1),\n            // new Wave(0, [1,1,2], 1)\n        ],\n        5\n    );\n\n\n\n    // PLAYER\n    const player = new Player(getTextureFromStaticAssetsFolder('/sprite_sheets/player/player.png'), 0, 0, player_frames_json.s.w, player_frames_json.s.h);\n    player.addFrames(player_frames_json);\n    player.switchFrame('e');\n\n    window.HOTBAR = new Inventory(\n        player,\n        getTextureFromStaticAssetsFolder('/inventory/hotbar.png'),\n        20,\n        50,\n        getTextureFromStaticAssetsFolder('/inventory/selector.png')\n    );\n\n    const HANDGUN = new Pistol(\n        getTextureFromStaticAssetsFolder('/guns/handgun.png')\n    );\n\n    window.HOTBAR.addItem(HANDGUN);\n    window.HOTBAR.addItem(new BandageBox());\n\n    window.HOTBAR.changeSelItem(8);\n\n\n\n    // MOVEMENT\n    window.addEventListener('keyup', (event) => {\n        switch (event.key.toLowerCase()) {\n            case 'w':\n                MOVEMENT_KEY_STATUSES.w = false;\n                break;\n            case 's':\n                MOVEMENT_KEY_STATUSES.s = false;\n                break;\n            case 'a':\n                MOVEMENT_KEY_STATUSES.a = false;\n                break;\n            case 'd':\n                MOVEMENT_KEY_STATUSES.d = false;\n                break;\n        }\n    });\n\n    window.addEventListener('keydown', (event) => {\n        const KEY_PRESSED = event.key.toLowerCase();\n\n        if (KEY_PRESSED === 'escape' && window.playableAreaExists === true) {\n            if (window.GAME_PAUSED === false) {\n                showPauseMenu();\n            }\n            else if (window.GAME_PAUSED) {\n                hidePauseMenu();\n            }\n        }\n\n\n\n        if (window.GAME_PAUSED === false) {\n            const SELECTED_ITEM = window.HOTBAR.getSelItem();\n\n            switch (KEY_PRESSED) {\n                case 'w':\n                    MOVEMENT_KEY_STATUSES.w = true;\n                    break;\n                case 's':\n                    MOVEMENT_KEY_STATUSES.s = true;\n                    break;\n                case 'a':\n                    MOVEMENT_KEY_STATUSES.a = true;\n                    break;\n                case 'd':\n                    MOVEMENT_KEY_STATUSES.d = true;\n                    break;\n                case '1':\n                    window.HOTBAR.changeSelItem(1);\n                    break;\n                case '2':\n                    window.HOTBAR.changeSelItem(2);\n                    break;\n                case '3':\n                    window.HOTBAR.changeSelItem(3);\n                    break;\n                case '4':\n                    window.HOTBAR.changeSelItem(4);\n                    break;\n                case '5':\n                    window.HOTBAR.changeSelItem(5);\n                    break;\n                case '6':\n                    window.HOTBAR.changeSelItem(6);\n                    break;\n                case '7':\n                    window.HOTBAR.changeSelItem(7);\n                    break;\n                case '8':\n                    window.HOTBAR.changeSelItem(8);\n                    break;\n                case 'r':\n                    // manual reload\n                    if (SELECTED_ITEM instanceof Gun && SELECTED_ITEM.getAmmoLoaded() !== SELECTED_ITEM.getClipCapacity() && SELECTED_ITEM.getAmmoLeft() > 0) {\n                        SELECTED_ITEM.reload();\n                    }\n\n                    break;\n                case ' ':\n                    // spacebar\n                    if (SELECTED_ITEM instanceof HealingItem && player.getHealth() < 100) {\n                        SELECTED_ITEM.heal(player);\n\n                        window.HOTBAR.removeSelItem();\n                    }\n\n                    break;\n                case 'q':\n                    const NUM_OF_PORTALS = PORTALS.length;\n\n                    if (NUM_OF_PORTALS > 0) {\n                        for (let i=0; i < NUM_OF_PORTALS; i++) {\n                            const PORTAL = PORTALS[i];\n\n                            if (PORTAL.playerIsInsidePortal(player)) {\n                                PORTAL.teleport(player);\n\n                                WAVE_SYSTEM.updatePlayableArea(PORTAL.destination);\n\n                                WAVE_SYSTEM.respawnBatch();\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                case 't':\n\n\n                    for (let i=0; i < INTERACTABLES.length; i++) {\n                        const INTERACTABLE = INTERACTABLES[i];\n                        if (INTERACTABLE.playerIsNearInteractable(player, UPGRADE_BENCH_POPUP)) {\n                            if (INTERACTABLE instanceof UpgradeBench && player.currentPoints >= INTERACTABLE.pointCost && window.HOTBAR.getSelItem() instanceof Gun) {\n                                player.currentPoints -= INTERACTABLE.pointCost\n                                updatePlayerPointsText(player.currentPoints)\n                                INTERACTABLE.upgradeGun(window.HOTBAR.getSelItem(), false)\n                            }\n\n                        }\n                    }\n                case 'e':\n                    const NUM_OF_INTERACTABLES = INTERACTABLES.length;\n\n                    for (let i=0; i < NUM_OF_INTERACTABLES; i++) {\n                        const INTERACTABLE = INTERACTABLES[i];\n\n                        if (INTERACTABLE.playerIsNearInteractable(player,AMMO_CACHE_POPUP)) {\n                            if (INTERACTABLE instanceof AmmoCache && player.currentPoints >= INTERACTABLE.pointCost && window.HOTBAR.getSelItem() instanceof Gun) {\n                                player.currentPoints -= INTERACTABLE.pointCost\n                                updatePlayerPointsText(player.currentPoints)\n                                INTERACTABLE.resupply(window.HOTBAR.getSelItem());\n                            }\n\n                        }\n\n                        if (INTERACTABLE.playerIsNearInteractable(player,UPGRADE_BENCH_POPUP)) {\n                            if (INTERACTABLE instanceof UpgradeBench && player.currentPoints >= INTERACTABLE.pointCost && window.HOTBAR.getSelItem() instanceof Gun) {\n                                player.currentPoints -= INTERACTABLE.pointCost\n                                updatePlayerPointsText(player.currentPoints)\n                                INTERACTABLE.upgradeGun(window.HOTBAR.getSelItem(),true)\n                            }\n\n                        }\n\n\n                    }\n\n                    break;\n            }\n\n            checkForCollisionsAndMovePlayer(player);\n\n            // rotates enemies to player\n            const NUM_OF_ENTITIES = NON_PLAYER_ENTITIES.length;\n\n            if (NUM_OF_ENTITIES > 0) {\n                for (let i=0; i < NUM_OF_ENTITIES; i++) {\n                    NON_PLAYER_ENTITIES[i].rotateToPlayer(player);\n                }\n            }\n        }\n    });\n\n    window.addEventListener('mousemove', (event) => {\n        window.mouseX = event.x;\n        window.mouseY = event.y;\n\n        if (window.GAME_PAUSED === false && MOVEMENT_KEY_STATUSES.w === false && MOVEMENT_KEY_STATUSES.a === false && MOVEMENT_KEY_STATUSES.s === false && MOVEMENT_KEY_STATUSES.d === false) {\n            player.rotateToMouse();\n        }\n    });\n\n\n\n    // INTERACTION\n    window.addEventListener('contextmenu', (event) => {\n        event.preventDefault();\n    });\n\n\n\n    // MAPS\n    FOYER.addDynamicSprite(player, 'player', 250, 150);\n\n    FOYER.setPosition(\n        GAME_VIEW.width * 0.5 - FOYER.getHalfWidth(),\n        GAME_VIEW.height * 0.5 - FOYER.getHalfHeight()\n    );\n    FOYER.bindPlayableAreaToPortal('2f_mat', LIBRARY, 5, 15);\n    FOYER.bindPlayableAreaToPortal('elevator', BASEMENT, BASEMENT.getHalfWidth() - 10, 0);\n\n\n\n    LIBRARY.setPosition(\n        GAME_VIEW.width * 0.5 - LIBRARY.getHalfWidth(),\n        GAME_VIEW.height * 0.5 - LIBRARY.getHalfHeight()\n    );\n    LIBRARY.bindPlayableAreaToPortal('2f_mat', FOYER, 480, 12);\n\n\n\n    BASEMENT.setPosition(\n        GAME_VIEW.width * 0.5 - BASEMENT.getHalfWidth(),\n        GAME_VIEW.height * 0.5 - BASEMENT.getHalfHeight()\n    );\n    BASEMENT.bindPlayableAreaToPortal('elevator', FOYER, 245, 0);\n\n\n\n    GAME.stage.addChild(\n        PLAYER_HEALTH_STATUS,\n        AMMO_COUNT,\n        PLAYER_POINTS,\n        UPGRADE_BENCH_POPUP,\n        AMMO_CACHE_POPUP,\n        PORTAL_POPUP,\n        window.HOTBAR.display(),\n        FOYER.load(),\n    );\n\n    GAME.ticker.add(() => {\n        if (window.GAME_PAUSED === false) {\n            // WAVE_SYSTEM.playMusic();\n\n            // spawns waves of enemies\n            WAVE_SYSTEM.enemySpawnFadeIn();\n\n            if (WAVE_SYSTEM.checkIfBatchDone()) {\n                WAVE_SYSTEM.spawnNextBatch();\n\n                WAVE_SYSTEM.moveToNextWaveIfFinished();\n            }\n\n            let isClose = false;\n\n            //manages popups for all interactables\n            //still need to make popup for when ammo cache is empty\n            const NUM_OF_INTERACTABLES = INTERACTABLES.length;\n            const POPUPS = [\n                AMMO_CACHE_POPUP,\n                UPGRADE_BENCH_POPUP\n            ];\n            var INTERACTABLE;\n            var POPUP;\n\n            for (let i = 0; i < INTERACTABLES.length; i++) {\n                INTERACTABLE = INTERACTABLES[i];\n\n\n                isClose = INTERACTABLE.playerIsNearInteractable(player);\n\n                if (INTERACTABLE instanceof AmmoCache){\n                    managePopUp(POPUPS[0], player, isClose)\n                }\n                else if (INTERACTABLE instanceof UpgradeBench){\n                    managePopUp(POPUPS[1], player, isClose)\n                }\n            }\n\n            //manages popups for all portals\n            const NUM_OF_PORTALS = PORTALS.length;\n\n            isClose = false\n            // if (NUM_OF_PORTALS > 0) {\n            for (let i = 0; i < NUM_OF_PORTALS; i++) {\n                const PORTAL = PORTALS[i];\n\n                isClose = isClose || PORTAL.playerIsInsidePortal(player) //if player is near ANY of the portals\n            }\n\n            managePopUp(PORTAL_POPUP, player, isClose);\n\n            let NUM_OF_ENTITIES = NON_PLAYER_ENTITIES.length;\n\n            if (NUM_OF_ENTITIES > 0) {\n                for (let i=0; i < NON_PLAYER_ENTITIES.length; i++) {\n                    if (NON_PLAYER_ENTITIES[i].removeSelf()) {\n                        player.currentPoints += 100;\n\n                        updatePlayerPointsText(player.currentPoints);\n                    }\n                }\n            }\n\n            // moves enemies\n            /*\n            NUM_OF_ENTITIES = NON_PLAYER_ENTITIES.length;\n\n            if (NUM_OF_ENTITIES > 0) {\n                for (let i=0; i < NON_PLAYER_ENTITIES.length; i++) {\n                    NON_PLAYER_ENTITIES[i].moveToPlayer(player);\n                }\n            }\n            */\n        }\n    });\n});\n"],"names":["$055b56dae6540897$export$c1fd22218e1d5d7c","x","TypeError","$055b56dae6540897$export$c1d81aafca5643b7","$055b56dae6540897$export$954a2495bc90760b","c","Object","DESCRIPTORS","getOwnPropertyDescriptors","undefined","prototype","writable","name","$055b56dae6540897$export$530cc31d5abe7164","constructor","$055b56dae6540897$export$75c46322b3f4cef6","toString","call","$055b56dae6540897$export$729789c15d885b09","Array","$447e1fc69c3c6b29$export$3075603db8e6204c","texture","posX","posY","frameWidth","frameHeight","PIXI","Texture","this","sprite","Sprite","spriteFrameWidth","spriteFrameHeight","sprite_container","Container","addChild","y","original_tint","tint","frameMask","frames","currentFrame","isFlippedHorizontally","isFlippedVertically","events","getLeftPosX","getLeftPosY","getRightPosX","getRightPosY","getCenterCoordinates","getHalfWidth","getHalfHeight","getSpriteFrameDimensions","w","h","getCurrentFrame","getSprite","__setFrameMask__","removeChild","MASK","Graphics","beginFill","drawRect","endFill","mask","setPosition","addEvent","event","callback","ReferenceError","push","addFrame","addFrames","json","FRAME_NAMES","keys","NUM_OF_FRAMES","length","i","NAME","FRAME_DATA","switchFrame","FRAME","EVENT","EVENT_CALLBACKS","NUM_OF_CALLBACKS","flipHorizontally","scale","flipVertically","$447e1fc69c3c6b29$export$a9ebb6c99f4b12f","color","width","height","FILL","fillWidth","fillHeight","getFillDimensions","setFillDimensions","setAlpha","alpha","Error","$447e1fc69c3c6b29$export$6d08773d2e66f8f2","icon","getIcon","$eb0fa54359859bf9$var$ABSOLUTE_URL","window","location","href","$eb0fa54359859bf9$export$4617796a5c124a3","substring","indexOf","$eb0fa54359859bf9$export$dc18e99198e81fac","$eb0fa54359859bf9$export$699417a6ff4bb8ad","$eb0fa54359859bf9$export$4013285cb33161df","$bc7abbc416dbe80c$export$c5ad7413410ca9b6","container","HOTBAR","getSelItem","$bc7abbc416dbe80c$export$df1739ff5943c5c5","cursor","$bc7abbc416dbe80c$export$a0b1da4b3d9a7c29","super","createCopy","COPY","getAmmoLoaded","ammoLoaded","getMaxAmmo","maxAmmo","getAmmoLeft","ammoLeft","getClipCapacity","clipCapacity","playGunFireSound","Audio","gunFireSoundFile","play","playReloadSound","AUDIO","reloadSoundFile","getDamage","damage","fire","mode","$4beb54c4248c2a0b$export$a8fbbb95ebf5e1eb","reload","setTimeout","AMMO_NEEDED","reloadDuration","addMaxAmmo","amount","setDamage","increaseDamage","increaseClipCapacity","increaseMaxAmmo","$bc7abbc416dbe80c$export$22b5da18f28522c","loadNorth","PISTOL","rotation","loadSouth","loadWest","loadEast","$4beb54c4248c2a0b$var$HUD_TEXT_STYLES","fontSize","fill","$4beb54c4248c2a0b$export$a8ee0c4525dd1efc","Text","$4beb54c4248c2a0b$export$2633d4e2d7923a4f","new_value","text","$4beb54c4248c2a0b$export$673fec14e97cd38c","$4beb54c4248c2a0b$export$357d64c1a8553042","$4beb54c4248c2a0b$export$e124bd517a23a085","gun","$4beb54c4248c2a0b$export$6fececfcd78a9e58","$63aeaa209fa90a1d$var$DEATH_SCREEN","document","getElementById","$63aeaa209fa90a1d$var$TIME_SURVIVED","$63aeaa209fa90a1d$export$89ab9f15f62b6fe","GAME_PAUSED","MS_ELAPSED","Date","timeGameStarted","HRS","Math","round","MINS","SECS","hrs","mins","secs","innerText","XHR","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","millisecondsSurvived","pointsEarned","classList","remove","addEventListener","ELEMENT_CLICKED","target","tagName","getAttribute","assign","$f42e0145fa3b0de9$export$5c089a222833d7b7","$f42e0145fa3b0de9$export$83b45c7b75260f83","detours","top","bottom","left","right","checkIfLeftEdgeCollisionOccurred","checkIfRightEdgeCollisionOccurred","checkIfTopEdgeCollisionOccurred","checkIfBottomEdgeCollisionOccurred","getDetours","edge","__addDetour__","array_of_points","NUM_OF_ELEMENTS","E","SyntaxError","addBottomEdgeDetour","addTopEdgeDetour","addLeftEdgeDetour","addRightEdgeDetour","$f42e0145fa3b0de9$export$10e30b733df217ea","$f42e0145fa3b0de9$export$9c67d0fb7845fc3a","boundaryLeftX","boundaryLeftY","boundaryRightX","boundaryRightY","modifyCollisionBoundary","leftX","leftY","rightX","rightY","$f42e0145fa3b0de9$export$b8c1d832be6c36f4","$f42e0145fa3b0de9$export$981c67e023a9aec2","$f42e0145fa3b0de9$export$c12e0934e361dcfb","$fad65b29b104dbc4$export$bc644a473284d944","movementOffset","move","onChangeFrame","itemInstance","equippedItem","__renderWeapon__","weapon","frame","addChildAt","getSpeed","equip","item","unequip","showDamage","hideDamage","setSpeed","speed","moveSprite","moveSpriteNorth","moveSpriteNorthWest","moveSpriteNorthEast","moveSpriteWest","moveSpriteEast","moveSpriteSouth","moveSpriteSouthWest","moveSpriteSouthEast","$fad65b29b104dbc4$export$2616165974278734","health","invincibility","currentPoints","reset_to_idle_timer","clearTimeout","rotateToMouse","getMilliseconds","isInvincible","getHealth","PLAYER_CENTER","player_sprite_parent","parent","corrected_offsetX","corrected_offsetY","MOUSE_X_DISTANCE_FROM_PLAYER","mouseX","MOUSE_Y_DISTANCE_FROM_PLAYER","mouseY","MOUSE_ANGLE_FROM_PLAYER","atan2","PI","activateInvincibility","setHealth","increaseHealth","value","decreaseHealth","$fad65b29b104dbc4$export$eefe978c73a9a6","navigationMode","objectCollidedWith","edgeCollidedWith","detourChosen","detourPointIndex","isDead","$9b7e5ea655ca4149$export$bff783bfdb067478","interactive","on","stopPropagation","SELECTED_ITEM","__getMoveDirectionFromAngle__","angle","__getEnemyXandYDistanceFromPlayer__","player","PLAYER_SPRITE","ENEMY_CENTER","dx","dy","__getAngleToPlayer__","DISTANCES","getClosestDetour","object","toLowerCase","ALL_DETOURS","ENTITY_CENTER","closestDetour","previousDistance","NUM_OF_DETOURS","START_OF_DETOUR","DISTANCE","sqrt","pow","__switchFrameToAngle__","rotateToPlayer","PLAYER_ANGLE_FROM_ENEMY","stopFollowingPlayerAndMoveAroundObject","collision_data","stopFollowingDetourAndChasePlayerAgain","moveToPlayer","DIRECTION","BEC","$9b7e5ea655ca4149$export$1cc9a4c9bd1983c7","TEC","$9b7e5ea655ca4149$export$dcf70b533fb4a0d","LEC","$9b7e5ea655ca4149$export$7a433b70ec9b070b","status","REC","$9b7e5ea655ca4149$export$cb4d699551bb5fa4","DIFFERENCES","__damagePlayer___","DISTANCE_DIFFERENCE","DISTANCE_BETWEEN_ENEMY_AND_PLAYER","POINT","moveToDetourPoint","point","ANGLE_TO_DETOUR","removeSelf","deathSoundFile","splice","$fad65b29b104dbc4$export$6e8a1450080785fb","$9b7e5ea655ca4149$export$a8bee8959f012a48","$9b7e5ea655ca4149$var$checkCollisionWithObstacles","side","NUM_OF_OBSTACLES","SPRITE_SPEED","SLX","SLY","SRX","SRY","OBSTACLE","OLX","OLY","ORX","ORY","SB_above_TE","SLSR_between_LERE","SL_before_LE","SR_after_RE","SL_between_LERE","SR_between_LERE","CORRECTED_SR","SR_before_LE","STSB_between_TEBE","ST_above_TE","SB_below_BE","ST_between_TEBE","SB_between_TEBE","CORRECTED_SB","SL_after_RE","ST_below_BE","CORRECTED_SL","$d67f2e95369ca4db$export$601be208ee6d82bd","$d67f2e95369ca4db$export$79bcc792e09118e6","areaOfEffect","playerIsNearInteractable","PLAYER_INSIDE_LR_EDGES","PLAYER_INSIDE_TB_EDGES","setAreaOfEffect","$d67f2e95369ca4db$export$3344539c25389870","pointCost","resupply","$d67f2e95369ca4db$export$95d7b5515177bc32","upgradeGun","option","$01679fe3b35426c7$export$5e2d81e0179aa2d0","$01679fe3b35426c7$export$602eac185826482c","origin","$72d8c79cec8991ee$export$f879ab33fe896c77","destination","dest_X","dest_Y","playerIsInsidePortal","setDestination","playableArea","teleport","GAME_STAGE","area","unload","load","addDynamicSprite","$01679fe3b35426c7$export$a53c4ee499a3e32d","BACKGROUND","staticSprites","dynamicSprites","STATIC_SPRITES_CONTAINER","DYNAMIC_SPRITES_CONTAINER","OBSTACLES","PORTALS","INTERACTABLES","ENEMY_SPAWN_POINTS","COLORED_COORDINATES","mousedownEvent","mousemoveEvent","infinite_loop","Ticker","add","sortSpriteOrder","getWidth","getHeight","getEnemySpawnPoints","NUM_OF_COLORED_COORDINATES","NUM_OF_PORTALS","NUM_OF_INTERACTABLES","start","playableAreaExists","DYNAMIC_SPRITE_IDS","NUM_OF_DYNAMIC_SPRITES","ID","CURRENT_DS","stop","off","addStaticSprite","id","addEnemySpawnPoint","colorCoordinate","ALL_SPRITES","values","num_of_sprites","posY_of_sprites","CURRENT_SPRITE","sort","CURRENT_POSY","j","UNSORTED_SPRITE","setChildIndex","COLORED_COORDINATE","NUM_OF_POINTS","bindPlayableAreaToPortal","sprite_id","dest_x","dest_y","PORTAL","$f389c7f65bdecc61$export$98f4ff1f87ac5ea1","path","from","$f389c7f65bdecc61$export$829fc592b825817b","$ebb8c16ad3d46dff$export$1e2fbfecb8d6181a","FOYER","FLOOR","BARRIER_1","BARRIER_2","BARRIER_3","BARRIER_4","DOUBLE_DOOR","ELEVATOR","WINDOW","SECOND_FLOOR_MAT","WALL","STAIRS_1","STAIRS_2","RAILING_1","RAILING_2","RAILING_3","RAILING_4","RAILING_5","RAILING_6","RAILING_7","RAILING_8","RAILING_9","RAILING_10","FIRST_FLOOR_MAT","PLANT_1","PLANT_2","AMMO_CACHE","$33dbaacaa6903be0$export$76b9408c74847095","LIBRARY","BOOKSHELF_1","BOOKSHELF_2","CHAIR_A","CHAIR_B","MATBLUE","TABLELAMP","WINDOWS","$da57cbd7522a9f54$export$5a6deae79826c69f","BASEMENT","COUCH","FIREPLACE","BROKEN_CUPBOARD","STACKED_CUPBOARD","OPEN_CHEST","UPGRADE_BENCH","$c1641248ba4f377f$export$a033e390692f359f","selection_texture","inventory","currentSelItem","inventoryContainer","selectorSprite","___getPositionInInventory__","index","display","addItem","ICON","NUM_OF_ITEMS_IN_INVENTORY","stored","changeSelItem","removeSelItem","POS_IN_INVENTORY","getChildIndex","$7e1a3eba7c230737$exports","parse","$5af8d8e473921fa6$export$b8bb87b40c00c04e","batches","difficultyMod","currentBatch","toSpawnNext","getNextBatch","ZOMBIE","$parcel$interopDefault","s","$c2f5f2549270ecd2$export$8379f5927a9e0200","starting_map","waves","batch_delay","every","wave","map","spawnPoints","current_wave_index","current_wave","next_wave_timeout","next_wave_delay","isBatchDone","time","music","volume","getRandomInt","min","max","ceil","floor","random","checkIfBatchDone","now","setWaveDelay","delay","updatePlayableArea","moveToNextWaveIfFinished","spawnNextBatch","toSpawn","ENEMY","ENEMY_DIMENSIONS","SPAWN_LOCATION","respawnBatch","NUM_OF_ENEMIES_LEFT","enemySpawnFadeIn","NUM_OF_NPE","playMusic","paused","$a0bd98d26f211948$var$PAUSE_MENU","$a0bd98d26f211948$export$5077b2c5a115b59f","ACTION","$880699b69b4c27ce$export$8208542d311dea4d","heal","$880699b69b4c27ce$export$40484f638139eeeb","$4adf7c211d5af7ab$export$c78719efa376154b","a","d","$4adf7c211d5af7ab$export$e6b77f3ffb10ae0a","COLLIDED_WITH_A_TOP_EDGE","COLLIDED_WITH_A_LEFT_EDGE","COLLIDED_WITH_A_RIGHT_EDGE","COLLIDED_WITH_A_BOTTOM_EDGE","$12aaf15313b572ba$exports","$4255e8fb559ee815$var$TEXT_STYLE","$4255e8fb559ee815$export$44d3e7520cec0af9","$4255e8fb559ee815$export$d311869d29f5c745","$4255e8fb559ee815$export$148f7335001e806a","$4255e8fb559ee815$export$a1896023b12c4e5a","popup","isClose","anchor","set","innerWidth","GAME","Application","resizeTo","GAME_VIEW","view","style","position","body","appendChild","WAVE_SYSTEM","HANDGUN","key","KEY_PRESSED","INTERACTABLE","NUM_OF_ENTITIES","preventDefault","stage","ticker","POPUPS"],"version":3,"file":"test.js.map"}