{"mappings":"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","sources":["static/js/dev/andrew/test.js","static/js/map/foyer/foyer.js","static/js/map/creation.js","static/js/helpers/checks.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","static/js/core/collision.js","static/js/sprites/entities.js","static/js/sprites/base/base.js","static/js/core/hud.js","static/js/sprites/weapons.js","static/js/helpers/urls.js","static/js/sprites/objects.js","static/js/core/death_screen.js","static/js/sprites/interactable.js","static/js/sprites/portals.js","static/js/helpers/pixi_helpers.js","static/js/map/library/library.js","static/js/map/basement/basement.js","static/js/core/inventory.js","static/js/core/WaveSystem.js","static/js/core/Wave.js","static/assets/sprite_sheets/enemies/clothed_zombie.json","static/js/core/pause_menu.js","static/js/sprites/consumables.js","static/js/core/movement.js","static/assets/sprite_sheets/player/player.json","static/js/sprites/popups.js"],"sourcesContent":["import { FOYER } from '../../map/foyer/foyer.js';\r\nimport { LIBRARY } from '../../map/library/library.js';\r\nimport { BASEMENT } from '../../map/basement/basement.js';\r\nimport { getTextureFromStaticAssetsFolder } from '../../helpers/pixi_helpers.js';\r\nimport { Inventory } from '../../core/inventory.js';\r\nimport { NON_PLAYER_ENTITIES } from '../../core/collision.js';\r\nimport { PORTALS } from '../../sprites/portals.js';\r\nimport { WaveSystem } from '../../core/WaveSystem.js';\r\nimport { Wave } from '../../core/Wave.js';\r\nimport { Player } from '../../sprites/entities.js';\r\n\r\nimport {\r\n    INTERACTABLES,\r\n    AmmoCache, UpgradeBench\r\n} from '../../sprites/interactable.js';\r\n\r\nimport {\r\n    showPauseMenu,\r\n    hidePauseMenu\r\n} from '../../core/pause_menu.js';\r\n\r\nimport {\r\n    HealingItem,\r\n    BandageBox\r\n} from '../../sprites/consumables.js';\r\n\r\nimport {\r\n    Gun,\r\n    Pistol\r\n} from '../../sprites/weapons.js';\r\n\r\nimport {\r\n    MOVEMENT_KEY_STATUSES,\r\n    checkForCollisionsAndMovePlayer\r\n} from '../../core/movement.js';\r\n\r\nimport {\r\n    PLAYER_HEALTH_STATUS,\r\n    AMMO_COUNT, updatePlayerPointsText, PLAYER_POINTS\r\n} from '../../core/hud.js';\r\n\r\nimport player_frames_json from '../../../assets/sprite_sheets/player/player.json';\r\nimport {\r\n    AMMO_CACHE_POPUP,\r\n    managePopUp,\r\n    PORTAL_POPUP, UPGRADE_BENCH, UPGRADE_BENCH_POPUP\r\n} from \"../../sprites/popups.js\";\r\n\r\n\r\n\r\n\r\nAMMO_CACHE_POPUP.anchor.set(0.5)\r\nAMMO_CACHE_POPUP.x = window.innerWidth/2\r\nAMMO_CACHE_POPUP.y = 20\r\n\r\nPORTAL_POPUP.anchor.set(0.5)\r\nPORTAL_POPUP.x = window.innerWidth/2\r\nPORTAL_POPUP.y = 20\r\n\r\nUPGRADE_BENCH_POPUP.anchor.set(0.5)\r\nUPGRADE_BENCH_POPUP.x = window.innerWidth/2\r\nUPGRADE_BENCH_POPUP.y = 20\r\n\r\n\r\nwindow.addEventListener('load', () => {\r\n    const GAME = new PIXI.Application({\r\n        resizeTo: window,\r\n    });\r\n    const GAME_VIEW = GAME.view;\r\n\r\n    GAME_VIEW.style.position = 'absolute';\r\n\r\n    document.body.appendChild(GAME_VIEW);\r\n\r\n\r\n\r\n    // INITIALIZING GLOBALS\r\n    window.timeGameStarted = new Date();\r\n    window.GAME_PAUSED = false;\r\n    window.playableAreaExists = false;\r\n    window.HOTBAR = undefined;\r\n\r\n\r\n\r\n    // INITIALIZING WAVES\r\n    const WAVE_SYSTEM = new WaveSystem(\r\n        FOYER,\r\n        [\r\n            new Wave(0, [1,2], 1),\r\n            new Wave(0, [1,1,2], 1)\r\n        ],\r\n        5\r\n    );\r\n\r\n\r\n\r\n    // PLAYER\r\n    const player = new Player(getTextureFromStaticAssetsFolder('/sprite_sheets/player/player.png'), 0, 0, player_frames_json.s.w, player_frames_json.s.h);\r\n    player.addFrames(player_frames_json);\r\n    player.switchFrame('e');\r\n\r\n    window.HOTBAR = new Inventory(\r\n        player,\r\n        getTextureFromStaticAssetsFolder('/inventory/hotbar.png'),\r\n        20,\r\n        50,\r\n        getTextureFromStaticAssetsFolder('/inventory/selector.png')\r\n    );\r\n\r\n    const HANDGUN = new Pistol(\r\n        getTextureFromStaticAssetsFolder('/guns/handgun.png')\r\n    );\r\n\r\n    window.HOTBAR.addItem(HANDGUN);\r\n    window.HOTBAR.addItem(new BandageBox());\r\n\r\n    window.HOTBAR.changeSelItem(8);\r\n\r\n\r\n\r\n    // MOVEMENT\r\n    window.addEventListener('keyup', (event) => {\r\n        switch (event.key.toLowerCase()) {\r\n            case 'w':\r\n                MOVEMENT_KEY_STATUSES.w = false;\r\n                break;\r\n            case 's':\r\n                MOVEMENT_KEY_STATUSES.s = false;\r\n                break;\r\n            case 'a':\r\n                MOVEMENT_KEY_STATUSES.a = false;\r\n                break;\r\n            case 'd':\r\n                MOVEMENT_KEY_STATUSES.d = false;\r\n                break;\r\n        }\r\n    });\r\n\r\n    window.addEventListener('keydown', (event) => {\r\n        const KEY_PRESSED = event.key.toLowerCase();\r\n\r\n        if (KEY_PRESSED === 'escape' && window.playableAreaExists === true) {\r\n            if (window.GAME_PAUSED === false) {\r\n                showPauseMenu();\r\n            }\r\n            else if (window.GAME_PAUSED) {\r\n                hidePauseMenu();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (window.GAME_PAUSED === false) {\r\n            const SELECTED_ITEM = window.HOTBAR.getSelItem();\r\n\r\n            switch (KEY_PRESSED) {\r\n                case 'w':\r\n                    MOVEMENT_KEY_STATUSES.w = true;\r\n                    break;\r\n                case 's':\r\n                    MOVEMENT_KEY_STATUSES.s = true;\r\n                    break;\r\n                case 'a':\r\n                    MOVEMENT_KEY_STATUSES.a = true;\r\n                    break;\r\n                case 'd':\r\n                    MOVEMENT_KEY_STATUSES.d = true;\r\n                    break;\r\n                case '1':\r\n                    window.HOTBAR.changeSelItem(1);\r\n                    break;\r\n                case '2':\r\n                    window.HOTBAR.changeSelItem(2);\r\n                    break;\r\n                case '3':\r\n                    window.HOTBAR.changeSelItem(3);\r\n                    break;\r\n                case '4':\r\n                    window.HOTBAR.changeSelItem(4);\r\n                    break;\r\n                case '5':\r\n                    window.HOTBAR.changeSelItem(5);\r\n                    break;\r\n                case '6':\r\n                    window.HOTBAR.changeSelItem(6);\r\n                    break;\r\n                case '7':\r\n                    window.HOTBAR.changeSelItem(7);\r\n                    break;\r\n                case '8':\r\n                    window.HOTBAR.changeSelItem(8);\r\n                    break;\r\n                case 'r':\r\n                    // manual reload\r\n                    if (SELECTED_ITEM instanceof Gun && SELECTED_ITEM.getAmmoLoaded() !== SELECTED_ITEM.getClipCapacity() && SELECTED_ITEM.getAmmoLeft() > 0) {\r\n                        SELECTED_ITEM.reload();\r\n                    }\r\n\r\n                    break;\r\n                case ' ':\r\n                    // spacebar\r\n                    if (SELECTED_ITEM instanceof HealingItem && player.getHealth() < 100) {\r\n                        SELECTED_ITEM.heal(player);\r\n\r\n                        window.HOTBAR.removeSelItem();\r\n                    }\r\n\r\n                    break;\r\n                case 'q':\r\n                    const NUM_OF_PORTALS = PORTALS.length;\r\n\r\n                    if (NUM_OF_PORTALS > 0) {\r\n                        for (let i=0; i < NUM_OF_PORTALS; i++) {\r\n                            const PORTAL = PORTALS[i];\r\n\r\n                            if (PORTAL.playerIsInsidePortal(player)) {\r\n                                PORTAL.teleport(player);\r\n\r\n                                WAVE_SYSTEM.updatePlayableArea(PORTAL.destination);\r\n\r\n                                WAVE_SYSTEM.respawnBatch();\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                case 't':\r\n\r\n\r\n                    for (let i=0; i < INTERACTABLES.length; i++) {\r\n                        const INTERACTABLE = INTERACTABLES[i];\r\n                        if (INTERACTABLE.playerIsNearInteractable(player, UPGRADE_BENCH_POPUP)) {\r\n                            if (INTERACTABLE instanceof UpgradeBench && player.currentPoints >= INTERACTABLE.pointCost && window.HOTBAR.getSelItem() instanceof Gun) {\r\n                                player.currentPoints -= INTERACTABLE.pointCost\r\n                                updatePlayerPointsText(player.currentPoints)\r\n                                INTERACTABLE.upgradeGun(window.HOTBAR.getSelItem(), false)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                case 'e':\r\n                    const NUM_OF_INTERACTABLES = INTERACTABLES.length;\r\n\r\n                    for (let i=0; i < NUM_OF_INTERACTABLES; i++) {\r\n                        const INTERACTABLE = INTERACTABLES[i];\r\n\r\n                        if (INTERACTABLE.playerIsNearInteractable(player,AMMO_CACHE_POPUP)) {\r\n                            if (INTERACTABLE instanceof AmmoCache && player.currentPoints >= INTERACTABLE.pointCost && window.HOTBAR.getSelItem() instanceof Gun) {\r\n                                player.currentPoints -= INTERACTABLE.pointCost\r\n                                updatePlayerPointsText(player.currentPoints)\r\n                                INTERACTABLE.resupply(window.HOTBAR.getSelItem());\r\n                            }\r\n\r\n                        }\r\n\r\n                        if (INTERACTABLE.playerIsNearInteractable(player,UPGRADE_BENCH_POPUP)) {\r\n                            if (INTERACTABLE instanceof UpgradeBench && player.currentPoints >= INTERACTABLE.pointCost && window.HOTBAR.getSelItem() instanceof Gun) {\r\n                                player.currentPoints -= INTERACTABLE.pointCost\r\n                                updatePlayerPointsText(player.currentPoints)\r\n                                INTERACTABLE.upgradeGun(window.HOTBAR.getSelItem(),true)\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    break;\r\n            }\r\n\r\n            checkForCollisionsAndMovePlayer(player);\r\n\r\n            // rotates enemies to player\r\n            const NUM_OF_ENTITIES = NON_PLAYER_ENTITIES.length;\r\n\r\n            if (NUM_OF_ENTITIES > 0) {\r\n                for (let i=0; i < NUM_OF_ENTITIES; i++) {\r\n                    NON_PLAYER_ENTITIES[i].rotateToPlayer(player);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    window.addEventListener('mousemove', (event) => {\r\n        window.mouseX = event.x;\r\n        window.mouseY = event.y;\r\n\r\n        if (window.GAME_PAUSED === false && MOVEMENT_KEY_STATUSES.w === false && MOVEMENT_KEY_STATUSES.a === false && MOVEMENT_KEY_STATUSES.s === false && MOVEMENT_KEY_STATUSES.d === false) {\r\n            player.rotateToMouse();\r\n        }\r\n    });\r\n\r\n\r\n\r\n    // INTERACTION\r\n    window.addEventListener('contextmenu', (event) => {\r\n        event.preventDefault();\r\n    });\r\n\r\n\r\n\r\n    // MAPS\r\n    FOYER.addDynamicSprite(player, 'player', 250, 150);\r\n\r\n    FOYER.setPosition(\r\n        GAME_VIEW.width * 0.5 - FOYER.getHalfWidth(),\r\n        GAME_VIEW.height * 0.5 - FOYER.getHalfHeight()\r\n    );\r\n    FOYER.bindPlayableAreaToPortal('2f_mat', LIBRARY, 5, 15);\r\n    FOYER.bindPlayableAreaToPortal('elevator', BASEMENT, BASEMENT.getHalfWidth() - 10, 0);\r\n\r\n\r\n\r\n    LIBRARY.setPosition(\r\n        GAME_VIEW.width * 0.5 - LIBRARY.getHalfWidth(),\r\n        GAME_VIEW.height * 0.5 - LIBRARY.getHalfHeight()\r\n    );\r\n    LIBRARY.bindPlayableAreaToPortal('2f_mat', FOYER, 480, 12);\r\n\r\n\r\n\r\n    BASEMENT.setPosition(\r\n        GAME_VIEW.width * 0.5 - BASEMENT.getHalfWidth(),\r\n        GAME_VIEW.height * 0.5 - BASEMENT.getHalfHeight()\r\n    );\r\n    BASEMENT.bindPlayableAreaToPortal('elevator', FOYER, 245, 0);\r\n\r\n\r\n\r\n    GAME.stage.addChild(\r\n        PLAYER_HEALTH_STATUS,\r\n        AMMO_COUNT,\r\n        PLAYER_POINTS,\r\n        UPGRADE_BENCH_POPUP,\r\n        AMMO_CACHE_POPUP,\r\n        PORTAL_POPUP,\r\n        window.HOTBAR.display(),\r\n        FOYER.load(),\r\n    );\r\n\r\n    GAME.ticker.add(() => {\r\n        if (window.GAME_PAUSED === false) {\r\n            // WAVE_SYSTEM.playMusic();\r\n\r\n            // spawns waves of enemies\r\n            WAVE_SYSTEM.enemySpawnFadeIn();\r\n\r\n            if (WAVE_SYSTEM.checkIfBatchDone()) {\r\n                WAVE_SYSTEM.spawnNextBatch();\r\n\r\n                WAVE_SYSTEM.moveToNextWaveIfFinished();\r\n            }\r\n\r\n            let isClose = false\r\n            //manages popups for all interactables\r\n            //still need to make popup for when ammo cache is empty\r\n            const NUM_OF_INTERACTABLES = INTERACTABLES.length;\r\n            const POPUPS = [AMMO_CACHE_POPUP,UPGRADE_BENCH_POPUP]\r\n            var INTERACTABLE;\r\n            var POPUP;\r\n            for (let i = 0; i < INTERACTABLES.length; i++) {\r\n                INTERACTABLE = INTERACTABLES[i];\r\n\r\n\r\n                isClose = INTERACTABLE.playerIsNearInteractable(player)\r\n               if (INTERACTABLE instanceof AmmoCache){\r\n                   managePopUp(POPUPS[0], player, isClose)\r\n               }\r\n               if (INTERACTABLE instanceof UpgradeBench){\r\n                   managePopUp(POPUPS[1], player, isClose)\r\n               }\r\n\r\n\r\n\r\n            }\r\n            //manages popups for all portals\r\n            const NUM_OF_PORTALS = PORTALS.length;\r\n\r\n            isClose = false\r\n            // if (NUM_OF_PORTALS > 0) {\r\n            for (let i = 0; i < NUM_OF_PORTALS; i++) {\r\n                const PORTAL = PORTALS[i];\r\n\r\n                isClose = isClose || PORTAL.playerIsInsidePortal(player) //if player is near ANY of the portals\r\n\r\n\r\n            }\r\n            managePopUp(PORTAL_POPUP, player, isClose)\r\n\r\n            let NUM_OF_ENTITIES = NON_PLAYER_ENTITIES.length;\r\n\r\n\r\n            if (NUM_OF_ENTITIES > 0) {\r\n                for (let i=0; i < NON_PLAYER_ENTITIES.length; i++) {\r\n                    if (NON_PLAYER_ENTITIES[i].removeSelf()){\r\n                        player.currentPoints += 100\r\n                        updatePlayerPointsText(player.currentPoints)\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n        // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            // moves enemies\r\n            // const NUM_OF_ENTITIES = NON_PLAYER_ENTITIES.length;\r\n            NUM_OF_ENTITIES = NON_PLAYER_ENTITIES.length\r\n            if (NUM_OF_ENTITIES > 0) {\r\n                for (let i=0; i < NON_PLAYER_ENTITIES.length; i++) {\r\n                    NON_PLAYER_ENTITIES[i].moveToPlayer(player);\r\n                }\r\n            }\r\n        }\r\n    });\r\n});\r\n","import { PlayableArea } from '../creation.js';\r\nimport {AmmoCache, UpgradeBench} from \"../../sprites/interactable.js\";\r\n\r\nimport {\r\n    getTextureFromStaticAssetsFolder, getTextureFromStaticJSFolder\r\n} from '../../helpers/pixi_helpers.js';\r\n\r\nimport {\r\n    Portal,\r\n    PortalFill\r\n} from '../../sprites/portals.js';\r\n\r\nimport {\r\n    Decoration,\r\n    DecorationFill,\r\n    SemiSolid,\r\n    SemiSolidFill\r\n} from '../../sprites/objects.js';\r\n\r\n\r\n\r\nexport const FOYER = (function () {\r\n    const FOYER = new PlayableArea(512, 400);\r\n    FOYER.addEnemySpawnPoint(30, 250);\r\n    FOYER.addEnemySpawnPoint(FOYER.getWidth() - 30, 250);\r\n    FOYER.addEnemySpawnPoint(255, FOYER.getHeight() - 30);\r\n\r\n    const FLOOR = new DecorationFill(0x735848, 0, 0, 512, 400);\r\n    FOYER.addStaticSprite(FLOOR, 'floor', 0, 0);\r\n\r\n\r\n\r\n    const BARRIER_1 = new SemiSolidFill(0x000000, 0, 0, FOYER.getWidth(), 10);\r\n    BARRIER_1.modifyCollisionBoundary(null, null, null, -BARRIER_1.getHalfHeight());\r\n    FOYER.addStaticSprite(\r\n        BARRIER_1,\r\n        'barrier1',\r\n        0,\r\n        -BARRIER_1.getFillDimensions().h\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_2 = new SemiSolidFill(0x000000, 0, 0, FOYER.getWidth(), 10);\r\n    FOYER.addStaticSprite(\r\n        BARRIER_2,\r\n        'barrier2',\r\n        0,\r\n        FOYER.getHeight()\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_3 = new SemiSolidFill(0x000000, 0, 0, 10, FOYER.getHeight());\r\n    BARRIER_3.modifyCollisionBoundary(null, null, -3, null);\r\n    FOYER.addStaticSprite(\r\n        BARRIER_3,\r\n        'barrier3',\r\n        -BARRIER_3.getFillDimensions().w,\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_4 = new SemiSolidFill(0x000000, 0, 0, 10, FOYER.getHeight());\r\n    BARRIER_4.modifyCollisionBoundary(-3, null, null, null);\r\n    FOYER.addStaticSprite(\r\n        BARRIER_4,\r\n        'barrier4',\r\n        FOYER.getWidth(),\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const DOUBLE_DOOR = new SemiSolid(getTextureFromStaticJSFolder('/map/foyer/assets/Door1.png'), 0, 0, 96, 48);\r\n    FOYER.addStaticSprite(\r\n        DOUBLE_DOOR,\r\n        'double_door',\r\n        FOYER.getHalfWidth() - DOUBLE_DOOR.getHalfWidth(),\r\n        -(DOUBLE_DOOR.getSpriteFrameDimensions().h + 1)\r\n    );\r\n\r\n\r\n\r\n    const ELEVATOR = new PortalFill(FOYER, 0xff0000, 0, 0, DOUBLE_DOOR.getSpriteFrameDimensions().w, 40);\r\n    ELEVATOR.setAlpha(0);\r\n    FOYER.addStaticSprite(\r\n        ELEVATOR,\r\n        'elevator',\r\n        FOYER.getHalfWidth() - DOUBLE_DOOR.getHalfWidth(),\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const WINDOW = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/window.png'), 0, 0, 105, 75);\r\n    FOYER.addStaticSprite(\r\n        WINDOW,\r\n        'window',\r\n        50,\r\n        -(WINDOW.getSpriteFrameDimensions().h - 5)\r\n    );\r\n\r\n\r\n\r\n    const SECOND_FLOOR_MAT = new Portal(FOYER, getTextureFromStaticJSFolder('/map/foyer/assets/mat2.png'), 0, 0, 32, 34);\r\n    FOYER.addStaticSprite(\r\n        SECOND_FLOOR_MAT,\r\n        '2f_mat',\r\n        FOYER.getWidth() - (SECOND_FLOOR_MAT.getSpriteFrameDimensions().w - 10),\r\n        20\r\n    );\r\n\r\n\r\n\r\n    const WALL = new SemiSolidFill(0xF5F5DC, 0, 0, 278, 60);\r\n    const WALL_TOP_Y_REDUCTION = 15;\r\n    WALL.modifyCollisionBoundary(null, -WALL_TOP_Y_REDUCTION, null, -20);\r\n\r\n\r\n\r\n    // WALL BOTTOM EDGE DETOURS\r\n    FOYER.addBottomEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 190, y: 220},\r\n            {x: 60, y: 220},\r\n            {x: 60, y: 30}\r\n        ],\r\n        // 0x4af7f4\r\n    );\r\n\r\n    FOYER.addBottomEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 310, y: 220},\r\n            {x: 455, y: 220},\r\n            {x: 455, y: 30}\r\n        ],\r\n        // 0xebb93b\r\n    );\r\n\r\n\r\n\r\n\r\n    // WALL LEFT EDGE DETOURS\r\n    FOYER.addLeftEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 80, y: 30},\r\n            {x: 260, y: 30},\r\n            {x: 440, y: 30},\r\n            {x: 440, y: 200}\r\n        ],\r\n        // 0x4af7f4\r\n    );\r\n\r\n    FOYER.addLeftEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 60, y: 170}\r\n        ],\r\n        // 0xff0000\r\n    );\r\n\r\n\r\n\r\n    // WALL RIGHT EDGE DETOURS\r\n    FOYER.addRightEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 425, y: 30},\r\n            {x: 260, y: 30},\r\n            {x: 60, y: 30},\r\n            {x: 60, y: 200},\r\n        ],\r\n        // 0x4af7f4\r\n    );\r\n\r\n    FOYER.addRightEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 460, y: 170}\r\n        ],\r\n        // 0xff0000\r\n    );\r\n\r\n\r\n\r\n    // WALL TOP EDGE DETOURS\r\n    FOYER.addTopEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 180, y: 30},\r\n            {x: 60, y: 30},\r\n            {x: 60, y: 200},\r\n        ],\r\n        // 0xff0000\r\n    );\r\n\r\n    FOYER.addTopEdgeDetour(\r\n        WALL,\r\n        [\r\n            {x: 330, y: 30},\r\n            {x: 440, y: 30},\r\n            {x: 440, y: 200},\r\n        ],\r\n        // 0xcaeb46\r\n    );\r\n\r\n\r\n\r\n    FOYER.addStaticSprite(WALL, 'wall', 117, 80);\r\n\r\n\r\n\r\n    const STAIRS_1 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/stairs.png'), 0, 0, 117, 95);\r\n    FOYER.addStaticSprite(\r\n        STAIRS_1,\r\n        'stairs1',\r\n        0,\r\n        WALL.getLeftPosY() + WALL_TOP_Y_REDUCTION\r\n    );\r\n\r\n\r\n\r\n    const STAIRS_2 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/stairs.png'), 0, 0, 117, 95);\r\n    FOYER.addStaticSprite(\r\n        STAIRS_2,\r\n        'stairs2',\r\n        FOYER.getWidth() - STAIRS_2.getSpriteFrameDimensions().w,\r\n        STAIRS_1.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_1 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_1,\r\n        'railing1',\r\n        STAIRS_1.getRightPosX() + 4,\r\n        (WALL.getLeftPosY() + WALL_TOP_Y_REDUCTION - 5) - (RAILING_1.getSpriteFrameDimensions().h - 5)\r\n    );\r\n\r\n\r\n\r\n    const RAILING_2 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_2,\r\n        'railing2',\r\n        RAILING_1.getRightPosX(),\r\n        RAILING_1.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_3 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_3,\r\n        'railing3',\r\n        RAILING_2.getRightPosX(),\r\n        RAILING_2.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_4 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_4,\r\n        'railing4',\r\n        RAILING_3.getRightPosX(),\r\n        RAILING_3.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_5 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_5,\r\n        'railing5',\r\n        RAILING_4.getRightPosX(),\r\n        RAILING_4.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_6 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_6,\r\n        'railing6',\r\n        RAILING_5.getRightPosX(),\r\n        RAILING_5.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_7 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_7,\r\n        'railing7',\r\n        RAILING_6.getRightPosX(),\r\n        RAILING_6.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_8 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_8,\r\n        'railing8',\r\n        RAILING_7.getRightPosX(),\r\n        RAILING_7.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_9 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_9,\r\n        'railing9',\r\n        RAILING_8.getRightPosX(),\r\n        RAILING_8.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const RAILING_10 = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/railing.png'), 0, 0, 27, 18);\r\n    FOYER.addStaticSprite(\r\n        RAILING_10,\r\n        'railing10',\r\n        RAILING_9.getRightPosX(),\r\n        RAILING_9.getLeftPosY()\r\n    );\r\n\r\n\r\n\r\n    const FIRST_FLOOR_MAT = new Decoration(getTextureFromStaticJSFolder('/map/foyer/assets/mat.png'), 0, 0, 48, 96);\r\n    FOYER.addStaticSprite(\r\n        FIRST_FLOOR_MAT,\r\n        '1f_mat',\r\n        FOYER.getHalfWidth() - (FIRST_FLOOR_MAT.getSpriteFrameDimensions().w - 6),\r\n        FOYER.getHeight() - (FIRST_FLOOR_MAT.getSpriteFrameDimensions().h + 15)\r\n    );\r\n\r\n\r\n\r\n    const PLANT_1 = new SemiSolid(getTextureFromStaticJSFolder('/map/foyer/assets/plantA.png'), 0, 0, 48, 96);\r\n    PLANT_1.modifyCollisionBoundary(null, 50, null, null);\r\n    FOYER.addDynamicSprite(\r\n        PLANT_1,\r\n        'plant1',\r\n        0,\r\n        FOYER.getHeight() - (PLANT_1.getSpriteFrameDimensions().h + 5)\r\n    );\r\n\r\n\r\n\r\n    const PLANT_2 = new SemiSolid(getTextureFromStaticJSFolder('/map/foyer/assets/plantA.png'), 0, 0, 48, 96);\r\n    PLANT_2.modifyCollisionBoundary(null, 50, null, null);\r\n    FOYER.addDynamicSprite(\r\n        PLANT_2,\r\n        'plant2',\r\n        FOYER.getWidth() - PLANT_2.getSpriteFrameDimensions().w,\r\n        FOYER.getHeight() - (PLANT_2.getSpriteFrameDimensions().h + 5)\r\n    );\r\n\r\n\r\n\r\n    const AMMO_CACHE = new AmmoCache(getTextureFromStaticAssetsFolder('/consumables/ammoCache.png'), 240, 140, 50, 50);\r\n    FOYER.addStaticSprite(\r\n        AMMO_CACHE,\r\n        \"ammo_cache1\",\r\n        240,\r\n        120\r\n    );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return FOYER;\r\n})();\r\n","import * as checks from '../helpers/checks.js';\r\nimport { OBSTACLES } from '../core/collision.js';\r\nimport { Entity } from '../sprites/entities.js';\r\n\r\nimport {\r\n    INTERACTABLES,\r\n    Interactable\r\n} from '../sprites/interactable.js';\r\n\r\nimport {\r\n    PORTALS,\r\n    Portal,\r\n    PortalFill\r\n} from '../sprites/portals.js';\r\n\r\nimport {\r\n    toggleCrosshair,\r\n    Gun\r\n} from '../sprites/weapons.js';\r\n\r\nimport {\r\n    Obstacle,\r\n    ObstacleFill\r\n} from '../sprites/objects.js';\r\n\r\nimport {\r\n    Sprite,\r\n    FillSprite\r\n} from '../sprites/base/base.js';\r\n\r\n\r\n\r\n// MAP SYNTAX\r\n/*\r\nimport { PlayableArea } from '../creation.js';\r\nimport { getTextureFromStaticJSFolder } from '../../helpers/pixi_helpers.js';\r\n\r\nimport {\r\n    \r\n} from '../../sprites/objects.js';\r\n\r\nexport const MAP_NAME = (function () {\r\n    const MAP_NAME = new PlayableArea(w, h); // DO NOT REMOVE\r\n\r\n    const OBJECT = new ObjectClass(getTextureFromStaticJSFolder('path/to/object/image/from/static/js.png'), 0, 0, w, h);\r\n    FOYER.addStaticSprite(\r\n        OBJECT,\r\n        'object_id',\r\n        x,\r\n        y\r\n    );\r\n\r\n    ...\r\n\r\n    return MAP_NAME; // DO NOT REMOVE\r\n})();\r\n*/\r\n\r\n\r\n\r\nexport class PlayableArea {\r\n    constructor(width, height) {\r\n        this.area = new PIXI.Container();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const BACKGROUND = new PIXI.Graphics();\r\n        BACKGROUND.beginFill(0xFFFFFF);\r\n        BACKGROUND.drawRect(0, 0, width, height);\r\n        BACKGROUND.endFill();\r\n\r\n        this.area.addChild(BACKGROUND);\r\n\r\n        this.staticSprites = {};\r\n        this.dynamicSprites = {};\r\n\r\n        this.STATIC_SPRITES_CONTAINER = new PIXI.Container();\r\n        this.DYNAMIC_SPRITES_CONTAINER = new PIXI.Container();\r\n\r\n        this.OBSTACLES = [];\r\n        this.PORTALS = [];\r\n        this.INTERACTABLES = [];\r\n        this.ENEMY_SPAWN_POINTS = [];\r\n        this.COLORED_COORDINATES = [];\r\n\r\n\r\n\r\n        this.area.interactive = true;\r\n\r\n        this.mousedownEvent = function () {\r\n            if (window.GAME_PAUSED === false && window.HOTBAR !== undefined && window.HOTBAR !== null) {\r\n                const SELECTED_ITEM = window.HOTBAR.getSelItem();\r\n\r\n                if (SELECTED_ITEM instanceof Gun) {\r\n                    SELECTED_ITEM.fire();\r\n                }\r\n            }\r\n        };\r\n\r\n        this.mousemoveEvent = function () {\r\n            toggleCrosshair(this);\r\n        };\r\n\r\n\r\n\r\n        this.infinite_loop = new PIXI.Ticker();\r\n\r\n        this.infinite_loop.add(() => {\r\n            this.sortSpriteOrder();\r\n        });\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getLeftPosX() {\r\n        return this.area.x;\r\n    };\r\n\r\n    getLeftPosY() {\r\n        return this.area.y;\r\n    };\r\n\r\n    getRightPosX() {\r\n        return this.area.x + this.area.width;\r\n    };\r\n\r\n    getRightPosY() {\r\n        return this.area.y + this.area.height;\r\n    };\r\n\r\n    getWidth() {\r\n        return this.width;\r\n    };\r\n\r\n    getHeight() {\r\n        return this.height;\r\n    };\r\n\r\n    getHalfWidth() {\r\n        return this.width * 0.5;\r\n    };\r\n\r\n    getHalfHeight() {\r\n        return this.height * 0.5;\r\n    };\r\n\r\n    getEnemySpawnPoints() {\r\n        return this.ENEMY_SPAWN_POINTS;\r\n    };\r\n\r\n    load() {\r\n        window.GAME_PAUSED = false;\r\n\r\n        // renders sprites\r\n        this.area.addChild(\r\n            this.STATIC_SPRITES_CONTAINER,\r\n            this.DYNAMIC_SPRITES_CONTAINER,\r\n        );\r\n\r\n\r\n\r\n        // renders colored coordinates\r\n        const NUM_OF_COLORED_COORDINATES = this.COLORED_COORDINATES.length;\r\n\r\n        for (let i=0; i < NUM_OF_COLORED_COORDINATES; i++) {\r\n            this.area.addChild(this.COLORED_COORDINATES[i]);\r\n        }\r\n\r\n\r\n\r\n        // adds obstacles to collision detection queue\r\n        const NUM_OF_OBSTACLES = this.OBSTACLES.length;\r\n\r\n        for (let i=0; i < NUM_OF_OBSTACLES; i++) {\r\n            OBSTACLES.push(this.OBSTACLES[i]);\r\n        }\r\n\r\n\r\n\r\n        // adds portals to map switch detection queue\r\n        const NUM_OF_PORTALS = this.PORTALS.length;\r\n\r\n        for (let i=0; i < NUM_OF_PORTALS; i++) {\r\n            PORTALS.push(this.PORTALS[i]);\r\n        }\r\n\r\n\r\n\r\n        // adds interactables to interaction detection queue\r\n        const NUM_OF_INTERACTABLES = this.INTERACTABLES.length;\r\n\r\n        for (let i=0; i < NUM_OF_INTERACTABLES; i++) {\r\n            INTERACTABLES.push(this.INTERACTABLES[i]);\r\n        }\r\n\r\n\r\n\r\n        // runs local game loop\r\n        this.infinite_loop.start();\r\n\r\n\r\n\r\n        // binds events to playable area\r\n        this.area.on('mousedown', this.mousedownEvent);\r\n        this.area.on('mousemove', this.mousemoveEvent);\r\n\r\n\r\n\r\n        window.playableAreaExists = true;\r\n\r\n        return this.area;\r\n    };\r\n\r\n    unload() {\r\n        window.GAME_PAUSED = true;\r\n\r\n        // un-renders sprites\r\n        this.area.removeChild(this.STATIC_SPRITES_CONTAINER);\r\n\r\n        this.area.removeChild(this.DYNAMIC_SPRITES_CONTAINER);\r\n\r\n\r\n\r\n        // removes the entities from sorting queue & dynamic sprites container\r\n        const DYNAMIC_SPRITE_IDS = Object.keys(this.dynamicSprites);\r\n        const NUM_OF_DYNAMIC_SPRITES = DYNAMIC_SPRITE_IDS.length;\r\n\r\n        for (let i=0; i < NUM_OF_DYNAMIC_SPRITES; i++) {\r\n            const ID = DYNAMIC_SPRITE_IDS[i];\r\n            const CURRENT_DS = this.dynamicSprites[ID];\r\n\r\n            if (CURRENT_DS instanceof Entity) {\r\n                this.DYNAMIC_SPRITES_CONTAINER.removeChild(CURRENT_DS.getSprite());\r\n\r\n                delete this.dynamicSprites[ID];\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // removes obstacles from collision detection queue\r\n        OBSTACLES.splice(0, OBSTACLES.length);\r\n\r\n\r\n\r\n        // removes portals from map switch detection queue\r\n        PORTALS.splice(0, PORTALS.length);\r\n\r\n\r\n\r\n        // removes interactables from interaction detection queue\r\n        INTERACTABLES.splice(0, INTERACTABLES.length);\r\n\r\n\r\n\r\n        // stops local game loop\r\n        this.infinite_loop.stop();\r\n\r\n\r\n\r\n        // un-binds events to playable area\r\n        this.area.off('mousedown', this.mousedownEvent);\r\n        this.area.off('mousemove', this.mousemoveEvent);\r\n\r\n\r\n\r\n        // un-renders the playable area from the screen\r\n        this.area.parent.removeChild(this.area);\r\n\r\n        window.playableAreaExists = false;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    setPosition(x, y) {\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        this.area.x = x;\r\n        this.area.y = y;\r\n    };\r\n\r\n    addEvent(event, callback) {\r\n        checks.checkIfString(event);\r\n        checks.checkIfFunction(callback);\r\n\r\n        this.area.on(event, callback);\r\n    };\r\n\r\n    addStaticSprite(sprite, id, x, y) {\r\n        if ((sprite instanceof Sprite) === false && (sprite instanceof FillSprite) === false) {\r\n            throw ReferenceError(`Not an instance of ${Sprite.name} or ${FillSprite.name}`);\r\n        }\r\n\r\n        checks.checkIfString(id);\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        if (this.staticSprites[id] !== undefined) {\r\n            throw ReferenceError(`A sprite with the id '${id}' already exists`);\r\n        }\r\n\r\n        this.STATIC_SPRITES_CONTAINER.addChild(sprite.getSprite());\r\n        this.staticSprites[id] = sprite;\r\n\r\n        if (sprite instanceof Obstacle || sprite instanceof ObstacleFill) {\r\n            this.OBSTACLES.push(sprite);\r\n        }\r\n        else if (sprite instanceof Portal || sprite instanceof PortalFill) {\r\n            this.PORTALS.push(sprite);\r\n        }\r\n        else if (sprite instanceof Interactable) {\r\n            this.INTERACTABLES.push(sprite);\r\n        }\r\n\r\n        sprite.setPosition(x, y);\r\n    };\r\n\r\n    addDynamicSprite(sprite, id, x, y) {\r\n        if ((sprite instanceof Sprite) === false && (sprite instanceof FillSprite) === false) {\r\n            throw ReferenceError(`Not an instance of ${Sprite.name} or ${FillSprite.name}`);\r\n        }\r\n        checks.checkIfString(id);\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        if (this.dynamicSprites[id] !== undefined) {\r\n            throw ReferenceError(`A sprite with the id '${id}' already exists`);\r\n        }\r\n\r\n        this.DYNAMIC_SPRITES_CONTAINER.addChild(sprite.getSprite());\r\n        this.dynamicSprites[id] = sprite;\r\n\r\n        if (sprite instanceof Obstacle || sprite instanceof ObstacleFill) {\r\n            this.OBSTACLES.push(sprite);\r\n        }\r\n\r\n        sprite.setPosition(x, y);\r\n    };\r\n\r\n    addEnemySpawnPoint(x, y, color) {\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        this.ENEMY_SPAWN_POINTS.push({x: x, y: y});\r\n\r\n        if (typeof color === 'number') {\r\n            this.colorCoordinate(color, x, y, 5, 5);\r\n        }\r\n    };\r\n\r\n    sortSpriteOrder() {\r\n        // SPRITE ORDERING\r\n        const ALL_SPRITES = Object.values(this.dynamicSprites);\r\n        let num_of_sprites = ALL_SPRITES.length;\r\n\r\n        if (num_of_sprites > 0) {\r\n            // REMOVES SPRITES WITH NO PARENT\r\n            for (let i=0; i < num_of_sprites; i++) {\r\n                const SPRITE = ALL_SPRITES[i].getSprite();\r\n\r\n                if (SPRITE.parent === null) {\r\n                    ALL_SPRITES.splice(i, 1);\r\n                    num_of_sprites = ALL_SPRITES.length;\r\n\r\n                    delete this.dynamicSprites[Object.keys(this.dynamicSprites)[i]];\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // REORDERS SPRITE\r\n            let posY_of_sprites = [];\r\n\r\n            // gets the y coordinate of the bottom edge of every sprite\r\n            for (let i=0; i < num_of_sprites; i++) {\r\n                const CURRENT_SPRITE = ALL_SPRITES[i];\r\n\r\n                posY_of_sprites.push(CURRENT_SPRITE.getRightPosY());\r\n            }\r\n\r\n            // sorts the y coordinates in ascending order\r\n            posY_of_sprites = posY_of_sprites.sort();\r\n\r\n            for (let i=0; i < num_of_sprites; i++) {\r\n                const CURRENT_POSY = posY_of_sprites[i];\r\n\r\n                for (let j=0; j < num_of_sprites; j++) {\r\n                    const UNSORTED_SPRITE = ALL_SPRITES[j];\r\n\r\n                    // corrects the z-order of all the sprites according to the sorted y coordinates\r\n                    if (UNSORTED_SPRITE.getRightPosY() === CURRENT_POSY) {\r\n                        this.DYNAMIC_SPRITES_CONTAINER.setChildIndex(UNSORTED_SPRITE.getSprite(), i);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    colorCoordinate(color, x, y, w, h) {\r\n        checks.checkIfNumber(color);\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n        checks.checkIfNumber(w);\r\n        checks.checkIfNumber(h);\r\n\r\n        if (w > 1) {\r\n            x = x - (w * 0.5);\r\n        }\r\n        if (h > 1) {\r\n            y = y - (h * 0.5);\r\n        }\r\n\r\n        const COLORED_COORDINATE = new PIXI.Graphics();\r\n        COLORED_COORDINATE.beginFill(color);\r\n        COLORED_COORDINATE.drawRect(x, y, w, h);\r\n        COLORED_COORDINATE.endFill();\r\n\r\n        this.COLORED_COORDINATES.push(COLORED_COORDINATE);\r\n    };\r\n\r\n    __addDetour__(object, edge, array_of_points, color) {\r\n        if (object instanceof Obstacle === false && object instanceof ObstacleFill === false) {\r\n            throw TypeError(\"Object must be an obstacle.\");\r\n        }\r\n\r\n        checks.checkIfString(edge);\r\n\r\n        switch (edge) {\r\n            case 'bottom':\r\n                object.addBottomEdgeDetour(array_of_points);\r\n                break;\r\n            case 'top':\r\n                object.addTopEdgeDetour(array_of_points);\r\n                break;\r\n            case 'left':\r\n                object.addLeftEdgeDetour(array_of_points);\r\n                break;\r\n            case 'right':\r\n                object.addRightEdgeDetour(array_of_points);\r\n                break;\r\n        }\r\n\r\n        if (typeof color === 'number') {\r\n            const NUM_OF_POINTS = array_of_points.length;\r\n\r\n            for (let i=0; i < NUM_OF_POINTS; i++) {\r\n                const POINT = array_of_points[i];\r\n\r\n                this.colorCoordinate(color, POINT.x, POINT.y, 5, 5);\r\n            }\r\n        }\r\n    };\r\n\r\n    addBottomEdgeDetour(object, array_of_points, color) {\r\n        this.__addDetour__(\r\n            object,\r\n            'bottom',\r\n            array_of_points,\r\n            color\r\n        );\r\n    };\r\n\r\n    addTopEdgeDetour(object, array_of_points, color) {\r\n        this.__addDetour__(\r\n            object,\r\n            'top',\r\n            array_of_points,\r\n            color\r\n        );\r\n    };\r\n\r\n    addLeftEdgeDetour(object, array_of_points, color) {\r\n        this.__addDetour__(\r\n            object,\r\n            'left',\r\n            array_of_points,\r\n            color\r\n        );\r\n    };\r\n\r\n    addRightEdgeDetour(object, array_of_points, color) {\r\n        this.__addDetour__(\r\n            object,\r\n            'right',\r\n            array_of_points,\r\n            color\r\n        );\r\n    };\r\n\r\n    bindPlayableAreaToPortal(sprite_id, playableArea, dest_x, dest_y) {\r\n        checks.checkIfString(sprite_id);\r\n\r\n        const PORTAL = this.staticSprites[sprite_id];\r\n\r\n        if (PORTAL === undefined) {\r\n            throw Error(\"A portal with that ID does not exist.\");\r\n        }\r\n\r\n        PORTAL.setDestination(playableArea, dest_x, dest_y);\r\n    };\r\n};\r\n","export function checkIfString(x) {\r\n    if (typeof x !== 'string') {\r\n        throw TypeError(\"Not a string\");\r\n    }\r\n};\r\n\r\nexport function checkIfNumber(x) {\r\n    if (typeof x !== 'number') {\r\n        throw TypeError(\"Not an integer or float\");\r\n    }\r\n};\r\n\r\nexport function checkIfInstance(x, c) {\r\n    if (c instanceof Object) {\r\n        const DESCRIPTORS = Object.getOwnPropertyDescriptors(c);\r\n\r\n        if (DESCRIPTORS.prototype === undefined || DESCRIPTORS.prototype.writable === undefined || DESCRIPTORS.prototype.writable === true) {\r\n            throw TypeError(\"Not a class\");\r\n        }\r\n    }\r\n    else {\r\n        throw TypeError(\"Not a class\");\r\n    }\r\n\r\n    if (x instanceof c === false) {\r\n        throw TypeError(\"Not an instance of \" + c.name);\r\n    }\r\n};\r\n\r\nexport function checkIfObject(x) {\r\n    if (x.constructor === undefined || x.constructor === null || x.constructor !== Object) {\r\n        throw TypeError(\"Not an object\");\r\n    }\r\n};\r\n\r\nexport function checkIfFunction(x) {\r\n    if (typeof x !== 'function' || Object.prototype.toString.call(x) !== '[object Function]') {\r\n        throw TypeError(\"Not a function\");\r\n    }\r\n};\r\n\r\nexport function checkIfKeyExistsInObject(o, k) {\r\n    checkIfObject(o);\r\n    checkIfString(k);\r\n\r\n    if (o[k] === undefined) {\r\n        throw ReferenceError(`The key '${k}' doesn't exist in the object`);\r\n    }\r\n};\r\n\r\nexport function checkIfArray(x) {\r\n    if (x.constructor !== Array) {\r\n        throw TypeError(\"Not an array\");\r\n    }\r\n};\r\n\r\nexport function checkIfBoolean(x) {\r\n    if (typeof x !== 'boolean') {\r\n        throw TypeError(\"Not a boolean.\");\r\n    }\r\n};\r\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","import * as checks from '../helpers/checks.js';\r\nimport { Entity } from '../sprites/entities.js';\r\n\r\nexport const OBSTACLES = [];\r\nexport const NON_PLAYER_ENTITIES = [];\r\n\r\nfunction checkCollisionWithObstacles(sprite, side) {\r\n    checks.checkIfInstance(sprite, Entity);\r\n\r\n    const NUM_OF_OBSTACLES = OBSTACLES.length;\r\n\r\n    if (NUM_OF_OBSTACLES > 0) {\r\n        const SPRITE_SPEED = sprite.getSpeed();\r\n        const SLX = sprite.getLeftPosX() - SPRITE_SPEED;\r\n        const SLY = sprite.getLeftPosY() - SPRITE_SPEED;\r\n        const SRX = sprite.getRightPosX() + SPRITE_SPEED;\r\n        const SRY = sprite.getRightPosY() + SPRITE_SPEED;\r\n\r\n        for (let i=0; i < NUM_OF_OBSTACLES; i++) {\r\n            const OBSTACLE = OBSTACLES[i];\r\n\r\n            const OLX = OBSTACLE.getLeftPosX();\r\n            const OLY = OBSTACLE.getLeftPosY();\r\n            const ORX = OBSTACLE.getRightPosX();\r\n            const ORY = OBSTACLE.getRightPosY();\r\n\r\n            if (side === 'top') {\r\n                const SB_above_TE = SRY < OLY;\r\n                const SB_below_TE = SRY > OLY;\r\n                const SB_below_BE = SRY > ORY;\r\n\r\n                const SLSR_between_LERE = SLX >= OLX && SRX <= ORX;\r\n\r\n                const SL_before_LE = SLX < OLX;\r\n                const SR_after_RE = SRX > ORX;\r\n\r\n                const SL_between_LERE = SLX >= OLX && SLX <= ORX;\r\n                const SR_between_LERE = SRX >= OLX && SRX <= ORX;\r\n\r\n                const CORRECTED_SR = SRX - SPRITE_SPEED;\r\n\r\n\r\n\r\n                if (SB_below_BE && SB_below_TE) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SR < OLX && SLY < ORY) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SR < OLX && SRY > OLY) {\r\n                    continue;\r\n                }\r\n                else if (SB_above_TE === false) {\r\n                    if (SLSR_between_LERE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'top'\r\n                        };\r\n                    }\r\n                    else if (SL_before_LE && SR_between_LERE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'top'\r\n                        };\r\n                    }\r\n                    else if (SR_after_RE && SL_between_LERE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'top'\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            else if (side === 'left') {\r\n                const SR_before_LE = SRX < OLX;\r\n                const SR_after_LE = SRX > OLX;\r\n                const SR_after_RE = SRX > ORX;\r\n\r\n                const STSB_between_TEBE = SLY >= OLY && SRY <= ORY;\r\n\r\n                const ST_above_TE = SLY < OLY;\r\n                const SB_below_BE = SRY > ORY;\r\n\r\n                const ST_between_TEBE = SLY >= OLY && SLY <= ORY;\r\n                const SB_between_TEBE = SRY >= OLY && SRY <= ORY;\r\n\r\n                const CORRECTED_SB = SRY - SPRITE_SPEED;\r\n\r\n\r\n\r\n                if (SR_after_LE && SR_after_RE) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SB < OLY && SLX > OLX) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SB > ORY && SLX > OLX) {\r\n                    continue;\r\n                }\r\n                else if (SR_before_LE === false) {\r\n                    if (STSB_between_TEBE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'left'\r\n                        };\r\n                    }\r\n                    else if (ST_above_TE && SB_between_TEBE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'left'\r\n                        };\r\n                    }\r\n                    else if (SB_below_BE && ST_between_TEBE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'left'\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            else if (side === 'right') {\r\n                const SL_after_RE = SLX > ORX;\r\n                const SL_before_LE = SLX < OLX;\r\n                const SL_before_RE = SLX < ORX;\r\n\r\n                const STSB_between_TEBE = SLY >= OLY && SRY <= ORY;\r\n\r\n                const ST_above_TE = SLY < OLY;\r\n                const SB_below_BE = SRY > ORY;\r\n\r\n                const ST_between_TEBE = SLY >= OLY && SLY <= ORY;\r\n                const SB_between_TEBE = SRY >= OLY && SRY <= ORY;\r\n\r\n                const CORRECTED_SB = SRY - SPRITE_SPEED;\r\n\r\n\r\n\r\n                if (SL_before_LE && SL_before_RE) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SB < OLY && SRX < ORX) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SB > ORY && SRX < ORX) {\r\n                    continue;\r\n                }\r\n                else if (SL_after_RE === false) {\r\n                    if (STSB_between_TEBE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'right'\r\n                        };\r\n                    }\r\n                    else if (ST_above_TE && SB_between_TEBE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'right'\r\n                        };\r\n                    }\r\n                    else if (SB_below_BE && ST_between_TEBE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'right'\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            else if (side === 'bottom') {\r\n                const ST_below_BE = SLY > ORY;\r\n                const ST_above_TE = SLY < OLY;\r\n                const ST_above_BE = SLY < ORY;\r\n\r\n                const SLSR_between_LERE = SLX >= OLX && SRX <= ORX;\r\n\r\n                const SL_before_LE = SLX < OLX;\r\n                const SR_after_RE = SRX > ORX;\r\n\r\n                const SL_between_LERE = SLX >= OLX && SLX <= ORX;\r\n                const SR_between_LERE = SRX >= OLX && SRX <= ORX;\r\n\r\n                const CORRECTED_SL = SLX + SPRITE_SPEED;\r\n\r\n\r\n\r\n                if (ST_above_BE && ST_above_TE) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SL > ORX && SLY < ORY) {\r\n                    continue;\r\n                }\r\n                else if (CORRECTED_SL > ORX && SRY > OLY) {\r\n                    continue;\r\n                }\r\n                else if (ST_below_BE === false) {\r\n                    if (SLSR_between_LERE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'bottom'\r\n                        };\r\n                    }\r\n                    else if (SL_before_LE && SR_between_LERE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'bottom'\r\n                        };\r\n                    }\r\n                    else if (SR_after_RE && SL_between_LERE) {\r\n                        return {\r\n                            status: true,\r\n                            object: OBSTACLE,\r\n                            edge: 'bottom'\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        status: false,\r\n        object: undefined,\r\n        edge: undefined\r\n    };\r\n};\r\n\r\nexport function checkCollisionWithLeftEdgesOfObstacles(sprite) {\r\n    return checkCollisionWithObstacles(sprite, 'left');\r\n};\r\n\r\nexport function checkCollisionWithRightEdgesOfObstacles(sprite) {\r\n    return checkCollisionWithObstacles(sprite, 'right');\r\n};\r\n\r\nexport function checkCollisionWithTopEdgesOfObstacles(sprite) {\r\n    return checkCollisionWithObstacles(sprite, 'top');\r\n};\r\n\r\nexport function checkCollisionWithBottomEdgesOfObstacles(sprite) {\r\n    return checkCollisionWithObstacles(sprite, 'bottom');\r\n};\r\n","import * as checks from '../helpers/checks.js';\r\nimport { Sprite } from './base/base.js';\r\nimport { NON_PLAYER_ENTITIES } from '../core/collision.js';\r\nimport { Item } from '../sprites/base/base.js';\r\nimport { updatePlayerHealthStatus } from '../core/hud.js';\r\n\r\nimport {\r\n    showDeathScreen,\r\n    hideDeathScreen\r\n} from '../core/death_screen.js';\r\n\r\nimport {\r\n    toggleCrosshair,\r\n    Weapon,\r\n    Gun\r\n} from './weapons.js';\r\n\r\nimport {\r\n    Obstacle,\r\n    ObstacleFill\r\n} from '../sprites/objects.js';\r\n\r\nimport {\r\n    checkCollisionWithBottomEdgesOfObstacles,\r\n    checkCollisionWithLeftEdgesOfObstacles,\r\n    checkCollisionWithRightEdgesOfObstacles,\r\n    checkCollisionWithTopEdgesOfObstacles\r\n} from '../core/collision.js';\r\nimport {SOUND_ASSETS_FOLDER} from \"../helpers/urls\";\r\n\r\n\r\n\r\nexport class Entity extends Sprite {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.movementOffset = 5;\r\n\r\n        this.events = {\r\n            move: [],\r\n            onChangeFrame: []\r\n        };\r\n\r\n        this.itemInstance = null;\r\n        this.equippedItem = null;\r\n\r\n\r\n\r\n        this.addEvent('onChangeFrame', () => {\r\n            if (this.itemInstance !== null) {\r\n                this.sprite_container.removeChild(this.equippedItem);\r\n\r\n                if (this.itemInstance instanceof Weapon) {\r\n                    this.__renderWeapon__(this.itemInstance, this.currentFrame);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    __renderWeapon__(weapon, frame) {\r\n        checks.checkIfInstance(weapon, Weapon);\r\n        checks.checkIfString(frame);\r\n\r\n        if (frame === 'n' || frame === 'nl' || frame === 'nr') {\r\n            this.equippedItem = weapon.loadNorth();\r\n\r\n            this.sprite_container.addChildAt(this.equippedItem, 0);\r\n\r\n            return;\r\n        }\r\n        else if (frame === 's' || frame === 'sl' || frame === 'sr') {\r\n            this.equippedItem = weapon.loadSouth();\r\n        }\r\n        else if (frame === 'w' || frame === 'wl' || frame === 'wr') {\r\n            this.equippedItem = weapon.loadWest();\r\n        }\r\n        else if (frame === 'e' || frame === 'el' || frame === 'er') {\r\n            this.equippedItem = weapon.loadEast();\r\n        }\r\n\r\n        this.sprite_container.addChild(this.equippedItem);\r\n    };\r\n\r\n    getSpeed() {\r\n        return this.movementOffset;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    equip(item) {\r\n        checks.checkIfInstance(item, Item);\r\n\r\n        this.itemInstance = item;\r\n\r\n        if (item instanceof Weapon) {\r\n            this.__renderWeapon__(item, this.currentFrame);\r\n        }\r\n    };\r\n\r\n    unequip() {\r\n        this.sprite_container.removeChild(this.equippedItem);\r\n\r\n        this.itemInstance = null;\r\n        this.equippedItem = null;\r\n    };\r\n\r\n    showDamage() {\r\n        this.sprite.tint = 0xff0000;\r\n    };\r\n\r\n    hideDamage() {\r\n        this.sprite.tint = this.original_tint;\r\n    };\r\n\r\n    setSpeed(speed) {\r\n        checks.checkIfNumber(speed);\r\n\r\n        this.movementOffset = speed;\r\n    };\r\n\r\n    moveSprite(x, y) {\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        this.sprite_container.x += x;\r\n        this.sprite_container.y += y;\r\n\r\n\r\n\r\n        const EVENT = this.events['move'];\r\n\r\n        if (EVENT !== undefined && EVENT !== null) {\r\n            const EVENT_CALLBACKS = EVENT;\r\n            const NUM_OF_CALLBACKS = EVENT_CALLBACKS.length;\r\n\r\n            for (let i=0; i < NUM_OF_CALLBACKS; i++) {\r\n                EVENT_CALLBACKS[i]({\r\n                    currentFrame: this.currentFrame\r\n                });\r\n            }\r\n        } \r\n    };\r\n\r\n    moveSpriteNorth() {\r\n        this.moveSprite(0, -this.movementOffset);\r\n    };\r\n\r\n    moveSpriteNorthWest() {\r\n        this.moveSprite(-this.movementOffset, -this.movementOffset);\r\n    };\r\n\r\n    moveSpriteNorthEast() {\r\n        this.moveSprite(this.movementOffset, -this.movementOffset);\r\n    };\r\n\r\n    moveSpriteWest() {\r\n        this.moveSprite(-this.movementOffset, 0);\r\n    };\r\n\r\n    moveSpriteEast() {\r\n        this.moveSprite(this.movementOffset, 0);\r\n    };\r\n\r\n    moveSpriteSouth() {\r\n        this.moveSprite(0, this.movementOffset);\r\n    };\r\n\r\n    moveSpriteSouthWest() {\r\n        this.moveSprite(-this.movementOffset, this.movementOffset);\r\n    };\r\n\r\n    moveSpriteSouthEast() {\r\n        this.moveSprite(this.movementOffset, this.movementOffset);\r\n    };\r\n};\r\n\r\nexport class Player extends Entity {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.health = 100;\r\n        this.invincibility = false;\r\n        this.currentPoints = 1000;\r\n\r\n\r\n\r\n        let reset_to_idle_timer = null;\r\n\r\n        this.addEvent('move', (event) => {\r\n            clearTimeout(reset_to_idle_timer);\r\n\r\n            reset_to_idle_timer = setTimeout(() => {\r\n                this.rotateToMouse(); // resets player sprite to the idle frame\r\n            }, 100);\r\n\r\n\r\n\r\n            // moving animation for hands\r\n            if (new Date().getMilliseconds() % 2 === 0) {\r\n                if (event.currentFrame === 's' || event.currentFrame === 'sr') {\r\n                    this.switchFrame('sl');\r\n                }\r\n                else if (event.currentFrame === 'sl') {\r\n                    this.switchFrame('sr');\r\n                }\r\n                else if (event.currentFrame === 'e' || event.currentFrame === 'er') {\r\n                    this.switchFrame('el');\r\n                }\r\n                else if (event.currentFrame === 'w' || event.currentFrame === 'wr') {\r\n                    this.switchFrame('wl');\r\n                }\r\n                else if (event.currentFrame === 'wl') {\r\n                    this.switchFrame('wr');\r\n                }\r\n                else if (event.currentFrame === 'e' || event.currentFrame === 'er') {\r\n                    this.switchFrame('el');\r\n                }\r\n                else if (event.currentFrame === 'el') {\r\n                    this.switchFrame('er');\r\n                }\r\n                else if (event.currentFrame === 'n' || event.currentFrame === 'nr') {\r\n                    this.switchFrame('nl');\r\n                }\r\n                else if (event.currentFrame === 'nl') {\r\n                    this.switchFrame('nr');\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    isInvincible() {\r\n        return this.invincibility;\r\n    };\r\n\r\n    getHealth() {\r\n        return this.health;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    rotateToMouse() {\r\n        const PLAYER_CENTER = this.getCenterCoordinates(); // relative to parent\r\n        let player_sprite_parent = this.sprite_container.parent;\r\n\r\n        let corrected_offsetX = PLAYER_CENTER.x + player_sprite_parent.x;\r\n        let corrected_offsetY = PLAYER_CENTER.y + player_sprite_parent.y;\r\n\r\n        while (player_sprite_parent.parent !== null) {\r\n            player_sprite_parent = player_sprite_parent.parent;\r\n\r\n            corrected_offsetX += player_sprite_parent.x;\r\n            corrected_offsetY += player_sprite_parent.y;\r\n        }\r\n\r\n        const MOUSE_X_DISTANCE_FROM_PLAYER = window.mouseX - corrected_offsetX;\r\n        const MOUSE_Y_DISTANCE_FROM_PLAYER = window.mouseY - corrected_offsetY;\r\n        const MOUSE_ANGLE_FROM_PLAYER = Math.round(Math.atan2(MOUSE_Y_DISTANCE_FROM_PLAYER, MOUSE_X_DISTANCE_FROM_PLAYER) * 180 / Math.PI);\r\n\r\n        /*\r\n            -90\r\n        -180    0\r\n            90\r\n        */\r\n\r\n        if (MOUSE_ANGLE_FROM_PLAYER >= -145 && MOUSE_ANGLE_FROM_PLAYER <= -45) {\r\n            this.switchFrame('n');\r\n        }\r\n        else if (MOUSE_ANGLE_FROM_PLAYER >= -180 && MOUSE_ANGLE_FROM_PLAYER < -145 || MOUSE_ANGLE_FROM_PLAYER <= 180 && MOUSE_ANGLE_FROM_PLAYER > 145 ) {\r\n            this.switchFrame('w');\r\n        }\r\n        else if (MOUSE_ANGLE_FROM_PLAYER <= 145 && MOUSE_ANGLE_FROM_PLAYER > 45) {\r\n            this.switchFrame('s');\r\n        }\r\n        else if (MOUSE_ANGLE_FROM_PLAYER >= 0 && MOUSE_ANGLE_FROM_PLAYER <= 45 || MOUSE_ANGLE_FROM_PLAYER < 0 && MOUSE_ANGLE_FROM_PLAYER > -45) {\r\n            this.switchFrame('e');\r\n        }\r\n    };\r\n\r\n    activateInvincibility() {\r\n        this.invincibility = true;\r\n\r\n        setTimeout(() => {\r\n            this.invincibility = false;\r\n\r\n            this.hideDamage();\r\n        }, 1000);\r\n    };\r\n\r\n    setHealth(health) {\r\n        checks.checkIfNumber(health);\r\n\r\n        this.health = health;\r\n    };\r\n\r\n    increaseHealth(value) {\r\n        checks.checkIfNumber(value);\r\n\r\n        this.health += value;\r\n\r\n        if (this.health > 100) {\r\n            this.health = 100;\r\n        }\r\n\r\n        updatePlayerHealthStatus(this.health);\r\n    };\r\n\r\n    decreaseHealth(value) {\r\n        checks.checkIfNumber(value);\r\n\r\n        this.health -= value;\r\n\r\n        this.showDamage();\r\n        updatePlayerHealthStatus(this.health);\r\n\r\n        if (this.health < 0) {\r\n            this.health = 0;\r\n        }\r\n\r\n        if (this.health === 0) {\r\n            this.sprite.parent.removeChild(this.sprite); // un-renders player\r\n\r\n            showDeathScreen();\r\n        }\r\n    };\r\n};\r\n\r\nexport class Enemy extends Entity {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.navigationMode = 0;\r\n        this.objectCollidedWith = null;\r\n        this.edgeCollidedWith = null;\r\n        this.detourChosen = null;\r\n        this.detourPointIndex = 0;\r\n        this.isDead = false\r\n\r\n        NON_PLAYER_ENTITIES.push(this);\r\n\r\n\r\n\r\n        this.sprite_container.interactive = true;\r\n\r\n        this.sprite_container.on('mousedown', (event) => {\r\n            event.stopPropagation();\r\n\r\n            if (window.HOTBAR !== undefined && window.HOTBAR !== null) {\r\n                const SELECTED_ITEM = window.HOTBAR.getSelItem();\r\n\r\n                if (SELECTED_ITEM instanceof Gun) {\r\n                    SELECTED_ITEM.fire();\r\n\r\n                    if (SELECTED_ITEM.ammoLoaded > 0) {\r\n                        this.decreaseHealth(SELECTED_ITEM.getDamage());\r\n\r\n                        this.showDamage();\r\n\r\n                        setTimeout(() => {\r\n                            this.hideDamage();\r\n                        }, 500);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sprite_container.on('mousemove', () => {\r\n            toggleCrosshair(this.sprite_container);\r\n        });\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    __getMoveDirectionFromAngle__(angle) {\r\n        checks.checkIfNumber(angle);\r\n\r\n        if (angle >= -120 && angle <= -60) {\r\n            return 'n';\r\n        }\r\n        else if (angle >= -150 && angle <= -120) {\r\n            return 'nw';\r\n        }\r\n        else if ((angle >= -180 && angle <= -150) || (angle <= 180 && angle >= 150)) {\r\n            return 'w';\r\n        }\r\n        else if (angle <= 150 && angle >= 120) {\r\n            return 'sw';\r\n        }\r\n        else if (angle <= 120 && angle >= 60) {\r\n            return 's';\r\n        }\r\n        else if (angle <= 60 && angle >= 30) {\r\n            return 'se';\r\n        }\r\n        else if ((angle <= 30 && angle >= 0) || (angle <= 0 && angle >= -30)) {\r\n            return 'e';\r\n        }\r\n        else if (angle <= -30 && angle >= -60) {\r\n            return 'ne';\r\n        }\r\n    };\r\n\r\n    __getEnemyXandYDistanceFromPlayer__(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        const PLAYER_SPRITE = player.getSprite();\r\n        const PLAYER_CENTER = player.getCenterCoordinates();\r\n        const ENEMY_CENTER = this.getCenterCoordinates(); // relative to parent\r\n\r\n        const ENEMY_X_DISTANCE_FROM_PLAYER = (PLAYER_CENTER.x + PLAYER_SPRITE.x) - (ENEMY_CENTER.x + this.sprite_container.x);\r\n        const ENEMY_Y_DISTANCE_FROM_PLAYER = (PLAYER_CENTER.y + PLAYER_SPRITE.y) - (ENEMY_CENTER.y + this.sprite_container.y);\r\n\r\n        return {\r\n            dx: ENEMY_X_DISTANCE_FROM_PLAYER,\r\n            dy: ENEMY_Y_DISTANCE_FROM_PLAYER\r\n        };\r\n    };\r\n\r\n    __getAngleToPlayer__(player) {\r\n        /*\r\n            -90\r\n        -180    0\r\n            90\r\n        */\r\n\r\n        const DISTANCES = this.__getEnemyXandYDistanceFromPlayer__(player);\r\n\r\n        return Math.round(Math.atan2(DISTANCES.dy, DISTANCES.dx) * 180 / Math.PI);\r\n    };\r\n\r\n    getClosestDetour(object, edge) {\r\n        if (object instanceof Obstacle === false && object instanceof ObstacleFill === false) {\r\n            return; // silently fail\r\n        }\r\n\r\n        checks.checkIfString(edge);\r\n        edge = edge.toLowerCase();\r\n\r\n        if (edge !== 'bottom' && edge !== 'top' && edge !== 'left' && edge !== 'right') {\r\n            throw ReferenceError(\"Edge can only be one of the following: top, bottom, left, right\");\r\n        }\r\n\r\n        const ALL_DETOURS = object.getDetours(edge);\r\n\r\n        const ENTITY_CENTER = this.getCenterCoordinates();\r\n\r\n        let closestDetour = null;\r\n        let previousDistance = null;\r\n        const NUM_OF_DETOURS = ALL_DETOURS.length;\r\n\r\n        for (let i=0; i < NUM_OF_DETOURS; i++) {\r\n            const START_OF_DETOUR = ALL_DETOURS[i][0];\r\n\r\n            const DISTANCE = Math.round(Math.sqrt(Math.pow(ENTITY_CENTER.x - START_OF_DETOUR.x, 2) + Math.pow(ENTITY_CENTER.y - START_OF_DETOUR.y, 2)));\r\n\r\n            if (closestDetour === null || DISTANCE < previousDistance) {\r\n                closestDetour = ALL_DETOURS[i];\r\n                previousDistance = DISTANCE;\r\n            }\r\n        }\r\n\r\n        if (closestDetour !== null) {\r\n            return [...closestDetour];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    __switchFrameToAngle__(angle) {\r\n        if (angle >= -145 && angle <= -45) {\r\n            this.switchFrame('n');\r\n        }\r\n        else if (angle >= -180 && angle < -145 || angle <= 180 && angle > 145 ) {\r\n            this.switchFrame('w');\r\n        }\r\n        else if (angle <= 145 && angle > 45) {\r\n            this.switchFrame('s');\r\n        }\r\n        else if (angle >= 0 && angle <= 45 || angle < 0 && angle > -45) {\r\n            this.switchFrame('e');\r\n        }\r\n    };\r\n\r\n    rotateToPlayer(player) {\r\n        const PLAYER_ANGLE_FROM_ENEMY = this.__getAngleToPlayer__(player);\r\n\r\n        this.__switchFrameToAngle__(PLAYER_ANGLE_FROM_ENEMY);\r\n    };\r\n\r\n    stopFollowingPlayerAndMoveAroundObject(collision_data) {\r\n        checks.checkIfObject(collision_data);\r\n\r\n        if (collision_data.object instanceof Obstacle === false && collision_data.object instanceof ObstacleFill === false) {\r\n            throw TypeError(\"Object must be an obstacle.\");\r\n        }\r\n\r\n        if (collision_data.edge === undefined) {\r\n            throw SyntaxError(\"Collision data is missing edge information.\");\r\n        }\r\n\r\n        checks.checkIfString(collision_data.edge);\r\n\r\n        this.navigationMode = 1;\r\n        this.objectCollidedWith = collision_data.object;\r\n        this.edgeCollidedWith = collision_data.edge;\r\n    };\r\n\r\n    stopFollowingDetourAndChasePlayerAgain(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        this.detourChosen = null;\r\n        this.detourPointIndex = 0;\r\n\r\n        this.navigationMode = 0;\r\n        this.objectCollidedWith = null;\r\n        this.edgeCollidedWith = null;\r\n\r\n        this.__switchFrameToAngle__(this.__getAngleToPlayer__(player));\r\n    };\r\n\r\n    moveToPlayer(player) {\r\n        const PLAYER_ANGLE_FROM_ENEMY = this.__getAngleToPlayer__(player);\r\n\r\n        if (this.navigationMode === 0) {\r\n            // going after player\r\n\r\n            const DIRECTION = this.__getMoveDirectionFromAngle__(PLAYER_ANGLE_FROM_ENEMY);\r\n\r\n            const BEC = checkCollisionWithBottomEdgesOfObstacles(this);\r\n            const TEC = checkCollisionWithTopEdgesOfObstacles(this);\r\n\r\n            if (DIRECTION === 'e' || DIRECTION === 'ne' || DIRECTION === 'se') {\r\n                const LEC = checkCollisionWithLeftEdgesOfObstacles(this);\r\n\r\n                switch (DIRECTION) {\r\n                    case 'e':\r\n                        if (LEC.status === false) {\r\n                            this.moveSpriteEast();\r\n                        }\r\n                        else if (LEC.status === true) {\r\n                            this.stopFollowingPlayerAndMoveAroundObject(LEC);\r\n                        }\r\n                        break;\r\n                    case 'ne':\r\n                        if (BEC.status === false && LEC.status === false) {\r\n                            this.moveSpriteNorthEast();\r\n                        }\r\n                        break;\r\n                    case 'se':\r\n                        if (TEC.status === false && LEC.status === false) {\r\n                            this.moveSpriteSouthEast();\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else if (DIRECTION === 'w' || DIRECTION === 'nw' || DIRECTION === 'sw') {\r\n                const REC = checkCollisionWithRightEdgesOfObstacles(this);\r\n\r\n                switch (DIRECTION) {\r\n                    case 'w':\r\n                        if (REC.status === false) {\r\n                            this.moveSpriteWest();\r\n                        }\r\n                        else if (REC.status === true) {\r\n                            this.stopFollowingPlayerAndMoveAroundObject(REC);\r\n                        }\r\n                        break;\r\n                    case 'nw':\r\n                        if (BEC.status === false && REC.status === false) {\r\n                            this.moveSpriteNorthWest();\r\n                        }\r\n                        break;\r\n                    case 'sw':\r\n                        if (TEC.status === false && REC.status === false) {\r\n                            this.moveSpriteSouthWest();\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else if (DIRECTION === 'n') {\r\n                if (BEC.status === false) {\r\n                    this.moveSpriteNorth();\r\n                }\r\n                else if (BEC.status === true) {\r\n                    this.stopFollowingPlayerAndMoveAroundObject(BEC);\r\n                }\r\n            }\r\n            else if (DIRECTION === 's') {\r\n                if (TEC.status === false) {\r\n                    this.moveSpriteSouth();\r\n                }\r\n                else if (TEC.status === true) {\r\n                    this.stopFollowingPlayerAndMoveAroundObject(TEC);\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // deals damage to player on contact\r\n            if (player.isInvincible() === false && player.getHealth() > 0 && this.sprite.alpha >= 1) {\r\n                const DIFFERENCES = this.__getEnemyXandYDistanceFromPlayer__(player);\r\n\r\n                const DISTANCE_BETWEEN_ENEMY_CENTER_AND_PLAYER_CENTER = Math.sqrt(Math.pow(DIFFERENCES.dx, 2) + Math.pow(DIFFERENCES.dy, 2));\r\n\r\n                if (DISTANCE_BETWEEN_ENEMY_CENTER_AND_PLAYER_CENTER <= 40) {\r\n                    this.__damagePlayer___(player);\r\n                }\r\n            }\r\n        }\r\n        else if (this.navigationMode === 1) {\r\n            // going around object\r\n\r\n            const DISTANCE_DIFFERENCE = this.__getEnemyXandYDistanceFromPlayer__(player);\r\n\r\n            const DISTANCE_BETWEEN_ENEMY_AND_PLAYER = Math.round(Math.sqrt(Math.pow(DISTANCE_DIFFERENCE.dx, 2) + Math.pow(DISTANCE_DIFFERENCE.dy, 2)));\r\n\r\n\r\n\r\n            if (this.detourChosen === null && this.edgeCollidedWith !== null) {\r\n                this.detourChosen = this.getClosestDetour(this.objectCollidedWith, this.edgeCollidedWith); // gets copy of saved detours\r\n            }\r\n            else if (this.detourChosen !== null && this.detourChosen.constructor === Array) {\r\n                const NUM_OF_DETOURS = this.detourChosen.length;\r\n\r\n                if (NUM_OF_DETOURS > 0) {\r\n                    const POINT = this.detourChosen[this.detourPointIndex];\r\n                    const ENEMY_CENTER = this.getCenterCoordinates();\r\n                    const DISTANCE_BETWEEN_ENEMY_AND_POINT = Math.round(Math.sqrt(Math.pow(ENEMY_CENTER.x - POINT.x, 2) + Math.pow(ENEMY_CENTER.y - POINT.y, 2)));\r\n\r\n                    // compares distance between enemy and current point to the distance between enemy and the player\r\n                    if (DISTANCE_BETWEEN_ENEMY_AND_POINT < DISTANCE_BETWEEN_ENEMY_AND_PLAYER) {\r\n                        this.moveToDetourPoint(POINT);\r\n                    }\r\n                    else {\r\n                        this.stopFollowingDetourAndChasePlayerAgain(player);\r\n\r\n                        return;\r\n                    }\r\n\r\n                    // moves the enemy to the next point\r\n                    if (Math.round(ENEMY_CENTER.x) === POINT.x && Math.round(ENEMY_CENTER.y) === POINT.y) {\r\n                        this.detourPointIndex += 1;\r\n                    }\r\n\r\n                    // stop following detour since the last point has been reached\r\n                    if (this.detourPointIndex === this.detourChosen.length) {\r\n                        this.stopFollowingDetourAndChasePlayerAgain(player);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    moveToDetourPoint(point) {\r\n        checks.checkIfObject(point);\r\n\r\n        if (point.x === undefined || point.y === undefined) {\r\n            throw SyntaxError(\"Point must be an object with x and y as properties.\");\r\n        }\r\n\r\n        checks.checkIfNumber(point.x);\r\n        checks.checkIfNumber(point.y);\r\n\r\n        const ENEMY_CENTER = this.getCenterCoordinates();\r\n        const ANGLE_TO_DETOUR = Math.round(Math.atan2(point.y - ENEMY_CENTER.y, point.x - ENEMY_CENTER.x) * 180 / Math.PI);\r\n\r\n        this.__switchFrameToAngle__(ANGLE_TO_DETOUR);\r\n\r\n        const DIRECTION = this.__getMoveDirectionFromAngle__(ANGLE_TO_DETOUR);\r\n\r\n        switch (DIRECTION) {\r\n            case 'n':\r\n                this.moveSpriteNorth();\r\n                break;\r\n            case 'nw':\r\n                this.moveSpriteNorthWest();\r\n                break;\r\n            case 'w':\r\n                this.moveSpriteWest();\r\n                break;\r\n            case 'sw':\r\n                this.moveSpriteSouthWest();\r\n                break;\r\n            case 's':\r\n                this.moveSpriteSouth();\r\n                break;\r\n            case 'se':\r\n                this.moveSpriteSouthEast();\r\n                break;\r\n            case 'e':\r\n                this.moveSpriteEast();\r\n                break;\r\n            case 'ne':\r\n                this.moveSpriteNorthEast();\r\n                break;\r\n        }\r\n    };\r\n\r\n    decreaseHealth(value) {\r\n        checks.checkIfNumber(value);\r\n\r\n        this.health -= value;\r\n    };\r\n\r\n    removeSelf(){\r\n        if (this.health <= 0) {\r\n            // references to enemy get deleted so that its instance can be put in the garbage collector (memory optimization)\r\n            new Audio(this.deathSoundFile).play()\r\n            this.sprite_container.parent.removeChild(this.sprite_container);\r\n\r\n            NON_PLAYER_ENTITIES.splice(NON_PLAYER_ENTITIES.indexOf(this), 1);\r\n            return true\r\n        }\r\n        return false\r\n\r\n    }\r\n};\r\n\r\nexport class Zombie extends Enemy {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.health = 100;\r\n        this.damage = 20;\r\n        this.deathSoundFile = `${SOUND_ASSETS_FOLDER}/zombie-death.mp3` //https://www.fesliyanstudios.com/royalty-free-sound-effects-download/zombie-174\r\n\r\n        this.setSpeed(0.5);\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    __damagePlayer___(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        player.decreaseHealth(this.damage);\r\n\r\n        player.activateInvincibility();\r\n    };\r\n};\r\n","import * as checks from '../../helpers/checks.js';\r\n\r\nexport class Sprite {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        checks.checkIfInstance(texture, PIXI.Texture);\r\n        checks.checkIfNumber(posX);\r\n        checks.checkIfNumber(posY);\r\n        checks.checkIfNumber(frameWidth);\r\n        checks.checkIfNumber(frameHeight);\r\n\r\n        this.sprite = new PIXI.Sprite(texture);\r\n        this.spriteFrameWidth = frameWidth;\r\n        this.spriteFrameHeight = frameHeight;\r\n\r\n        this.sprite_container = new PIXI.Container();\r\n        this.sprite_container.addChild(this.sprite);\r\n        this.sprite_container.x = posX;\r\n        this.sprite_container.y = posY;\r\n\r\n        this.original_tint = this.sprite.tint;\r\n        this.frameMask = null;\r\n        this.frames = {};\r\n        this.currentFrame = null;\r\n\r\n        this.isFlippedHorizontally = false;\r\n        this.isFlippedVertically = false;\r\n\r\n        this.events = {};\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getLeftPosX() {\r\n        if (this.isFlippedHorizontally) {\r\n            return this.sprite_container.x - this.spriteFrameWidth;\r\n        }\r\n        else {\r\n            return this.sprite_container.x;\r\n        }\r\n    };\r\n\r\n    getLeftPosY() {\r\n        if (this.isFlippedVertically) {\r\n            return this.sprite_container.y - this.spriteFrameHeight;\r\n        }\r\n        else {\r\n            return this.sprite_container.y;\r\n        }\r\n    };\r\n\r\n    getRightPosX() {\r\n        if (this.isFlippedHorizontally) {\r\n            return this.sprite_container.x;\r\n        }\r\n        else {\r\n            return this.sprite_container.x + this.spriteFrameWidth;\r\n        }\r\n    };\r\n\r\n    getRightPosY() {\r\n        if (this.isFlippedVertically) {\r\n            return this.sprite_container.y;\r\n        }\r\n        else {\r\n            return this.sprite_container.y + this.spriteFrameHeight;\r\n        }\r\n    };\r\n\r\n    getCenterCoordinates() {\r\n        return {\r\n            x: this.getLeftPosX() + this.getHalfWidth(),\r\n            y: this.getLeftPosY() + this.getHalfHeight() \r\n        };\r\n    };\r\n\r\n    getSpriteFrameDimensions() {\r\n        return {w: this.spriteFrameWidth, h: this.spriteFrameHeight};\r\n    };\r\n\r\n    getHalfWidth() {\r\n        return this.spriteFrameWidth * 0.5;\r\n    };\r\n\r\n    getHalfHeight() {\r\n        return this.spriteFrameHeight * 0.5;\r\n    };\r\n\r\n    getCurrentFrame() {\r\n        return this.currentFrame;\r\n    };\r\n\r\n    getSprite() {\r\n        return this.sprite_container;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    __setFrameMask__(x, y, frameWidth, frameHeight) {\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n        checks.checkIfNumber(frameWidth);\r\n        checks.checkIfNumber(frameHeight);\r\n\r\n        this.sprite_container.removeChild(this.frameMask); // removes old frame mask\r\n\r\n        const MASK = new PIXI.Graphics();\r\n        MASK.beginFill('black');\r\n        MASK.drawRect(x, y, frameWidth, frameHeight);\r\n        MASK.endFill();\r\n\r\n        this.sprite.mask = MASK;\r\n        this.sprite_container.addChild(MASK);\r\n        this.frameMask = MASK;\r\n\r\n        this.spriteFrameWidth = frameWidth;\r\n        this.spriteFrameHeight = frameHeight;\r\n    };\r\n\r\n    setPosition(x, y) {\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        this.sprite_container.x = x;\r\n        this.sprite_container.y = y;\r\n    };\r\n\r\n    addEvent(event, callback) {\r\n        checks.checkIfString(event);\r\n        checks.checkIfFunction(callback);\r\n\r\n        if (this.events[event] === undefined) {\r\n            throw ReferenceError(\"Not a valid event\");\r\n        }\r\n\r\n        this.events[event].push(callback);\r\n    };\r\n\r\n    addFrame(name, x, y, w, h) {\r\n        checks.checkIfString(name);\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n        checks.checkIfNumber(w);\r\n        checks.checkIfNumber(h);\r\n\r\n        this.frames[name] = {\r\n            x: x,\r\n            y: y,\r\n            w: w,\r\n            h: h\r\n        };\r\n    };\r\n\r\n    addFrames(json) {\r\n        checks.checkIfObject(json);\r\n\r\n        const FRAME_NAMES = Object.keys(json);\r\n        const NUM_OF_FRAMES = FRAME_NAMES.length;\r\n\r\n        if (NUM_OF_FRAMES > 0) {\r\n            for (let i=0; i < NUM_OF_FRAMES; i++) {\r\n                const NAME = FRAME_NAMES[i];\r\n                const FRAME_DATA = json[NAME];\r\n\r\n                this.addFrame(\r\n                    NAME,\r\n                    FRAME_DATA.x,\r\n                    FRAME_DATA.y,\r\n                    FRAME_DATA.w,\r\n                    FRAME_DATA.h\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    switchFrame(name) {\r\n        const FRAME = this.frames[name];\r\n\r\n        this.sprite.x = -FRAME.x;\r\n        this.sprite.y = -FRAME.y;\r\n\r\n        this.__setFrameMask__(0, 0, FRAME.w, FRAME.h);\r\n\r\n        this.currentFrame = name;\r\n\r\n\r\n\r\n        const EVENT = this.events['onChangeFrame'];\r\n\r\n        if (EVENT !== undefined && EVENT !== null) {\r\n            const EVENT_CALLBACKS = EVENT;\r\n            const NUM_OF_CALLBACKS = EVENT_CALLBACKS.length;\r\n\r\n            for (let i=0; i < NUM_OF_CALLBACKS; i++) {\r\n                EVENT_CALLBACKS[i]({\r\n                    currentFrame: this.currentFrame\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    flipHorizontally() {\r\n        // adding/subtracting the frame width ensures that the sprite is still in the same x-position after the flip\r\n\r\n        if (this.isFlippedHorizontally) {\r\n            this.sprite_container.scale.x = 1;\r\n            this.sprite_container.x -= this.spriteFrameWidth;\r\n\r\n            this.isFlippedHorizontally = false;\r\n        }\r\n        else {\r\n            this.sprite_container.scale.x = -1;\r\n            this.sprite_container.x += this.spriteFrameWidth;\r\n\r\n            this.isFlippedHorizontally = true;\r\n        }\r\n    };\r\n\r\n    flipVertically() {\r\n        // adding/subtracting the frame height ensures that the sprite is still in the same y-position after the flip\r\n\r\n        if (this.isFlippedVertically) {\r\n            this.sprite_container.scale.y = 1;\r\n            this.sprite_container.y -= this.spriteFrameHeight;\r\n\r\n            this.isFlippedVertically = false;\r\n        }\r\n        else {\r\n            this.sprite_container.scale.y = -1;\r\n            this.sprite_container.y += this.spriteFrameHeight;\r\n\r\n            this.isFlippedVertically = true;\r\n        }\r\n    };\r\n};\r\n\r\nexport class FillSprite {\r\n    constructor(color, posX, posY, width, height) {\r\n        checks.checkIfNumber(color);\r\n        checks.checkIfNumber(posX);\r\n        checks.checkIfNumber(posY);\r\n        checks.checkIfNumber(width);\r\n        checks.checkIfNumber(height);\r\n\r\n        this.FILL = new PIXI.Graphics();\r\n        this.FILL.beginFill(color);\r\n        this.FILL.drawRect(0, 0, width, height);\r\n        this.FILL.endFill();\r\n        this.sprite = this.FILL;\r\n\r\n        this.sprite.x = posX;\r\n        this.sprite.y = posY;\r\n\r\n        this.fillWidth = width;\r\n        this.fillHeight = height;\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getLeftPosX() {\r\n        return this.sprite.x;\r\n    };\r\n\r\n    getLeftPosY() {\r\n        return this.sprite.y;\r\n    };\r\n\r\n    getRightPosX() {\r\n        return this.sprite.x + this.fillWidth;\r\n    };\r\n\r\n    getRightPosY() {\r\n        return this.sprite.y + this.fillHeight;\r\n    };\r\n\r\n    getCenterCoordinates() {\r\n        return {\r\n            x: this.getLeftPosX() + this.getHalfWidth(),\r\n            y: this.getLeftPosY() + this.getHalfHeight() \r\n        };\r\n    };\r\n\r\n    getFillDimensions() {\r\n        return {w: this.fillWidth, h: this.fillHeight};\r\n    };\r\n\r\n    getHalfWidth() {\r\n        return this.fillWidth * 0.5;\r\n    };\r\n\r\n    getHalfHeight() {\r\n        return this.fillHeight * 0.5;\r\n    };\r\n\r\n    getSprite() {\r\n        return this.sprite;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    setPosition(x, y) {\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        this.sprite.x = x;\r\n        this.sprite.y = y;\r\n    };\r\n\r\n    setFillDimensions(w, h) {\r\n        checks.checkIfNumber(w);\r\n        checks.checkIfNumber(h);\r\n\r\n        this.fillWidth = w;\r\n        this.fillHeight = h;\r\n    };\r\n\r\n    setAlpha(alpha) {\r\n        checks.checkIfNumber(alpha);\r\n\r\n        if (alpha < 0 || alpha > 1) {\r\n            throw Error(\"Alpha must be a value between 0 and 1.\");\r\n        }\r\n\r\n        this.FILL.alpha = alpha;\r\n    };\r\n};\r\n\r\n\r\n\r\nexport class Item {\r\n    constructor(texture) {\r\n        checks.checkIfInstance(texture, PIXI.Texture);\r\n\r\n        this.texture = texture;\r\n        this.icon = new PIXI.Sprite(texture);\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getIcon() {\r\n        return this.icon;\r\n    };\r\n};\r\n","import * as checks from '../helpers/checks.js';\r\nimport { Gun } from '../sprites/weapons.js';\r\n\r\nconst HUD_TEXT_STYLES = {\r\n    fontSize: 20,\r\n    fill: 0xffffff,\r\n};\r\n\r\n\r\n\r\nexport const PLAYER_HEALTH_STATUS = new PIXI.Text('Health: 100', HUD_TEXT_STYLES);\r\nPLAYER_HEALTH_STATUS.x = 20;\r\nPLAYER_HEALTH_STATUS.y = 10;\r\n\r\nexport function updatePlayerHealthStatus(new_value) {\r\n    checks.checkIfNumber(new_value);\r\n\r\n    PLAYER_HEALTH_STATUS.text = 'Health: ' + new_value;\r\n};\r\n\r\nexport const PLAYER_POINTS = new PIXI.Text('Points: 1000', HUD_TEXT_STYLES);\r\nPLAYER_POINTS.x = 300;\r\nPLAYER_POINTS.y = 10;\r\n\r\n\r\n\r\nexport function updatePlayerPointsText(new_value) {\r\n    checks.checkIfNumber(new_value);\r\n\r\n    PLAYER_POINTS.text = 'Points: ' + new_value;\r\n};\r\n\r\n\r\n\r\nexport const AMMO_COUNT = new PIXI.Text('Ammo: n/a', HUD_TEXT_STYLES);\r\nAMMO_COUNT.x = 160;\r\nAMMO_COUNT.y = 10;\r\n\r\nexport function updateAmmoCount(gun) {\r\n    checks.checkIfInstance(gun, Gun);\r\n\r\n    AMMO_COUNT.text = `Ammo: ${gun.getAmmoLoaded()}/${gun.getAmmoLeft()}`;\r\n};\r\n\r\nexport function hideAmmoCount() {\r\n    AMMO_COUNT.text = '';\r\n};","import * as checks from '../helpers/checks.js';\r\nimport { Item } from './base/base.js'; \r\nimport { updateAmmoCount } from '../core/hud.js';\r\n\r\nimport {\r\n    STATIC_ASSETS_FOLDER,\r\n    SOUND_ASSETS_FOLDER\r\n} from '../helpers/urls.js';\r\n\r\n\r\n\r\nexport function toggleCrosshair(container) {\r\n    checks.checkIfInstance(container, PIXI.Container);\r\n\r\n    if (window.HOTBAR !== undefined && window.HOTBAR !== null) {\r\n        if (window.HOTBAR.getSelItem() instanceof Gun) {\r\n            container.cursor = `url(${STATIC_ASSETS_FOLDER}/guns/crosshair.png), auto`;\r\n        }\r\n        else {\r\n            container.cursor = 'auto';\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nexport class Weapon extends Item {\r\n    constructor(texture) {\r\n        super(texture);\r\n\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    createCopy(texture, x, y, w, h) {\r\n        checks.checkIfInstance(texture, PIXI.Texture);\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n        checks.checkIfNumber(w);\r\n        checks.checkIfNumber(h);\r\n\r\n        const COPY = new PIXI.Sprite(this.texture);\r\n        COPY.x = x;\r\n        COPY.y = y;\r\n        COPY.width = w;\r\n        COPY.height = h;\r\n\r\n        return COPY;\r\n    };\r\n};\r\n\r\nexport class Gun extends Weapon {\r\n    constructor(texture) {\r\n        super(texture);\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getAmmoLoaded() {\r\n        if (this.ammoLoaded < 0) {\r\n            return 0;\r\n        }\r\n\r\n        return this.ammoLoaded;\r\n    };\r\n\r\n    getMaxAmmo(){\r\n        return this.maxAmmo\r\n    }\r\n\r\n    getAmmoLeft() {\r\n        return this.ammoLeft;\r\n    };\r\n\r\n    getClipCapacity() {\r\n        return this.clipCapacity;\r\n    };\r\n\r\n    playGunFireSound() {\r\n        new Audio(this.gunFireSoundFile).play();\r\n    };\r\n\r\n    playReloadSound() {\r\n        const AUDIO = new Audio(this.reloadSoundFile);\r\n\r\n        AUDIO.play();\r\n\r\n        return AUDIO;\r\n    };\r\n\r\n    getDamage() {\r\n        return this.damage;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    fire() {\r\n        if (this.mode === 'semi-auto') {\r\n            this.ammoLoaded -= 1;\r\n        }\r\n\r\n        if (this.ammoLoaded > -1) {\r\n            this.playGunFireSound();\r\n\r\n            updateAmmoCount(this);\r\n        }\r\n\r\n        if (this.ammoLoaded === 0 && this.ammoLeft > 0) {\r\n            this.reload();\r\n        }\r\n    };\r\n\r\n    reload() {\r\n        this.playReloadSound();\r\n\r\n        setTimeout(() => {\r\n            if (this.ammoLoaded <= 0) {\r\n                // clip is empty (auto reload)\r\n\r\n                if (this.ammoLeft >= 12) {\r\n                    this.ammoLeft -= this.clipCapacity;\r\n\r\n                    this.ammoLoaded = this.clipCapacity;\r\n                }\r\n                else if (this.ammoLeft < 12) {\r\n                    this.ammoLoaded = this.ammoLeft;\r\n\r\n                    this.ammoLeft -= this.ammoLeft;\r\n                }\r\n            }\r\n            else if (this.ammoLoaded > 0) {\r\n                // clip is not empty (manual reload)\r\n\r\n                const AMMO_NEEDED = this.clipCapacity - this.ammoLoaded;\r\n\r\n                if (this.ammoLeft >= AMMO_NEEDED) {\r\n                    this.ammoLoaded += AMMO_NEEDED;\r\n\r\n                    this.ammoLeft -= AMMO_NEEDED;\r\n                }\r\n                else if (this.ammoLeft < AMMO_NEEDED) {\r\n                    this.ammoLoaded += this.ammoLeft;\r\n\r\n                    this.ammoLeft -= this.ammoLeft;\r\n                }\r\n            }\r\n\r\n            updateAmmoCount(this);\r\n\r\n        }, this.reloadDuration);\r\n    };\r\n\r\n    addMaxAmmo(amount){\r\n        this.ammoLeft = amount;\r\n\r\n        updateAmmoCount(this);\r\n    };\r\n\r\n    setDamage(amount){\r\n        this.damage = amount\r\n    }\r\n\r\n    increaseDamage(amount){\r\n        this.damage += amount\r\n    }\r\n\r\n    increaseClipCapacity(amount){\r\n        this.clipCapacity += amount\r\n    }\r\n\r\n    increaseMaxAmmo(amount){\r\n        this.maxAmmo += amount\r\n    }\r\n\r\n\r\n\r\n};\r\n\r\nexport class Pistol extends Gun {\r\n    constructor(texture) {\r\n        super(texture);\r\n\r\n        this.gunFireSoundFile = `${SOUND_ASSETS_FOLDER}/pistol.mp3`;\r\n        this.reloadSoundFile = `${SOUND_ASSETS_FOLDER}/pistol_reload.mp3`;\r\n        this.reloadDuration = 1000; // milliseconds\r\n\r\n        this.mode = 'semi-auto';\r\n\r\n        this.clipCapacity = 12;\r\n        this.ammoLoaded = this.clipCapacity;\r\n        this.ammoLeft = 60;\r\n        this.maxAmmo = this.ammoLeft\r\n        this.damage = 25;\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    loadNorth() {\r\n        const PISTOL = this.createCopy(this.texture, 25, 18, 25, 25);\r\n\r\n        PISTOL.scale.y = -1;\r\n        PISTOL.rotation = 4.6;\r\n\r\n        return PISTOL;\r\n    };\r\n\r\n    loadSouth() {\r\n        const PISTOL = this.createCopy(this.texture, 0, 20, 25, 25);\r\n\r\n        PISTOL.scale.y = -1;\r\n        PISTOL.rotation = 1.5;\r\n\r\n        return PISTOL;\r\n    };\r\n\r\n    loadWest() {\r\n        const PISTOL = this.createCopy(this.texture, 18, 8, 25, 25);\r\n\r\n        PISTOL.scale.x = -1;\r\n\r\n        return PISTOL;\r\n    };\r\n\r\n    loadEast() {\r\n        const PISTOL = this.createCopy(this.texture, 5, 8, 25, 25);\r\n\r\n        return PISTOL;\r\n    };\r\n};","const ABSOLUTE_URL = window.location.href;\r\nconst CURRENT_WORKING_DIRECTORY = ABSOLUTE_URL.substring(0, ABSOLUTE_URL.indexOf('/static/'));\r\n\r\nexport const STATIC_FOLDER = `${CURRENT_WORKING_DIRECTORY}/static`;\r\n\r\nexport const STATIC_JS_FOLDER = `${STATIC_FOLDER}/js`;\r\n\r\nexport const STATIC_ASSETS_FOLDER = `${STATIC_FOLDER}/assets`;\r\n\r\nexport const SOUND_ASSETS_FOLDER = `${STATIC_ASSETS_FOLDER}/sounds`;\r\n","import * as checks from '../helpers/checks.js';\r\n\r\nimport {\r\n    Sprite,\r\n    FillSprite\r\n} from './base/base.js';\r\n\r\n\r\n\r\nexport class Objects extends Sprite {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n    };\r\n};\r\n\r\nexport class Obstacle extends Objects {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.detours = {\r\n            'top': [],\r\n            'bottom': [],\r\n            'left': [],\r\n            'right': []\r\n        };\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    checkIfLeftEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\r\n            // if the sprite's bottom edge is higher than the object's top edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\r\n            // if the sprite's top edge is lower than the object's bottom edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosX() < this.getLeftPosX()) {\r\n            // if the sprite's right edge is far from the object's left edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getLeftPosX()) {\r\n            // if the sprite's left edge is beyond the object's left edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    checkIfRightEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\r\n            // if the sprite's bottom edge is higher than the object's top edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\r\n            // if the sprite's top edge is lower than the object's bottom edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\r\n            // if the sprite's left edge is far from the object's right edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosX() < this.getRightPosX()) {\r\n            // if the sprite's right edge is beyond the object's right edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    checkIfTopEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\r\n            // if the sprite's right edge is far from the object's left edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\r\n            // if the sprite's left edge is far from the object's right edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosY() < this.getLeftPosY()) {\r\n            // if the sprite's bottom edge is higher than the object's top edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getLeftPosY()) {\r\n            // if the sprite's top edge is beyond the object's top edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    checkIfBottomEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\r\n            // if the sprite's right edge is far from the object's left edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\r\n            // if the sprite's left edge is far from the object's right edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\r\n            // if the sprite's top edge is lower than the object's bottom edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosY() < this.getRightPosY()) {\r\n            // if the sprite's bottom edge is beyond the object's bottom edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    getDetours(edge) {\r\n        checks.checkIfString(edge);\r\n\r\n        return this.detours[edge];\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    __addDetour__(array_of_points, edge) {\r\n        checks.checkIfArray(array_of_points);\r\n        checks.checkIfString(edge);\r\n\r\n        const NUM_OF_ELEMENTS = array_of_points.length;\r\n\r\n        for (let i=0; i < NUM_OF_ELEMENTS; i++) {\r\n            const E = array_of_points[i];\r\n\r\n            checks.checkIfObject(E);\r\n\r\n            if (E.x === undefined || E.y === undefined) {\r\n                throw SyntaxError(`Element ${i} is not a valid point object. It must have an x and a y property`);\r\n            }\r\n\r\n            checks.checkIfNumber(E.x);\r\n            checks.checkIfNumber(E.y);\r\n        }\r\n\r\n        this.detours[edge].push(array_of_points);\r\n    };\r\n\r\n    addBottomEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'bottom');\r\n    };\r\n\r\n    addTopEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'top');\r\n    };\r\n\r\n    addLeftEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'left');\r\n    };\r\n\r\n    addRightEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'right');\r\n    };\r\n};\r\n\r\nexport class Decoration extends Objects {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n    };\r\n};\r\n\r\nexport class SemiSolid extends Obstacle {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.boundaryLeftX = 0;\r\n        this.boundaryLeftY = 0;\r\n        this.boundaryRightX = 0;\r\n        this.boundaryRightY = 0;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    modifyCollisionBoundary(leftX, leftY, rightX, rightY) {\r\n        if (leftX !== null && leftX !== undefined) {\r\n            checks.checkIfNumber(leftX);\r\n            this.boundaryLeftX = leftX;\r\n        }\r\n        if (leftY !== null && leftY !== undefined) {\r\n            checks.checkIfNumber(leftY);\r\n            this.boundaryLeftY = leftY;\r\n        }\r\n        if (rightX !== null && rightX !== undefined) {\r\n            checks.checkIfNumber(rightX);\r\n            this.boundaryRightX = rightX;\r\n        }\r\n        if (rightY !== null && rightY !== undefined) {\r\n            checks.checkIfNumber(rightY);\r\n            this.boundaryRightY = rightY;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getLeftPosX() {\r\n        if (this.isFlippedHorizontally) {\r\n            return (this.sprite_container.x + this.boundaryLeftX) - this.spriteFrameWidth;\r\n        }\r\n        else {\r\n            return this.sprite_container.x + this.boundaryLeftX;\r\n        }\r\n    };\r\n\r\n    getLeftPosY() {\r\n        if (this.isFlippedVertically) {\r\n            return (this.sprite_container.y + this.boundaryLeftY) - this.spriteFrameHeight;\r\n        }\r\n        else {\r\n            return this.sprite_container.y + this.boundaryLeftY;\r\n        }\r\n    };\r\n\r\n    getRightPosX() {\r\n        if (this.isFlippedHorizontally) {\r\n            return this.sprite_container.x + this.boundaryLeftX;\r\n        }\r\n        else {\r\n            return this.sprite_container.x + (this.spriteFrameWidth + this.boundaryRightX);\r\n        }\r\n    };\r\n\r\n    getRightPosY() {\r\n        if (this.isFlippedVertically) {\r\n            return this.sprite_container.y + this.boundaryLeftY;\r\n        }\r\n        else {\r\n            return this.sprite_container.y + (this.spriteFrameHeight + this.boundaryRightY);\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\nexport class ObstacleFill extends FillSprite {\r\n    constructor(color, posX, posY, width, height) {\r\n        super(color, posX, posY, width, height);\r\n\r\n        this.detours = {\r\n            'top': [],\r\n            'bottom': [],\r\n            'left': [],\r\n            'right': []\r\n        };\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    checkIfLeftEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\r\n            // if the sprite's bottom edge is higher than the object's top edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\r\n            // if the sprite's top edge is lower than the object's bottom edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosX() < this.getLeftPosX()) {\r\n            // if the sprite's right edge is far from the object's left edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getLeftPosX()) {\r\n            // if the sprite's left edge is beyond the object's left edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    checkIfRightEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosY() < this.getLeftPosY()) {\r\n            // if the sprite's bottom edge is higher than the object's top edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\r\n            // if the sprite's top edge is lower than the object's bottom edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\r\n            // if the sprite's left edge is far from the object's right edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosX() < this.getRightPosX()) {\r\n            // if the sprite's right edge is beyond the object's right edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    checkIfTopEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\r\n            // if the sprite's right edge is far from the object's left edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\r\n            // if the sprite's left edge is far from the object's right edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosY() < this.getLeftPosY()) {\r\n            // if the sprite's bottom edge is higher than the object's top edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getLeftPosY()) {\r\n            // if the sprite's top edge is beyond the object's top edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    checkIfBottomEdgeCollisionOccurred(sprite) {\r\n        checks.checkIfInstance(sprite, Sprite);\r\n\r\n        if (sprite.getRightPosX() < this.getLeftPosX()) {\r\n            // if the sprite's right edge is far from the object's left edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosX() > this.getRightPosX()) {\r\n            // if the sprite's left edge is far from the object's right edge\r\n            return false;\r\n        }\r\n        else if (sprite.getLeftPosY() > this.getRightPosY()) {\r\n            // if the sprite's top edge is lower than the object's bottom edge\r\n            return false;\r\n        }\r\n        else if (sprite.getRightPosY() < this.getRightPosY()) {\r\n            // if the sprite's bottom edge is beyond the object's bottom edge\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    getDetours(edge) {\r\n        checks.checkIfString(edge);\r\n\r\n        return this.detours[edge];\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    __addDetour__(array_of_points, edge) {\r\n        checks.checkIfArray(array_of_points);\r\n        checks.checkIfString(edge);\r\n\r\n        const NUM_OF_ELEMENTS = array_of_points.length;\r\n\r\n        for (let i=0; i < NUM_OF_ELEMENTS; i++) {\r\n            const E = array_of_points[i];\r\n\r\n            checks.checkIfObject(E);\r\n\r\n            if (E.x === undefined || E.y === undefined) {\r\n                throw SyntaxError(`Element ${i} is not a valid point object. It must have an x and a y property`);\r\n            }\r\n\r\n            checks.checkIfNumber(E.x);\r\n            checks.checkIfNumber(E.y);\r\n        }\r\n\r\n        this.detours[edge].push(array_of_points);\r\n    };\r\n\r\n    addBottomEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'bottom');\r\n    };\r\n\r\n    addTopEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'top');\r\n    };\r\n\r\n    addLeftEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'left');\r\n    };\r\n\r\n    addRightEdgeDetour(array_of_points) {\r\n        this.__addDetour__(array_of_points, 'right');\r\n    };\r\n};\r\n\r\nexport class DecorationFill extends FillSprite {\r\n    constructor(color, posX, posY, width, height) {\r\n        super(color, posX, posY, width, height);\r\n    };\r\n};\r\n\r\nexport class SemiSolidFill extends ObstacleFill {\r\n    constructor(color, posX, posY, width, height) {\r\n        super(color, posX, posY, width, height);\r\n\r\n        this.boundaryLeftX = 0;\r\n        this.boundaryLeftY = 0;\r\n        this.boundaryRightX = 0;\r\n        this.boundaryRightY = 0;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    modifyCollisionBoundary(leftX, leftY, rightX, rightY) {\r\n        if (leftX !== null && leftX !== undefined) {\r\n            checks.checkIfNumber(leftX);\r\n            this.boundaryLeftX = leftX;\r\n        }\r\n        if (leftY !== null && leftY !== undefined) {\r\n            checks.checkIfNumber(leftY);\r\n            this.boundaryLeftY = leftY;\r\n        }\r\n        if (rightX !== null && rightX !== undefined) {\r\n            checks.checkIfNumber(rightX);\r\n            this.boundaryRightX = rightX;\r\n        }\r\n        if (rightY !== null && rightY !== undefined) {\r\n            checks.checkIfNumber(rightY);\r\n            this.boundaryRightY = rightY;\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getLeftPosX() {\r\n        return this.sprite.x + this.boundaryLeftX;\r\n    };\r\n\r\n    getLeftPosY() {\r\n        return this.sprite.y + this.boundaryLeftY;\r\n    };\r\n\r\n    getRightPosX() {\r\n        return this.sprite.x + (this.fillWidth + this.boundaryRightX);\r\n    };\r\n\r\n    getRightPosY() {\r\n        return this.sprite.y + (this.fillHeight + this.boundaryRightY);\r\n    };\r\n};\r\n","const DEATH_SCREEN = document.getElementById('death-screen');\r\nconst TIME_SURVIVED = document.getElementById('time-survived');\r\nconst POINTS_EARNED = document.getElementById('points-earned');\r\n\r\nDEATH_SCREEN.addEventListener('click', (event) => {\r\n    const ELEMENT_CLICKED = event.target;\r\n\r\n    if (ELEMENT_CLICKED.tagName === 'BUTTON') {\r\n        const ACTION = ELEMENT_CLICKED.getAttribute('data-action');\r\n\r\n        if (ACTION === 'exit') {\r\n            window.location.assign('/');\r\n        }\r\n    };\r\n});\r\n\r\nexport function showDeathScreen() {\r\n    window.GAME_PAUSED = true;\r\n\r\n\r\n\r\n    // calculates how long the player survived\r\n    const MS_ELAPSED = new Date() - window.timeGameStarted;\r\n    const HRS = Math.round(MS_ELAPSED / 3.6e+6);\r\n    const MINS = Math.round(MS_ELAPSED / 60000);\r\n    const SECS = Math.round(MS_ELAPSED / 1000);\r\n\r\n    let hrs = 0;\r\n    let mins = 0;\r\n    let secs = 0;\r\n\r\n    if (HRS > 0.1) {\r\n        hrs = HRS;\r\n    }\r\n    if (MINS > 0.1) {\r\n        mins = MINS;\r\n    }\r\n    if (SECS > 0.1) {\r\n        secs = SECS;\r\n    }\r\n\r\n    TIME_SURVIVED.innerText = `${hrs}h:${mins}m:${secs}s`;\r\n\r\n\r\n\r\n    DEATH_SCREEN.classList.remove('hide');\r\n};","import * as checks from '../helpers/checks.js';\r\nimport { Player } from './entities.js';\r\nimport { Objects } from './objects.js';\r\nimport { Gun } from './weapons.js';\r\n\r\n\r\nexport const INTERACTABLES = [];\r\n\r\n\r\nexport class Interactable extends Objects {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.areaOfEffect = 20; // adds extra area for the interactble range\r\n    };\r\n\r\n\r\n\r\n\r\n    // GETTERS\r\n    playerIsNearInteractable(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        const PLAYER_CENTER = player.getCenterCoordinates();\r\n\r\n        const PLAYER_INSIDE_LR_EDGES = PLAYER_CENTER.x > (this.getLeftPosX() - this.areaOfEffect) && PLAYER_CENTER.x < (this.getRightPosX() + this.areaOfEffect);\r\n\r\n        const PLAYER_INSIDE_TB_EDGES = PLAYER_CENTER.y > (this.getLeftPosY() - this.areaOfEffect) && PLAYER_CENTER.y < (this.getRightPosY() + this.areaOfEffect);\r\n\r\n        if (PLAYER_INSIDE_LR_EDGES && PLAYER_INSIDE_TB_EDGES) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n\r\n\r\n    // SETTERS\r\n    setAreaOfEffect(value) {\r\n        checks.checkIfNumber(value);\r\n\r\n        this.areaOfEffect = value;\r\n    };\r\n\r\n\r\n\r\n};\r\n\r\nexport class AmmoCache extends Interactable {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n        this.pointCost = 500\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    resupply(gun) {\r\n        checks.checkIfInstance(gun, Gun);\r\n\r\n        gun.addMaxAmmo(gun.getMaxAmmo());\r\n\r\n        gun.playReloadSound();\r\n\r\n\r\n    };\r\n\r\n\r\n};\r\n\r\n\r\nexport class UpgradeBench extends Interactable {\r\n    constructor(texture, posX, posY, frameWidth, frameHeight) {\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n        this.pointCost = 1000\r\n    };\r\n\r\n    upgradeGun(gun,option){\r\n        checks.checkIfInstance(gun, Gun);\r\n        //true = upgrade ammo, false = upgrade damage\r\n        if (option){\r\n            gun.increaseMaxAmmo(10)\r\n            gun.increaseClipCapacity(3)\r\n        } else {\r\n            gun.increaseDamage(10)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import * as checks from '../helpers/checks.js';\r\nimport { PlayableArea } from \"../map/creation.js\";\r\nimport { Player } from './entities.js';\r\n\r\nimport {\r\n    Decoration,\r\n    DecorationFill\r\n} from \"./objects.js\";\r\n\r\nexport const PORTALS = [];\r\n\r\nexport class Portal extends Decoration {\r\n    constructor(origin, texture, posX, posY, frameWidth, frameHeight) {\r\n        checks.checkIfInstance(origin, PlayableArea);\r\n\r\n        super(texture, posX, posY, frameWidth, frameHeight);\r\n\r\n        this.origin = origin;\r\n        this.destination = null;\r\n        this.dest_X = null;\r\n        this.dest_Y = null; \r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    playerIsInsidePortal(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        const PLAYER_CENTER = player.getCenterCoordinates();\r\n\r\n        if (PLAYER_CENTER.x > this.getLeftPosX() && PLAYER_CENTER.x < this.getRightPosX() && PLAYER_CENTER.y > this.getLeftPosY() && PLAYER_CENTER.y < this.getRightPosY()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    setDestination(playableArea, x, y) {\r\n        checks.checkIfInstance(playableArea, PlayableArea);\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        this.destination = playableArea;\r\n\r\n        this.dest_X = x;\r\n        this.dest_Y = y;\r\n    };\r\n\r\n    teleport(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        const GAME_STAGE = this.origin.area.parent;\r\n\r\n        this.origin.unload();\r\n        GAME_STAGE.removeChild(this.origin.area);\r\n\r\n        GAME_STAGE.addChild(this.destination.load());\r\n        this.destination.addDynamicSprite(\r\n            player,\r\n            'player',\r\n            this.dest_X,\r\n            this.dest_Y\r\n        );\r\n    };\r\n};\r\n\r\nexport class PortalFill extends DecorationFill {\r\n    constructor(origin, color, posX, posY, width, height) {\r\n        checks.checkIfInstance(origin, PlayableArea);\r\n\r\n        super(color, posX, posY, width, height);\r\n\r\n        this.origin = origin;\r\n        this.destination = null;\r\n        this.dest_X = null;\r\n        this.dest_Y = null; \r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    playerIsInsidePortal(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        const PLAYER_CENTER = player.getCenterCoordinates();\r\n\r\n        if (PLAYER_CENTER.x > this.getLeftPosX() && PLAYER_CENTER.x < this.getRightPosX() && PLAYER_CENTER.y > this.getLeftPosY() && PLAYER_CENTER.y < this.getRightPosY()) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    setDestination(playableArea, x, y) {\r\n        checks.checkIfInstance(playableArea, PlayableArea);\r\n        checks.checkIfNumber(x);\r\n        checks.checkIfNumber(y);\r\n\r\n        this.destination = playableArea;\r\n\r\n        this.dest_X = x;\r\n        this.dest_Y = y;\r\n    };\r\n\r\n    teleport(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        const GAME_STAGE = this.origin.area.parent;\r\n\r\n        this.origin.unload();\r\n        GAME_STAGE.removeChild(this.origin.area);\r\n\r\n        GAME_STAGE.addChild(this.destination.load());\r\n        this.destination.addDynamicSprite(\r\n            player,\r\n            'player',\r\n            this.dest_X,\r\n            this.dest_Y\r\n        );\r\n    };\r\n};\r\n","import * as checks from './checks.js';\r\n\r\nimport {\r\n    STATIC_JS_FOLDER,\r\n    STATIC_ASSETS_FOLDER\r\n} from './urls.js';\r\n\r\n\r\n\r\nexport function getTextureFromStaticJSFolder(path) {\r\n    checks.checkIfString(path);\r\n\r\n    if (path[0] !== '/') {\r\n        throw ReferenceError(\"Paths must start with /\");\r\n    }\r\n\r\n    return PIXI.Texture.from(`${STATIC_JS_FOLDER}${path}`);\r\n};\r\n\r\nexport function getTextureFromStaticAssetsFolder(path) {\r\n    checks.checkIfString(path);\r\n\r\n    if (path[0] !== '/') {\r\n        throw ReferenceError(\"Paths must start with /\");\r\n    }\r\n\r\n    return PIXI.Texture.from(`${STATIC_ASSETS_FOLDER}${path}`);\r\n};\r\n","import { PlayableArea } from '../creation.js';\r\nimport { getTextureFromStaticJSFolder } from '../../helpers/pixi_helpers.js';\r\nimport { Portal } from '../../sprites/portals.js';\r\n\r\nimport {\r\n    Decoration,\r\n    SemiSolid,\r\n    SemiSolidFill\r\n} from '../../sprites/objects.js';\r\n\r\n\r\n\r\nexport const LIBRARY = (function () {\r\n    const LIBRARY = new PlayableArea(512, 256);\r\n    LIBRARY.addEnemySpawnPoint(LIBRARY.getHalfWidth() + 130, 50);\r\n    LIBRARY.addEnemySpawnPoint(LIBRARY.getHalfWidth(), LIBRARY.getHeight() - 30);\r\n\r\n    const FLOOR = new Decoration(getTextureFromStaticJSFolder('/map/library/assets/libraryfloor.png'), 0, 0, 512, 256);\r\n    LIBRARY.addStaticSprite(\r\n        FLOOR, \r\n        'libraryfloor', \r\n        0,\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_1 = new SemiSolidFill(0x000000, 0, 0, LIBRARY.getWidth(), 10);\r\n    BARRIER_1.modifyCollisionBoundary(null, null, null, -BARRIER_1.getHalfHeight());\r\n    LIBRARY.addStaticSprite(\r\n        BARRIER_1,\r\n        'barrier1',\r\n        0,\r\n        -BARRIER_1.getFillDimensions().h\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_2 = new SemiSolidFill(0x000000, 0, 0, LIBRARY.getWidth(), 10);\r\n    LIBRARY.addStaticSprite(\r\n        BARRIER_2,\r\n        'barrier2',\r\n        0,\r\n        LIBRARY.getHeight()\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_3 = new SemiSolidFill(0x000000, 0, 0, 10, LIBRARY.getHeight());\r\n    BARRIER_3.modifyCollisionBoundary(null, null, -3, null);\r\n    LIBRARY.addStaticSprite(\r\n        BARRIER_3,\r\n        'barrier3',\r\n        -BARRIER_3.getFillDimensions().w,\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_4 = new SemiSolidFill(0x000000, 0, 0, 10, LIBRARY.getHeight());\r\n    BARRIER_4.modifyCollisionBoundary(-3, null, null, null);\r\n    LIBRARY.addStaticSprite(\r\n        BARRIER_4,\r\n        'barrier4',\r\n        LIBRARY.getWidth(),\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const SECOND_FLOOR_MAT = new Portal(LIBRARY, getTextureFromStaticJSFolder('/map/library/assets/mat2.png'), 0, 0, 32, 34);\r\n    LIBRARY.addStaticSprite(\r\n        SECOND_FLOOR_MAT,\r\n        '2f_mat',\r\n        LIBRARY.getWidth() - (SECOND_FLOOR_MAT.getSpriteFrameDimensions().w + 495),\r\n        20\r\n    );\r\n\r\n\r\n\r\n    const BOOKSHELF_1 = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/bookshelf.png'), 0, 0, 95, 97);\r\n    BOOKSHELF_1.modifyCollisionBoundary(\r\n        null,\r\n        BOOKSHELF_1.getSpriteFrameDimensions().h - 30, null,\r\n        null\r\n    );\r\n    LIBRARY.addDynamicSprite(\r\n        BOOKSHELF_1,\r\n        'bookshelf1',\r\n        LIBRARY.getWidth() - BOOKSHELF_1.getSpriteFrameDimensions().w,\r\n        LIBRARY.getHeight() - (BOOKSHELF_1.getSpriteFrameDimensions().h + 50)\r\n    );\r\n\r\n\r\n\r\n    const BOOKSHELF_2 = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/bookshelf.png'), 0, 0, 95, 97);\r\n    BOOKSHELF_2.modifyCollisionBoundary(\r\n        null,\r\n        BOOKSHELF_2.getSpriteFrameDimensions().h - 30, null,\r\n        null\r\n    );\r\n    LIBRARY.addDynamicSprite(\r\n        BOOKSHELF_2,\r\n        'bookshelf2',\r\n        LIBRARY.getWidth() - BOOKSHELF_2.getSpriteFrameDimensions().w,\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const CHAIR_A = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/chairA.png'), 0, 0, 75, 48);\r\n    LIBRARY.addStaticSprite(\r\n        CHAIR_A,\r\n        'chairA',\r\n        20,\r\n        LIBRARY.getHeight() - (CHAIR_A.getSpriteFrameDimensions().h + 15)\r\n    );\r\n\r\n\r\n\r\n    const CHAIR_B = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/chairB.png'), 0, 0, 48, 75);\r\n    CHAIR_B.modifyCollisionBoundary(\r\n        null,\r\n        40,\r\n        null,\r\n        null\r\n    );\r\n    LIBRARY.addDynamicSprite(\r\n        CHAIR_B,\r\n        'chairB',\r\n        130,\r\n        LIBRARY.getHeight() - (CHAIR_B.getSpriteFrameDimensions().h + 75)\r\n    );\r\n\r\n\r\n\r\n    const MATBLUE = new Decoration(getTextureFromStaticJSFolder('/map/library/assets/matBlue.png'), 0, 0, 71, 54);\r\n    LIBRARY.addStaticSprite(\r\n        MATBLUE,\r\n        'matblue',\r\n        120,\r\n        LIBRARY.getHeight() - (MATBLUE.getSpriteFrameDimensions().h + 12)\r\n    );\r\n\r\n\r\n\r\n    const TABLELAMP = new SemiSolid(getTextureFromStaticJSFolder('/map/library/assets/tableLamp.png'), 0, 0, 95, 66);\r\n    TABLELAMP.modifyCollisionBoundary(\r\n        null,\r\n        30,\r\n        null,\r\n        null\r\n    );\r\n    LIBRARY.addDynamicSprite(\r\n        TABLELAMP,\r\n        'tablelamp',\r\n        10,\r\n        LIBRARY.getHeight() - (TABLELAMP.getSpriteFrameDimensions().h + 80)\r\n    );\r\n\r\n\r\n\r\n    const WINDOWS = new Decoration(getTextureFromStaticJSFolder('/map/library/assets/window.png'), 0, 0, 525, 75);\r\n    LIBRARY.addStaticSprite(\r\n        WINDOWS,\r\n        'window',\r\n        -6,\r\n        -(WINDOWS.getSpriteFrameDimensions().h - 5)\r\n    );\r\n\r\n\r\n\r\n    return LIBRARY; \r\n})();\r\n","import { PlayableArea } from '../creation.js';\r\nimport {getTextureFromStaticAssetsFolder, getTextureFromStaticJSFolder} from '../../helpers/pixi_helpers.js';\r\nimport { PortalFill } from '../../sprites/portals.js';\r\n\r\nimport {\r\n    Decoration,\r\n    SemiSolid,\r\n    SemiSolidFill\r\n} from '../../sprites/objects.js';\r\nimport {UpgradeBench} from \"../../sprites/interactable\";\r\n\r\n\r\n\r\nexport const BASEMENT = (function () {\r\n    const BASEMENT = new PlayableArea(555, 441);\r\n    BASEMENT.addEnemySpawnPoint(50, 50);\r\n    BASEMENT.addEnemySpawnPoint(50, BASEMENT.getHeight() - 150);\r\n    BASEMENT.addEnemySpawnPoint(280, BASEMENT.getHeight() - 30);\r\n\r\n    const FLOOR = new Decoration(getTextureFromStaticJSFolder('/map/basement/assets/basefloor.png'), 0, 0, 555, 441);\r\n    BASEMENT.addStaticSprite(\r\n        FLOOR, \r\n        'floor', \r\n        0,\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_1 = new SemiSolidFill(0x000000, 0, 0, BASEMENT.getWidth(), 10);\r\n    BARRIER_1.modifyCollisionBoundary(null, null, null, -BARRIER_1.getHalfHeight());\r\n    BASEMENT.addStaticSprite(\r\n        BARRIER_1,\r\n        'barrier1',\r\n        0,\r\n        -BARRIER_1.getFillDimensions().h\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_2 = new SemiSolidFill(0x000000, 0, 0, BASEMENT.getWidth(), 10);\r\n    BASEMENT.addStaticSprite(\r\n        BARRIER_2,\r\n        'barrier2',\r\n        0,\r\n        BASEMENT.getHeight()\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_3 = new SemiSolidFill(0x000000, 0, 0, 10, BASEMENT.getHeight());\r\n    BARRIER_3.modifyCollisionBoundary(null, null, -3, null);\r\n    BASEMENT.addStaticSprite(\r\n        BARRIER_3,\r\n        'barrier3',\r\n        -BARRIER_3.getFillDimensions().w,\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const BARRIER_4 = new SemiSolidFill(0x000000, 0, 0, 10, BASEMENT.getHeight());\r\n    BARRIER_4.modifyCollisionBoundary(-3, null, null, null);\r\n    BASEMENT.addStaticSprite(\r\n        BARRIER_4,\r\n        'barrier4',\r\n        BASEMENT.getWidth(),\r\n        0\r\n    );\r\n\r\n\r\n\r\n    const DOUBLE_DOOR = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/baseelevator.png'), 0, 0, 96, 48);\r\n    BASEMENT.addStaticSprite(\r\n        DOUBLE_DOOR,\r\n        'double_door',\r\n        BASEMENT.getHalfWidth() - DOUBLE_DOOR.getHalfWidth(),\r\n        -(DOUBLE_DOOR.getSpriteFrameDimensions().h + 1)\r\n    );\r\n\r\n\r\n\r\n    const ELEVATOR = new PortalFill(BASEMENT, 0xff0000, 0, 0, DOUBLE_DOOR.getSpriteFrameDimensions().w, 35);\r\n    ELEVATOR.setAlpha(0);\r\n    BASEMENT.addStaticSprite(\r\n        ELEVATOR,\r\n        'elevator',\r\n        DOUBLE_DOOR.getLeftPosX(),\r\n        DOUBLE_DOOR.getRightPosY()\r\n    );\r\n\r\n\r\n\r\n    const COUCH = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/basecouch.png'), 0, 0, 143, 165);\r\n    COUCH.modifyCollisionBoundary(null, 10, null, null);\r\n    BASEMENT.addStaticSprite(\r\n        COUCH,\r\n        'basecouch',\r\n        BASEMENT.getHalfWidth() + COUCH.getHalfWidth(),\r\n        BASEMENT.getHeight() - (COUCH.getSpriteFrameDimensions().h + 90)\r\n    );\r\n\r\n\r\n\r\n    const FIREPLACE = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/fireplace.png'), 0, 0, 94, 116);\r\n    FIREPLACE.modifyCollisionBoundary(null, 30, null, -10);\r\n    BASEMENT.addStaticSprite(\r\n        FIREPLACE,\r\n        'fireplace',\r\n        BASEMENT.getHalfWidth() + COUCH.getHalfWidth(),\r\n        BASEMENT.getHeight() - (COUCH.getSpriteFrameDimensions().h + 250)\r\n    );\r\n\r\n\r\n\r\n    const BROKEN_CUPBOARD = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/brokencupboard.png'), 0, 0, 80, 108);\r\n    BASEMENT.addStaticSprite(\r\n        BROKEN_CUPBOARD,\r\n        'brokencupboard',\r\n        BASEMENT.getWidth() - (BROKEN_CUPBOARD.getSpriteFrameDimensions().w + 450),\r\n        BASEMENT.getHeight() - (BROKEN_CUPBOARD.getSpriteFrameDimensions().h + 5)\r\n    );\r\n\r\n\r\n\r\n    const STACKED_CUPBOARD = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/stackedcupboard.png'), 0, 0, 48, 107);\r\n    BASEMENT.addStaticSprite(\r\n        STACKED_CUPBOARD,\r\n        'stackedcupboard',\r\n        BASEMENT.getWidth() - (STACKED_CUPBOARD.getSpriteFrameDimensions().w + 400),\r\n        BASEMENT.getHeight() - (STACKED_CUPBOARD.getSpriteFrameDimensions().h + 5)\r\n    );\r\n\r\n\r\n\r\n    const OPEN_CHEST = new SemiSolid(getTextureFromStaticJSFolder('/map/basement/assets/openchest.png'), 0, 0, 59, 63);\r\n    BASEMENT.addStaticSprite(\r\n        OPEN_CHEST,\r\n        'openchest',\r\n        BASEMENT.getWidth() - (OPEN_CHEST.getSpriteFrameDimensions().w + 340),\r\n        BASEMENT.getHeight() - (OPEN_CHEST.getSpriteFrameDimensions().h + 5)\r\n    );\r\n\r\n    const UPGRADE_BENCH = new UpgradeBench(getTextureFromStaticAssetsFolder('/consumables/ammoCache.png'), 240, 140, 50, 50);\r\n    BASEMENT.addStaticSprite(\r\n        UPGRADE_BENCH,\r\n        \"upgrade_bench1\",\r\n        240,\r\n        120\r\n    );\r\n\r\n\r\n\r\n    return BASEMENT;\r\n})();","import * as checks from '../helpers/checks.js';\r\nimport { Item } from '../sprites/base/base.js';\r\nimport { Gun } from '../sprites/weapons.js';\r\nimport { Player } from '../sprites/entities.js';\r\n\r\nimport {\r\n    updateAmmoCount,\r\n    hideAmmoCount\r\n} from './hud.js';\r\n\r\n\r\n\r\nexport class Inventory {\r\n    constructor(player, texture, posX, posY, selection_texture) {\r\n        checks.checkIfInstance(player, Player);\r\n        checks.checkIfInstance(texture, PIXI.Texture);\r\n        checks.checkIfNumber(posX);\r\n        checks.checkIfNumber(posY);\r\n        checks.checkIfInstance(selection_texture, PIXI.Texture);\r\n\r\n        this.sprite = new PIXI.Sprite(texture);\r\n\r\n        this.inventory = [\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            null,\r\n            null\r\n        ];\r\n        this.currentSelItem = null;\r\n\r\n        this.inventoryContainer = new PIXI.Container();\r\n        this.inventoryContainer.x = posX;\r\n        this.inventoryContainer.y = posY;\r\n\r\n        this.selectorSprite = new PIXI.Sprite(selection_texture);\r\n        this.selectorSprite.x = -2;\r\n        this.selectorSprite.y = -2;\r\n        this.selectorSprite.width = 36;\r\n        this.selectorSprite.height = 36;\r\n\r\n        this.inventoryContainer.addChild(this.sprite,this.selectorSprite);\r\n\r\n        this.player = player;\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    ___getPositionInInventory__(index) {\r\n        // returns x-coordinate of item\r\n\r\n        checks.checkIfNumber(index);\r\n\r\n        return -2 + ((this.selectorSprite.width - 4) * (index - 1));\r\n    };\r\n\r\n    display() {\r\n        return this.inventoryContainer;\r\n    };\r\n\r\n    getSelItem() {\r\n        return this.currentSelItem;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    addItem(item) {\r\n        checks.checkIfInstance(item, Item);\r\n\r\n        const ICON = item.getIcon();\r\n        this.inventoryContainer.addChild(ICON);\r\n\r\n        const NUM_OF_ITEMS_IN_INVENTORY = this.inventory.length;\r\n        let stored = false;\r\n\r\n        for (let i=0; i < NUM_OF_ITEMS_IN_INVENTORY; i++) {\r\n            if (this.inventory[i] === null) {\r\n                this.inventory.splice(i, 1, item);\r\n\r\n                ICON.x = this.___getPositionInInventory__(i + 1) + 2;\r\n\r\n                stored = true;\r\n\r\n                break;\r\n            }\r\n\r\n            if (i === NUM_OF_ITEMS_IN_INVENTORY && stored === false) {\r\n                // if inventory is full, ignore item?\r\n            }\r\n        }\r\n    };\r\n\r\n    changeSelItem(index) {\r\n        this.player.unequip();\r\n\r\n        const SELECTED_ITEM = this.inventory[index - 1];\r\n\r\n        this.currentSelItem = SELECTED_ITEM;\r\n\r\n        if (SELECTED_ITEM instanceof Item) {\r\n            this.player.equip(SELECTED_ITEM);\r\n\r\n            if (SELECTED_ITEM instanceof Gun) {\r\n                updateAmmoCount(SELECTED_ITEM);\r\n            }\r\n            else {\r\n                hideAmmoCount();\r\n            }\r\n        }\r\n        else {\r\n            hideAmmoCount();\r\n        }\r\n\r\n        this.selectorSprite.x = this.___getPositionInInventory__(index);\r\n    };\r\n\r\n    removeSelItem() {\r\n        const ICON = this.currentSelItem.getIcon();\r\n        const POS_IN_INVENTORY = this.inventoryContainer.getChildIndex(ICON) - 2;\r\n\r\n        this.inventoryContainer.removeChild(ICON);\r\n        this.inventory.splice(POS_IN_INVENTORY, 1, null);\r\n\r\n        this.currentSelItem = null;\r\n    };\r\n};","import * as checks from '../helpers/checks.js';\r\nimport { PlayableArea } from '../map/creation.js';\r\nimport { Wave } from './Wave.js';\r\nimport { NON_PLAYER_ENTITIES } from './collision.js';\r\nimport { STATIC_ASSETS_FOLDER } from '../helpers/urls.js';\r\n\r\nimport zombie_frames_json from \"../../assets/sprite_sheets/enemies/clothed_zombie.json\";\r\n\r\n\r\n\r\nexport class WaveSystem {\r\n    constructor(starting_map, waves, batch_delay) {\r\n        checks.checkIfInstance(starting_map, PlayableArea);\r\n\r\n        checks.checkIfArray(waves);\r\n        if (waves.length === 0) {\r\n            throw Error(\"Waves cannot be empty.\");\r\n        }\r\n        waves.every((wave) => {\r\n            if (wave instanceof Wave === false) {\r\n                throw TypeError(\"All waves must be an instance of the Wave class.\");\r\n            }\r\n        });\r\n\r\n        checks.checkIfNumber(batch_delay);\r\n\r\n\r\n\r\n        this.map = starting_map;\r\n        this.spawnPoints = starting_map.getEnemySpawnPoints(); // array containing {x: ?, y: ?}\r\n\r\n        this.current_wave_index = 0;\r\n        this.waves = waves;\r\n        this.current_wave = this.waves[0];\r\n\r\n        this.next_wave_timeout = null;\r\n        this.next_wave_delay = 3000;\r\n\r\n        this.batch_delay = batch_delay;\r\n        this.isBatchDone = false;\r\n\r\n        this.time = 0;\r\n\r\n        this.music = new Audio(`${STATIC_ASSETS_FOLDER}/sounds/haunted-harpsichord.mp3`);\r\n        this.music.volume = 0.1;\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getRandomInt(min, max) {\r\n        checks.checkIfNumber(min);\r\n        checks.checkIfNumber(max);\r\n\r\n        min = Math.ceil(min);\r\n        max = Math.floor(max);\r\n\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    };\r\n\r\n    checkIfBatchDone() {\r\n        this.isBatchDone = Math.floor(Date.now() / 1000) - this.time >= this.batch_delay;\r\n\r\n        return this.isBatchDone;\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    setWaveDelay(delay) {\r\n        checks.checkIfNumber(delay);\r\n\r\n        this.next_wave_delay = delay;\r\n    };\r\n\r\n    updatePlayableArea(playableArea) {\r\n        checks.checkIfInstance(playableArea, PlayableArea);\r\n\r\n        this.map = playableArea;\r\n        this.spawnPoints = playableArea.getEnemySpawnPoints();\r\n    };\r\n\r\n    moveToNextWaveIfFinished() {\r\n        if (this.next_wave_timeout === null && NON_PLAYER_ENTITIES.length === 0 && this.current_wave_index + 1 < this.waves.length) {\r\n            this.waves.splice(this.waves.indexOf(this.current_wave), 1, null); // the instance of the finished wave is thrown in the garbage collector\r\n\r\n            this.next_wave_timeout = setTimeout(() => {\r\n                this.current_wave_index++;\r\n\r\n                this.current_wave = this.waves[this.current_wave_index];\r\n\r\n                this.next_wave_timeout = null;\r\n            }, this.next_wave_delay);\r\n        }\r\n    };\r\n\r\n    spawnNextBatch() {\r\n        let toSpawn = this.current_wave.getNextBatch();\r\n\r\n        for (let i=0; i < toSpawn.length; i++) {\r\n            const ENEMY = toSpawn[i];\r\n            const ENEMY_DIMENSIONS = ENEMY.getSpriteFrameDimensions();\r\n            ENEMY.addFrames(zombie_frames_json);\r\n            ENEMY.switchFrame('n');\r\n\r\n            const SPAWN_LOCATION = this.spawnPoints[this.getRandomInt(0, this.spawnPoints.length - 1)];\r\n\r\n            this.map.addDynamicSprite(\r\n                ENEMY,\r\n                (Date.now() * (i+1)).toString(),\r\n                SPAWN_LOCATION.x - ENEMY_DIMENSIONS.w,\r\n                SPAWN_LOCATION.y - ENEMY_DIMENSIONS.h\r\n            );\r\n\r\n            ENEMY.sprite.alpha = 0; // prepares for fade-in animation\r\n\r\n            this.time = Math.floor(Date.now() / 1000); // gets time zombies spawned\r\n        }\r\n    };\r\n\r\n    respawnBatch() {\r\n        const NUM_OF_ENEMIES_LEFT = NON_PLAYER_ENTITIES.length;\r\n\r\n        if (NUM_OF_ENEMIES_LEFT > 0) {\r\n            for (let i=0; i < NUM_OF_ENEMIES_LEFT; i++) {\r\n                const ENEMY = NON_PLAYER_ENTITIES[i];\r\n                const ENEMY_DIMENSIONS = ENEMY.getSpriteFrameDimensions();\r\n\r\n                const SPAWN_LOCATION = this.spawnPoints[this.getRandomInt(0, this.spawnPoints.length - 1)];\r\n\r\n                this.map.addDynamicSprite(\r\n                    ENEMY,\r\n                    `zombie${i}`,\r\n                    SPAWN_LOCATION.x - ENEMY_DIMENSIONS.w,\r\n                    SPAWN_LOCATION.y - ENEMY_DIMENSIONS.h\r\n                );\r\n\r\n                ENEMY.sprite.alpha = 0;\r\n\r\n                this.time = Math.floor(Date.now() / 1000);\r\n            }\r\n        }\r\n    };\r\n\r\n    enemySpawnFadeIn() {\r\n        const NUM_OF_NPE = NON_PLAYER_ENTITIES.length;\r\n\r\n        if (NUM_OF_NPE > 0) {\r\n            for (let i=0; i < NUM_OF_NPE; i++) {\r\n                const ENEMY = NON_PLAYER_ENTITIES[i].sprite;\r\n\r\n                if (ENEMY.alpha < 1) {\r\n                    ENEMY.alpha += 0.01;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    playMusic() {\r\n        if (this.music.paused) {\r\n            this.music.play();\r\n        }\r\n    };\r\n};\r\n","import * as checks from '../helpers/checks.js';\r\nimport { Zombie } from \"../sprites/entities.js\";\r\nimport { getTextureFromStaticAssetsFolder } from '../helpers/pixi_helpers.js';\r\n\r\nimport zombie_frames_json from '../../assets/sprite_sheets/enemies/clothed_zombie.json';\r\n\r\n\r\n\r\nexport class Wave {\r\n    constructor(id, batches, difficultyMod) {\r\n        checks.checkIfArray(batches);\r\n\r\n        this.id = id; // unused as of now, might be useful later\r\n        this.batches = batches; // an array containing the number of zombies to spawn in each batch i.e. [3, 5, 7] would spawn 3 zombies, then 5, then 7\r\n\r\n\r\n        // this.zombieTypes = zombieTypes todo if we have more zombie types\r\n        this.difficultyMod = difficultyMod; // unused as of now, later I will add interaction with the zombies' stats\r\n        this.currentBatch = 0;\r\n        this.toSpawnNext = [];\r\n    };\r\n\r\n\r\n\r\n    // GETTERS\r\n    getNextBatch() {\r\n        // generates an array containing all zombies to be spawned based of the numbers in this.batches\r\n\r\n        this.toSpawnNext = [];\r\n\r\n        if (this.currentBatch >= this.batches.length) {\r\n            return 0;\r\n        }\r\n        else {\r\n            for (let i = 0; i < this.batches[this.currentBatch]; i++) {\r\n                const ZOMBIE = new Zombie(getTextureFromStaticAssetsFolder('/sprite_sheets/enemies/clothed_zombie.png'),\r\n                0,\r\n                0,\r\n                zombie_frames_json.s.w, zombie_frames_json.s.h\r\n                );\r\n\r\n                this.toSpawnNext.push(ZOMBIE);\r\n            }\r\n\r\n            this.currentBatch++;\r\n\r\n            return this.toSpawnNext;\r\n        }\r\n    };\r\n};\r\n","{\r\n\t\"el\": {\r\n\t\t\"x\": 0,\r\n\t\t\"y\": 0,\r\n\t\t\"w\": 30,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"er\": {\r\n\t\t\"x\": 33,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 29,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"e\": {\r\n\t\t\"x\": 64,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 29,\r\n\t\t\"h\": 47\r\n\t},\r\n\t\"nl\": {\r\n\t\t\"x\": 95,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 30,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"nr\": {\r\n\t\t\"x\": 127,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 30,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"n\": {\r\n\t\r\n\t\t\"x\": 159,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 29,\r\n\t\t\"h\": 47\r\n\t},\r\n\t\"sl\": {\r\n\t\t\"x\": 190,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 30,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"sr\": {\r\n\t\t\"x\": 222,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 30,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"s\": {\r\n\t\t\"x\": 254,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 29,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"wl\": {\r\n\t\t\"x\": 285,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 29,\r\n\t\t\"h\": 46\r\n\t},\r\n\t\"w\": {\r\n\t\t\"x\": 316,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 29,\r\n\t\t\"h\": 47\r\n\t},\r\n\t\"wr\": {\r\n\t\t\"x\": 347,\r\n\t\t\"y\": 1,\r\n\t\t\"w\": 29,\r\n\t\t\"h\": 46\r\n\t}\r\n}","const PAUSE_MENU = document.getElementById('pause');\r\n\r\nPAUSE_MENU.addEventListener('click', (event) => {\r\n    const ELEMENT_CLICKED = event.target;\r\n\r\n    if (ELEMENT_CLICKED.tagName === 'BUTTON') {\r\n        const ACTION = ELEMENT_CLICKED.getAttribute('data-action');\r\n\r\n        if (ACTION === 'resume') {\r\n            hidePauseMenu();\r\n        }\r\n        else if (ACTION === 'exit') {\r\n            window.location.assign('/');\r\n        }\r\n    };\r\n});\r\n\r\nexport function showPauseMenu() {\r\n    window.GAME_PAUSED = true;\r\n\r\n    PAUSE_MENU.classList.remove('hide');\r\n};\r\n\r\nexport function hidePauseMenu() {\r\n    window.GAME_PAUSED = false;\r\n\r\n    PAUSE_MENU.classList.add('hide');\r\n};","import * as checks from '../helpers/checks.js';\r\nimport { Item } from './base/base.js';\r\nimport { getTextureFromStaticAssetsFolder } from '../helpers/pixi_helpers.js';\r\nimport { Player } from './entities.js';\r\n\r\n\r\n\r\nexport class HealingItem extends Item {\r\n    constructor(texture) {\r\n        super(texture);\r\n    };\r\n\r\n\r\n\r\n    // SETTERS\r\n    heal(player) {\r\n        checks.checkIfInstance(player, Player);\r\n\r\n        player.increaseHealth(this.health);\r\n    };\r\n};\r\n\r\nexport class BandageBox extends HealingItem {\r\n    constructor() {\r\n        super(getTextureFromStaticAssetsFolder('/consumables/bandage_box.png'));\r\n\r\n        this.health = 20;\r\n    };\r\n};\r\n","import * as checks from '../helpers/checks.js';\r\nimport { Player } from '../sprites/entities.js';\r\n\r\nimport {\r\n    checkCollisionWithLeftEdgesOfObstacles,\r\n    checkCollisionWithRightEdgesOfObstacles,\r\n    checkCollisionWithTopEdgesOfObstacles,\r\n    checkCollisionWithBottomEdgesOfObstacles\r\n} from '../core/collision.js';\r\n\r\nexport const MOVEMENT_KEY_STATUSES = {\r\n    w: false,\r\n    s: false,\r\n    a: false,\r\n    d: false\r\n};\r\n\r\nexport function checkForCollisionsAndMovePlayer(sprite) {\r\n    checks.checkIfInstance(sprite, Player);\r\n\r\n    if (MOVEMENT_KEY_STATUSES.s && MOVEMENT_KEY_STATUSES.d) {\r\n        const COLLIDED_WITH_A_TOP_EDGE = checkCollisionWithTopEdgesOfObstacles(sprite).status;\r\n        const COLLIDED_WITH_A_LEFT_EDGE = checkCollisionWithLeftEdgesOfObstacles(sprite).status;\r\n\r\n        if (COLLIDED_WITH_A_TOP_EDGE === false && COLLIDED_WITH_A_LEFT_EDGE === false) {\r\n            sprite.moveSpriteSouthEast();\r\n        }\r\n        else if (COLLIDED_WITH_A_TOP_EDGE && COLLIDED_WITH_A_LEFT_EDGE === false) {\r\n            sprite.moveSpriteEast();\r\n        }\r\n        else if (COLLIDED_WITH_A_LEFT_EDGE && COLLIDED_WITH_A_TOP_EDGE === false) {\r\n            sprite.moveSpriteSouth();\r\n        }\r\n    }\r\n    else if (MOVEMENT_KEY_STATUSES.s && MOVEMENT_KEY_STATUSES.a) {\r\n        const COLLIDED_WITH_A_TOP_EDGE = checkCollisionWithTopEdgesOfObstacles(sprite).status;\r\n        const COLLIDED_WITH_A_RIGHT_EDGE = checkCollisionWithRightEdgesOfObstacles(sprite).status;\r\n\r\n        if (COLLIDED_WITH_A_TOP_EDGE === false && COLLIDED_WITH_A_RIGHT_EDGE === false) {\r\n            sprite.moveSpriteSouthWest();\r\n        }\r\n        else if (COLLIDED_WITH_A_TOP_EDGE && COLLIDED_WITH_A_RIGHT_EDGE === false) {\r\n            sprite.moveSpriteWest();\r\n        }\r\n        else if (COLLIDED_WITH_A_RIGHT_EDGE && COLLIDED_WITH_A_TOP_EDGE === false) {\r\n            sprite.moveSpriteSouth();\r\n        }\r\n    }\r\n    else if (MOVEMENT_KEY_STATUSES.w && MOVEMENT_KEY_STATUSES.d) {\r\n        const COLLIDED_WITH_A_BOTTOM_EDGE = checkCollisionWithBottomEdgesOfObstacles(sprite).status;\r\n        const COLLIDED_WITH_A_LEFT_EDGE = checkCollisionWithLeftEdgesOfObstacles(sprite).status;\r\n\r\n        if (COLLIDED_WITH_A_BOTTOM_EDGE === false && COLLIDED_WITH_A_LEFT_EDGE === false) {\r\n            sprite.moveSpriteNorthEast();\r\n        }\r\n        else if (COLLIDED_WITH_A_BOTTOM_EDGE && COLLIDED_WITH_A_LEFT_EDGE === false) {\r\n            sprite.moveSpriteEast();\r\n        }\r\n        else if (COLLIDED_WITH_A_LEFT_EDGE && COLLIDED_WITH_A_BOTTOM_EDGE === false) {\r\n            sprite.moveSpriteNorth();\r\n        }\r\n    }\r\n    else if (MOVEMENT_KEY_STATUSES.w && MOVEMENT_KEY_STATUSES.a) {\r\n        const COLLIDED_WITH_A_BOTTOM_EDGE = checkCollisionWithBottomEdgesOfObstacles(sprite).status;\r\n        const COLLIDED_WITH_A_RIGHT_EDGE = checkCollisionWithRightEdgesOfObstacles(sprite).status;\r\n\r\n        if (COLLIDED_WITH_A_BOTTOM_EDGE === false && COLLIDED_WITH_A_RIGHT_EDGE === false) {\r\n            sprite.moveSpriteNorthWest();\r\n        }\r\n        else if (COLLIDED_WITH_A_BOTTOM_EDGE && COLLIDED_WITH_A_RIGHT_EDGE === false) {\r\n            sprite.moveSpriteWest();\r\n        }\r\n        else if (COLLIDED_WITH_A_RIGHT_EDGE && COLLIDED_WITH_A_BOTTOM_EDGE === false) {\r\n            sprite.moveSpriteNorth();\r\n        }\r\n    }\r\n    else if (MOVEMENT_KEY_STATUSES.w && checkCollisionWithBottomEdgesOfObstacles(sprite).status === false) {\r\n        sprite.moveSpriteNorth();\r\n    }\r\n    else if (MOVEMENT_KEY_STATUSES.s && checkCollisionWithTopEdgesOfObstacles(sprite).status === false) {\r\n        sprite.moveSpriteSouth();\r\n    }\r\n    else if (MOVEMENT_KEY_STATUSES.a && checkCollisionWithRightEdgesOfObstacles(sprite).status === false) {\r\n        sprite.moveSpriteWest();\r\n    }\r\n    else if (MOVEMENT_KEY_STATUSES.d && checkCollisionWithLeftEdgesOfObstacles(sprite).status === false) {\r\n        sprite.moveSpriteEast();\r\n    }\r\n};\r\n","{\n\t\"e\": {\n\t\t\"x\": 0,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 32\n\t},\n\t\"el\": {\n\t\t\"x\": 23,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"er\": {\n\t\t\"x\": 46,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"n\": {\n\t\t\"x\": 69,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 32\n\t},\n\t\"nl\": {\n\t\t\"x\": 92,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"nr\": {\n\t\t\"x\": 115,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"s\": {\n\t\t\"x\": 138,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 33\n\t},\n\t\"sl\": {\n\t\t\"x\": 161,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"sr\": {\n\t\t\"x\": 184,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"w\": {\n\t\t\"x\": 207,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 32\n\t},\n\t\"wl\": {\n\t\t\"x\": 230,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t},\n\t\"wr\": {\n\t\t\"x\": 253,\n\t\t\"y\": 0,\n\t\t\"w\": 23,\n\t\t\"h\": 31\n\t}\n}","const TEXT_STYLE = {\r\n    fontSize: 20,\r\n    fill: 0xffffff,\r\n};\r\n\r\nexport const AMMO_CACHE_POPUP = new PIXI.Text(\"Press E to refill ammo.(500)\",TEXT_STYLE)\r\nAMMO_CACHE_POPUP.alpha = 0\r\nexport const PORTAL_POPUP = new PIXI.Text(\"Press Q to change rooms.\",TEXT_STYLE)\r\nPORTAL_POPUP.alpha = 0\r\nexport const UPGRADE_BENCH_POPUP = new PIXI.Text(\"CHOOSE UPGRADE(1000): E: Ammo and clip size. T: Damage\",TEXT_STYLE)\r\nUPGRADE_BENCH_POPUP.alpha = 0\r\n\r\n\r\nexport function managePopUp(popup,player,isClose){\r\n    if (isClose){\r\n        if (popup.alpha < 1.0){\r\n\r\n            popup.alpha += 0.01\r\n        }\r\n    }else {\r\n        if (popup.alpha > 0.0){\r\n\r\n            popup.alpha -= 0.01\r\n        }\r\n    }\r\n\r\n}"],"names":[],"version":3,"file":"test.js.map","sourceRoot":"/__parcel_source_root/"}